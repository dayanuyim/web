/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/css/font-awesome.css":
/*!**********************************!*\
  !*** ./app/css/font-awesome.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./app/css/font-awesome.css?");

/***/ }),

/***/ "./app/css/main.css":
/*!**************************!*\
  !*** ./app/css/main.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./app/css/main.css?");

/***/ }),

/***/ "./app/css/trk.css":
/*!*************************!*\
  !*** ./app/css/trk.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./app/css/trk.css?");

/***/ }),

/***/ "./app/index.ts":
/*!**********************!*\
  !*** ./app/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ./css/main.css */ \"./app/css/main.css\");\n__webpack_require__(/*! ./css/font-awesome.css */ \"./app/css/font-awesome.css\");\nvar templates = __webpack_require__(/*! ./templates */ \"./app/templates.ts\");\nvar trk_1 = __webpack_require__(/*! ./trk */ \"./app/trk.js\");\nfunction getText(elem) {\n    if (!elem)\n        return null;\n    return elem.innerHTML;\n}\nfunction showView() {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, view, params;\n        return __generator(this, function (_b) {\n            _a = window.location.hash.split('/'), view = _a[0], params = _a.slice(1);\n            switch (view) {\n                case '#main':\n                    return [2 /*return*/, showIndex()];\n                case '#trek':\n                    return [2 /*return*/, showTrek(params[0])];\n                default:\n                    throw Error(\"Unrecognized view: \" + view);\n            }\n            return [2 /*return*/];\n        });\n    });\n}\nfunction showIndex() {\n    document.body.innerHTML = templates.main();\n    //add link to Title\n    document.querySelectorAll(\".trk-title\").forEach(function (elem) {\n        var item = elem.closest('li');\n        var title = getText(item.querySelector('.trk-title'));\n        var days = getText(item.querySelector('.trk-days')) || 1;\n        var date = getText(item.querySelector('.trk-date'));\n        var facebook = getText(item.querySelector('.trk-facebook'));\n        var keepon = getText(item.querySelector('.trk-keepon'));\n        var id = date + \"_\" + title;\n        item.innerHTML = templates.trekItem({ id: id, title: title, date: date, days: days, facebook: facebook, keepon: keepon });\n    });\n}\nfunction showTrek(id) {\n    document.body.innerHTML = templates.trek();\n    trk_1.loadRec(id);\n}\n(function () { return __awaiter(_this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        window.addEventListener('hashchange', showView);\n        showView().catch(function (err) { return window.location.hash = '#main'; });\n        return [2 /*return*/];\n    });\n}); })();\n\n\n//# sourceURL=webpack:///./app/index.ts?");

/***/ }),

/***/ "./app/loadgpx.js":
/*!************************!*\
  !*** ./app/loadgpx.js ***!
  \************************/
/*! exports provided: GPXParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GPXParser\", function() { return GPXParser; });\n///////////////////////////////////////////////////////////////////////////////\r\n// loadgpx.4.js\r\n//\r\n// Javascript object to load GPX-format GPS data into Google Maps.\r\n//\r\n// Copyright (C) 2006 Kaz Okuda (http://notions.okuda.ca)\r\n//\r\n// This program is free software; you can redistribute it and/or\r\n// modify it under the terms of the GNU General Public License\r\n// as published by the Free Software Foundation; either version 2\r\n// of the License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program; if not, write to the Free Software\r\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n//\r\n// If you use this script or have any questions please leave a comment\r\n// at http://notions.okuda.ca/geotagging/projects-im-working-on/gpx-viewer/\r\n// A link to the GPL license can also be found there.\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n//\r\n// History:\r\n//    revision 1 - Initial implementation\r\n//    revision 2 - Removed LoadGPXFileIntoGoogleMap and made it the callers\r\n//                 responsibility.  Added more options (colour, width, delta).\r\n//    revision 3 - Waypoint parsing now compatible with Firefox.\r\n//    revision 4 - Upgraded to Google Maps API version 2.  Tried changing the way\r\n//               that the map calculated the way the center and zoom level, but\r\n//               GMAP API 2 requires that you center and zoom the map first.\r\n//               I have left the bounding box calculations commented out in case\r\n//               they might come in handy in the future.\r\n//\r\n//    5/28/2010 - Upgraded to Google Maps API v3 and refactored the file a bit.\r\n//                          (Chris Peplin)\r\n//\r\n// Author: Kaz Okuda\r\n// URI: http://notions.okuda.ca/geotagging/projects-im-working-on/gpx-viewer/\r\n//\r\n// Updated for Google Maps API v3 by Chris Peplin\r\n// Fork moved to GitHub: https://github.com/peplin/gpxviewer\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction GPXParser(xmlDoc, map, googlemaps) {\r\n    this.xmlDoc = xmlDoc;\r\n    this.map = map;\r\n    this.google = {maps: googlemaps}\r\n    this.trackcolour = \"#ff00ff\"; // red\r\n    this.trackwidth = 5;\r\n    this.mintrackpointdelta = 0.0001;\r\n\r\n    this._minlat = null;\r\n    this._maxlat = null;\r\n    this._minlon = null;\r\n    this._maxlon = null;\r\n\r\n    this._locations = [];\r\n    this._loadLocations(this._locations, \"wpt\");\r\n    this._loadLocations(this._locations, \"trkpt\");\r\n}\r\n\r\n// Set the colour of the track line segements.\r\nGPXParser.prototype.setTrackColour = function(colour) {\r\n    this.trackcolour = colour;\r\n}\r\n\r\n// Set the width of the track line segements\r\nGPXParser.prototype.setTrackWidth = function(width) {\r\n    this.trackwidth = width;\r\n}\r\n\r\n// Set the minimum distance between trackpoints.\r\n// Used to cull unneeded trackpoints from map.\r\nGPXParser.prototype.setMinTrackPointDelta = function(delta) {\r\n    this.mintrackpointdelta = delta;\r\n}\r\n\r\nGPXParser.prototype.translateName = function(name) {\r\n    if(name == \"wpt\") {\r\n        return \"Waypoint\";\r\n    }\r\n    else if(name == \"trkpt\") {\r\n        return \"Track Point\";\r\n    }\r\n}\r\n\r\nfunction arrayExists(arr){\r\n    return arr && arr.length && arr.length > 0;\r\n}\r\n\r\nGPXParser.prototype.createMarker = function(point) {\r\n    const lon = parseFloat(point.getAttribute(\"lon\"));\r\n    const lat = parseFloat(point.getAttribute(\"lat\"));\r\n\r\n    let name = point.getElementsByTagName(\"name\");\r\n    name = arrayExists(name)? name[0].innerHTML: \"\";\r\n\r\n    let sym = point.getElementsByTagName(\"sym\");\r\n    sym = arrayExists(sym)? sym[0].innerHTML: \"\";\r\n\r\n    let html = \"\";\r\n    let pointElements = point.getElementsByTagName(\"html\");\r\n    if(arrayExists(pointElements)) {\r\n        for(let i = 0; i < pointElements.item(0).childNodes.length; i++) {\r\n            html += pointElements.item(0).childNodes[i].nodeValue;\r\n        }\r\n    }\r\n    else {\r\n        // Create the html if it does not exist in the point.\r\n        html = \"<b>\" + this.translateName(point.nodeName) + \"</b><br>\";\r\n        const attributes = point.attributes;\r\n        const attrlen = attributes.length;\r\n        for(let i = 0; i < attrlen; i++) {\r\n            html += attributes.item(i).name + \" = \" +\r\n                    attributes.item(i).nodeValue + \"<br>\";\r\n        }\r\n\r\n        if(point.hasChildNodes) {\r\n            const children = point.childNodes;\r\n            const childrenlen = children.length;\r\n            for(let i = 0; i < childrenlen; i++) {\r\n                // Ignore empty nodes\r\n                if(children[i].nodeType != 1) continue;\r\n                if(children[i].firstChild == null) continue;\r\n                html += children[i].nodeName + \" = \" +\r\n                        children[i].firstChild.nodeValue + \"<br>\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const marker = new this.google.maps.Marker({\r\n        position: new this.google.maps.LatLng(lat,lon),\r\n        map: this.map,\r\n    });\r\n\r\n    if(name) marker.setLabel(name);\r\n    if(sym) marker.setIcon(\"images/gps_icon/32/\" + sym + \".png\");\r\n    /*\r\n    if(sym){\r\n        var icon = {\r\n            url: \"images/gps_icon/\" + sym + \".png\",\r\n            size: new google.maps.Size(96, 96),\r\n            origin: new google.maps.Point(0, 0),\r\n            //anchor: new google.maps.Point(16, 16)\r\n        };\r\n        var shape = {\r\n            coords: [0, 0, 0, 32, 32, 32, 32, 0],\r\n            type: 'poly'\r\n        };\r\n        marker.setIcon(icon);\r\n        marker.setShape(shape);\r\n    }\r\n    */\r\n\r\n    const infowindow = new this.google.maps.InfoWindow({\r\n        content: html,\r\n        size: new this.google.maps.Size(50,50)\r\n    });\r\n\r\n    this.google.maps.event.addListener(marker, \"click\", function() {\r\n        infowindow.open(this.map, marker);\r\n        setTimeout(function(){infowindow.close();}, '2000');\r\n    });\r\n}\r\n\r\nGPXParser.prototype.addTrackSegmentToMap = function(trackSegment, colour,\r\n        width) {\r\n    const trackpoints = trackSegment.getElementsByTagName(\"trkpt\");\r\n    if(trackpoints.length == 0) {\r\n        return;\r\n    }\r\n\r\n    var pointarray = [];\r\n\r\n    // process first point\r\n    var lastlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\r\n    var lastlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\r\n    var latlng = new this.google.maps.LatLng(lastlat,lastlon);\r\n    pointarray.push(latlng);\r\n\r\n    for(let i = 1; i < trackpoints.length; i++) {\r\n        var lon = parseFloat(trackpoints[i].getAttribute(\"lon\"));\r\n        var lat = parseFloat(trackpoints[i].getAttribute(\"lat\"));\r\n\r\n        // Verify that this is far enough away from the last point to be used.\r\n        var latdiff = lat - lastlat;\r\n        var londiff = lon - lastlon;\r\n        if(Math.sqrt(latdiff*latdiff + londiff*londiff)\r\n                > this.mintrackpointdelta) {\r\n            lastlon = lon;\r\n            lastlat = lat;\r\n            latlng = new this.google.maps.LatLng(lat,lon);\r\n            pointarray.push(latlng);\r\n        }\r\n\r\n    }\r\n\r\n    var polyline = new this.google.maps.Polyline({\r\n        path: pointarray,\r\n        strokeColor: colour,\r\n        strokeWeight: width,\r\n        map: this.map\r\n    });\r\n}\r\n\r\nGPXParser.prototype.addTrackToMap = function(track, colour, width) {\r\n    var segments = track.getElementsByTagName(\"trkseg\");\r\n    for(var i = 0; i < segments.length; i++) {\r\n        var segmentlatlngbounds = this.addTrackSegmentToMap(segments[i], colour,\r\n                width);\r\n    }\r\n}\r\n\r\nGPXParser.prototype.centerAndZoom = function() {\r\n    //default location\r\n    if(this._minlat == null || this._maxlat == null || this._minlon == null || this._maxlon == null){\r\n        this.map.setCenter(new this.google.maps.LatLng(49.327667, -122.942333), 14);\r\n    }\r\n    //set\r\n    else{\r\n        var centerlon = (this._maxlon + this._minlon) / 2;\r\n        var centerlat = (this._maxlat + this._minlat) / 2;\r\n\r\n        var bounds = new this.google.maps.LatLngBounds(\r\n                new this.google.maps.LatLng(this._minlat, this._minlon),\r\n                new this.google.maps.LatLng(this._maxlat, this._maxlon));\r\n        this.map.setCenter(new this.google.maps.LatLng(centerlat, centerlon));\r\n        this.map.fitBounds(bounds);\r\n    }\r\n}\r\n\r\nGPXParser.prototype.centerAndZoomOfSeg = function(trackSegment) {\r\n\r\n    var pointlist = new Array(\"trkpt\", \"wpt\");\r\n    var minlat = 0;\r\n    var maxlat = 0;\r\n    var minlon = 0;\r\n    var maxlon = 0;\r\n\r\n    for(var pointtype = 0; pointtype < pointlist.length; pointtype++) {\r\n\r\n        // Center the map and zoom on the given segment.\r\n        var trackpoints = trackSegment.getElementsByTagName(\r\n                pointlist[pointtype]);\r\n\r\n        // If the min and max are uninitialized then initialize them.\r\n        if((trackpoints.length > 0) && (minlat == maxlat) && (minlat == 0)) {\r\n            minlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\r\n            maxlat = parseFloat(trackpoints[0].getAttribute(\"lat\"));\r\n            minlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\r\n            maxlon = parseFloat(trackpoints[0].getAttribute(\"lon\"));\r\n        }\r\n\r\n        for(var i = 0; i < trackpoints.length; i++) {\r\n            var lon = parseFloat(trackpoints[i].getAttribute(\"lon\"));\r\n            var lat = parseFloat(trackpoints[i].getAttribute(\"lat\"));\r\n\r\n            if(lon < minlon) minlon = lon;\r\n            if(lon > maxlon) maxlon = lon;\r\n            if(lat < minlat) minlat = lat;\r\n            if(lat > maxlat) maxlat = lat;\r\n        }\r\n    }\r\n\r\n    if((minlat == maxlat) && (minlat == 0)) {\r\n        this.map.setCenter(new this.google.maps.LatLng(49.327667, -122.942333), 14);\r\n        return;\r\n    }\r\n\r\n    // Center around the middle of the points\r\n    var centerlon = (maxlon + minlon) / 2;\r\n    var centerlat = (maxlat + minlat) / 2;\r\n\r\n    var bounds = new this.google.maps.LatLngBounds(\r\n            new this.google.maps.LatLng(minlat, minlon),\r\n            new this.google.maps.LatLng(maxlat, maxlon));\r\n    this.map.setCenter(new this.google.maps.LatLng(centerlat, centerlon));\r\n    this.map.fitBounds(bounds);\r\n}\r\n\r\nGPXParser.prototype.centerAndZoomToLatLngBounds = function(latlngboundsarray) {\r\n    var boundingbox = new this.google.maps.LatLngBounds();\r\n    for(var i = 0; i < latlngboundsarray.length; i++) {\r\n        if(!latlngboundsarray[i].isEmpty()) {\r\n            boundingbox.extend(latlngboundsarray[i].getSouthWest());\r\n            boundingbox.extend(latlngboundsarray[i].getNorthEast());\r\n        }\r\n    }\r\n\r\n    var centerlat = (boundingbox.getNorthEast().lat() +\r\n            boundingbox.getSouthWest().lat()) / 2;\r\n    var centerlng = (boundingbox.getNorthEast().lng() +\r\n            boundingbox.getSouthWest().lng()) / 2;\r\n    this.map.setCenter(new this.google.maps.LatLng(centerlat, centerlng),\r\n            this.map.getBoundsZoomLevel(boundingbox));\r\n}\r\n\r\nGPXParser.prototype.addTrackpointsToMap = function() {\r\n    var tracks = this.xmlDoc.documentElement.getElementsByTagName(\"trk\");\r\n    for(var i = 0; i < tracks.length; i++) {\r\n        this.addTrackToMap(tracks[i], this.trackcolour, this.trackwidth);\r\n    }\r\n}\r\n\r\nGPXParser.prototype.addWaypointsToMap = function() {\r\n    var waypoints = this.xmlDoc.documentElement.getElementsByTagName(\"wpt\");\r\n    for(var i = 0; i < waypoints.length; i++) {\r\n        this.createMarker(waypoints[i]);\r\n    }\r\n}\r\n\r\n/***************************************************************/\r\nGPXParser.prototype._insertLocTable = function(table, item) {\r\n    var [time, _, _] = item;\r\n\r\n    //get the lndex, which is just smaller than item;\r\n    var i;\r\n    for(i = table.length -1; i >= 0; --i){\r\n        var [curr_time, _, _] = table[i];\r\n        if(time > curr_time)\r\n            break;\r\n    }\r\n\r\n    //insert after the idx\r\n    table.splice(i + 1, 0, item);\r\n}\r\n\r\nGPXParser.prototype._loadLocations = function(table, name)\r\n{\r\n    var pts = this.xmlDoc.documentElement.getElementsByTagName(name);\r\n    for(var i = 0; i < pts.length; i++) {\r\n        var pt = pts[i];\r\n\r\n        //get wpt_time\r\n        var time_elem = pt.getElementsByTagName(\"time\");\r\n        var time = (time_elem && time_elem.length > 0)? (new Date(time_elem[0].innerHTML)).getTime(): 0;\r\n        var lat = parseFloat(pt.getAttribute(\"lat\"));\r\n        var lon = parseFloat(pt.getAttribute(\"lon\"));\r\n\r\n        this._insertLocTable(table, [time, lat, lon, name]);\r\n\r\n        //rec min/max lat/lon\r\n        if(this._minlat == null || this._minlat > lat) this._minlat = lat;\r\n        if(this._maxlat == null || this._maxlat < lat) this._maxlat = lat;\r\n        if(this._minlon == null || this._minlon > lon) this._minlon = lon;\r\n        if(this._maxlon == null || this._maxlon < lon) this._maxlon = lon;\r\n    }\r\n}\r\n\r\nGPXParser.prototype._printLocTable = function(table) {\r\n    for(var i = 0; i < table.length; ++i){\r\n        var [time, lat, lon] = table[i];\r\n        console.log(\"[\" + i + \"]: \" + time + \", \" + lat + \", \" + lon);\r\n    }\r\n}\r\n\r\n//return the index of the most closed less-than item\r\nGPXParser.prototype._getClosedLocation = function(table, time){\r\n    for(var i = 0; i < table.length; ++i){\r\n        var [curr_time, _, _] = table[i];\r\n        if(curr_time > time)\r\n            return i - 1;\r\n    }\r\n\r\n    return table.length - 1;\r\n}\r\n\r\nGPXParser.prototype._estLocation = function(time, loc1, loc2)\r\n{\r\n    var lat, lon;\r\n\r\n    if(loc1 == null){\r\n        [_, lat, lon] = loc2;\r\n    }\r\n    else if (loc2 == null){\r\n        [_, lat, lon] = loc1;\r\n    }\r\n    else{\r\n        var [t2, lat2, lon2] = loc2;\r\n        var [t1, lat1, lon1] = loc1;\r\n        lat = (lat2 - lat1) * (time - t1) / (t2 - t1) + lat1;\r\n        lon = (lon2 - lon1) * (time - t1) / (t2 - t1) + lon1;\r\n    }\r\n\r\n    return new this.google.maps.LatLng(lat, lon);\r\n}\r\n\r\nGPXParser.prototype.lookupLocation = function(dt)\r\n{\r\n    var time = dt.getTime();\r\n\r\n    //lookup\r\n    var idx = this._getClosedLocation(this._locations, time);\r\n    var loc1 = (idx == -1)? null: this._locations[idx];\r\n    var loc2 = (idx == this._locations -1)? null: this._locations[idx+1];\r\n    console.log(dt + \":\" + idx);\r\n    console.log(\"estimate location between second diff (\" + ((loc1 == null)? \"null\": (loc1[0]-time)/1000) + \", \" + ((loc2 == null)? \"null\": (loc2[0]-time)/1000) + \")\");\r\n\r\n    //estimate\r\n    var latlng = this._estLocation(time, loc1, loc2);\r\n\r\n    return latlng;\r\n}\n\n//# sourceURL=webpack:///./app/loadgpx.js?");

/***/ }),

/***/ "./app/markdown.js":
/*!*************************!*\
  !*** ./app/markdown.js ***!
  \*************************/
/*! exports provided: Markdown */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Markdown\", function() { return Markdown; });\n// Released under MIT license\r\n// Copyright (c) 2009-2010 Dominic Baggott\r\n// Copyright (c) 2009-2010 Ash Berlin\r\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\r\n// Date: 2013-09-15T16:12Z\r\n\r\n//(function(expose) {\r\n\r\n\r\n\r\n\r\n  var MarkdownHelpers = {};\r\n\r\n  // For Spidermonkey based engines\r\n  function mk_block_toSource() {\r\n    return \"Markdown.mk_block( \" +\r\n            uneval(this.toString()) +\r\n            \", \" +\r\n            uneval(this.trailing) +\r\n            \", \" +\r\n            uneval(this.lineNumber) +\r\n            \" )\";\r\n  }\r\n\r\n  // node\r\n  function mk_block_inspect() {\r\n    var util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\r\n    return \"Markdown.mk_block( \" +\r\n            util.inspect(this.toString()) +\r\n            \", \" +\r\n            util.inspect(this.trailing) +\r\n            \", \" +\r\n            util.inspect(this.lineNumber) +\r\n            \" )\";\r\n\r\n  }\r\n\r\n  MarkdownHelpers.mk_block = function(block, trail, line) {\r\n    // Be helpful for default case in tests.\r\n    if ( arguments.length === 1 )\r\n      trail = \"\\n\\n\";\r\n\r\n    // We actually need a String object, not a string primitive\r\n    /* jshint -W053 */\r\n    var s = new String(block);\r\n    s.trailing = trail;\r\n    // To make it clear its not just a string\r\n    s.inspect = mk_block_inspect;\r\n    s.toSource = mk_block_toSource;\r\n\r\n    if ( line !== undefined )\r\n      s.lineNumber = line;\r\n\r\n    return s;\r\n  };\r\n\r\n\r\n  var isArray = MarkdownHelpers.isArray = Array.isArray || function(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n\r\n  // Don't mess with Array.prototype. Its not friendly\r\n  if ( Array.prototype.forEach ) {\r\n    MarkdownHelpers.forEach = function forEach( arr, cb, thisp ) {\r\n      return arr.forEach( cb, thisp );\r\n    };\r\n  }\r\n  else {\r\n    MarkdownHelpers.forEach = function forEach(arr, cb, thisp) {\r\n      for (var i = 0; i < arr.length; i++)\r\n        cb.call(thisp || arr, arr[i], i, arr);\r\n    };\r\n  }\r\n\r\n  MarkdownHelpers.isEmpty = function isEmpty( obj ) {\r\n    for ( var key in obj ) {\r\n      if ( hasOwnProperty.call( obj, key ) )\r\n        return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  MarkdownHelpers.extract_attr = function extract_attr( jsonml ) {\r\n    return isArray(jsonml)\r\n        && jsonml.length > 1\r\n        && typeof jsonml[ 1 ] === \"object\"\r\n        && !( isArray(jsonml[ 1 ]) )\r\n        ? jsonml[ 1 ]\r\n        : undefined;\r\n  };\r\n\r\n\r\n\r\n\r\n /**\r\n   *  class Markdown\r\n   *\r\n   *  Markdown processing in Javascript done right. We have very particular views\r\n   *  on what constitutes 'right' which include:\r\n   *\r\n   *  - produces well-formed HTML (this means that em and strong nesting is\r\n   *    important)\r\n   *\r\n   *  - has an intermediate representation to allow processing of parsed data (We\r\n   *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\r\n   *\r\n   *  - is easily extensible to add new dialects without having to rewrite the\r\n   *    entire parsing mechanics\r\n   *\r\n   *  - has a good test suite\r\n   *\r\n   *  This implementation fulfills all of these (except that the test suite could\r\n   *  do with expanding to automatically run all the fixtures from other Markdown\r\n   *  implementations.)\r\n   *\r\n   *  ##### Intermediate Representation\r\n   *\r\n   *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\r\n   *\r\n   *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\r\n   **/\r\n  var Markdown = function(dialect) {\r\n    switch (typeof dialect) {\r\n    case \"undefined\":\r\n      this.dialect = Markdown.dialects.Gruber;\r\n      break;\r\n    case \"object\":\r\n      this.dialect = dialect;\r\n      break;\r\n    default:\r\n      if ( dialect in Markdown.dialects )\r\n        this.dialect = Markdown.dialects[dialect];\r\n      else\r\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\r\n      break;\r\n    }\r\n    this.em_state = [];\r\n    this.strong_state = [];\r\n    this.debug_indent = \"\";\r\n  };\r\n\r\n  /**\r\n   * Markdown.dialects\r\n   *\r\n   * Namespace of built-in dialects.\r\n   **/\r\n  Markdown.dialects = {};\r\n\r\n\r\n\r\n\r\n  // Imported functions\r\n  var mk_block = Markdown.mk_block = MarkdownHelpers.mk_block,\r\n      isArray = MarkdownHelpers.isArray;\r\n\r\n  /**\r\n   *  parse( markdown, [dialect] ) -> JsonML\r\n   *  - markdown (String): markdown string to parse\r\n   *  - dialect (String | Dialect): the dialect to use, defaults to gruber\r\n   *\r\n   *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\r\n   **/\r\n  Markdown.parse = function( source, dialect ) {\r\n    // dialect will default if undefined\r\n    var md = new Markdown( dialect );\r\n    return md.toTree( source );\r\n  };\r\n\r\n  function count_lines( str ) {\r\n    var n = 0,\r\n        i = -1;\r\n    while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 )\r\n      n++;\r\n    return n;\r\n  }\r\n\r\n  // Internal - split source into rough blocks\r\n  Markdown.prototype.split_blocks = function splitBlocks( input ) {\r\n    input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\r\n    // [\\s\\S] matches _anything_ (newline or space)\r\n    // [^] is equivalent but doesn't work in IEs.\r\n    var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\r\n        blocks = [],\r\n        m;\r\n\r\n    var line_no = 1;\r\n\r\n    if ( ( m = /^(\\s*\\n)/.exec(input) ) !== null ) {\r\n      // skip (but count) leading blank lines\r\n      line_no += count_lines( m[0] );\r\n      re.lastIndex = m[0].length;\r\n    }\r\n\r\n    while ( ( m = re.exec(input) ) !== null ) {\r\n      if (m[2] === \"\\n#\") {\r\n        m[2] = \"\\n\";\r\n        re.lastIndex--;\r\n      }\r\n      blocks.push( mk_block( m[1], m[2], line_no ) );\r\n      line_no += count_lines( m[0] );\r\n    }\r\n\r\n    return blocks;\r\n  };\r\n\r\n  /**\r\n   *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\r\n   *  - block (String): the block to process\r\n   *  - next (Array): the following blocks\r\n   *\r\n   * Process `block` and return an array of JsonML nodes representing `block`.\r\n   *\r\n   * It does this by asking each block level function in the dialect to process\r\n   * the block until one can. Succesful handling is indicated by returning an\r\n   * array (with zero or more JsonML nodes), failure by a false value.\r\n   *\r\n   * Blocks handlers are responsible for calling [[Markdown#processInline]]\r\n   * themselves as appropriate.\r\n   *\r\n   * If the blocks were split incorrectly or adjacent blocks need collapsing you\r\n   * can adjust `next` in place using shift/splice etc.\r\n   *\r\n   * If any of this default behaviour is not right for the dialect, you can\r\n   * define a `__call__` method on the dialect that will get invoked to handle\r\n   * the block processing.\r\n   */\r\n  Markdown.prototype.processBlock = function processBlock( block, next ) {\r\n    var cbs = this.dialect.block,\r\n        ord = cbs.__order__;\r\n\r\n    if ( \"__call__\" in cbs )\r\n      return cbs.__call__.call(this, block, next);\r\n\r\n    for ( var i = 0; i < ord.length; i++ ) {\r\n      //D:this.debug( \"Testing\", ord[i] );\r\n      var res = cbs[ ord[i] ].call( this, block, next );\r\n      if ( res ) {\r\n        //D:this.debug(\"  matched\");\r\n        if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\r\n          this.debug(ord[i], \"didn't return a proper array\");\r\n        //D:this.debug( \"\" );\r\n        return res;\r\n      }\r\n    }\r\n\r\n    // Uhoh! no match! Should we throw an error?\r\n    return [];\r\n  };\r\n\r\n  Markdown.prototype.processInline = function processInline( block ) {\r\n    return this.dialect.inline.__call__.call( this, String( block ) );\r\n  };\r\n\r\n  /**\r\n   *  Markdown#toTree( source ) -> JsonML\r\n   *  - source (String): markdown source to parse\r\n   *\r\n   *  Parse `source` into a JsonML tree representing the markdown document.\r\n   **/\r\n  // custom_tree means set this.tree to `custom_tree` and restore old value on return\r\n  Markdown.prototype.toTree = function toTree( source, custom_root ) {\r\n    var blocks = source instanceof Array ? source : this.split_blocks( source );\r\n\r\n    // Make tree a member variable so its easier to mess with in extensions\r\n    var old_tree = this.tree;\r\n    try {\r\n      this.tree = custom_root || this.tree || [ \"markdown\" ];\r\n\r\n      blocks_loop:\r\n      while ( blocks.length ) {\r\n        var b = this.processBlock( blocks.shift(), blocks );\r\n\r\n        // Reference blocks and the like won't return any content\r\n        if ( !b.length )\r\n          continue blocks_loop;\r\n\r\n        this.tree.push.apply( this.tree, b );\r\n      }\r\n      return this.tree;\r\n    }\r\n    finally {\r\n      if ( custom_root )\r\n        this.tree = old_tree;\r\n    }\r\n  };\r\n\r\n  // Noop by default\r\n  Markdown.prototype.debug = function () {\r\n    var args = Array.prototype.slice.call( arguments);\r\n    args.unshift(this.debug_indent);\r\n    if ( typeof print !== \"undefined\" )\r\n      print.apply( print, args );\r\n    if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\r\n      console.log.apply( null, args );\r\n  };\r\n\r\n  Markdown.prototype.loop_re_over_block = function( re, block, cb ) {\r\n    // Dont use /g regexps with this\r\n    var m,\r\n        b = block.valueOf();\r\n\r\n    while ( b.length && (m = re.exec(b) ) !== null ) {\r\n      b = b.substr( m[0].length );\r\n      cb.call(this, m);\r\n    }\r\n    return b;\r\n  };\r\n\r\n  // Build default order from insertion order.\r\n  Markdown.buildBlockOrder = function(d) {\r\n    var ord = [];\r\n    for ( var i in d ) {\r\n      if ( i === \"__order__\" || i === \"__call__\" )\r\n        continue;\r\n      ord.push( i );\r\n    }\r\n    d.__order__ = ord;\r\n  };\r\n\r\n  // Build patterns for inline matcher\r\n  Markdown.buildInlinePatterns = function(d) {\r\n    var patterns = [];\r\n\r\n    for ( var i in d ) {\r\n      // __foo__ is reserved and not a pattern\r\n      if ( i.match( /^__.*__$/) )\r\n        continue;\r\n      var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\r\n               .replace( /\\n/, \"\\\\n\" );\r\n      patterns.push( i.length === 1 ? l : \"(?:\" + l + \")\" );\r\n    }\r\n\r\n    patterns = patterns.join(\"|\");\r\n    d.__patterns__ = patterns;\r\n    //print(\"patterns:\", uneval( patterns ) );\r\n\r\n    var fn = d.__call__;\r\n    d.__call__ = function(text, pattern) {\r\n      if ( pattern !== undefined )\r\n        return fn.call(this, text, pattern);\r\n      else\r\n        return fn.call(this, text, patterns);\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\n  var extract_attr = MarkdownHelpers.extract_attr;\r\n\r\n  /**\r\n   *  renderJsonML( jsonml[, options] ) -> String\r\n   *  - jsonml (Array): JsonML array to render to XML\r\n   *  - options (Object): options\r\n   *\r\n   *  Converts the given JsonML into well-formed XML.\r\n   *\r\n   *  The options currently understood are:\r\n   *\r\n   *  - root (Boolean): wether or not the root node should be included in the\r\n   *    output, or just its children. The default `false` is to not include the\r\n   *    root itself.\r\n   */\r\n  Markdown.renderJsonML = function( jsonml, options ) {\r\n    options = options || {};\r\n    // include the root element in the rendered output?\r\n    options.root = options.root || false;\r\n\r\n    var content = [];\r\n\r\n    if ( options.root ) {\r\n      content.push( render_tree( jsonml ) );\r\n    }\r\n    else {\r\n      jsonml.shift(); // get rid of the tag\r\n      if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) )\r\n        jsonml.shift(); // get rid of the attributes\r\n\r\n      while ( jsonml.length )\r\n        content.push( render_tree( jsonml.shift() ) );\r\n    }\r\n\r\n    return content.join( \"\\n\\n\" );\r\n  };\r\n\r\n\r\n  /**\r\n   *  toHTMLTree( markdown, [dialect] ) -> JsonML\r\n   *  toHTMLTree( md_tree ) -> JsonML\r\n   *  - markdown (String): markdown string to parse\r\n   *  - dialect (String | Dialect): the dialect to use, defaults to gruber\r\n   *  - md_tree (Markdown.JsonML): parsed markdown tree\r\n   *\r\n   *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\r\n   *  to this function, it is first parsed into a markdown tree by calling\r\n   *  [[parse]].\r\n   **/\r\n  Markdown.toHTMLTree = function toHTMLTree( input, dialect , options ) {\r\n\r\n    // convert string input to an MD tree\r\n    if ( typeof input === \"string\" )\r\n      input = this.parse( input, dialect );\r\n\r\n    // Now convert the MD tree to an HTML tree\r\n\r\n    // remove references from the tree\r\n    var attrs = extract_attr( input ),\r\n        refs = {};\r\n\r\n    if ( attrs && attrs.references )\r\n      refs = attrs.references;\r\n\r\n    var html = convert_tree_to_html( input, refs , options );\r\n    merge_text_nodes( html );\r\n    return html;\r\n  };\r\n\r\n  /**\r\n   *  toHTML( markdown, [dialect]  ) -> String\r\n   *  toHTML( md_tree ) -> String\r\n   *  - markdown (String): markdown string to parse\r\n   *  - md_tree (Markdown.JsonML): parsed markdown tree\r\n   *\r\n   *  Take markdown (either as a string or as a JsonML tree) and run it through\r\n   *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\r\n   **/\r\n  Markdown.toHTML = function toHTML( source , dialect , options ) {\r\n    var input = this.toHTMLTree( source , dialect , options );\r\n\r\n    return this.renderJsonML( input );\r\n  };\r\n\r\n\r\n  function escapeHTML( text ) {\r\n    return text.replace( /&/g, \"&amp;\" )\r\n               .replace( /</g, \"&lt;\" )\r\n               .replace( />/g, \"&gt;\" )\r\n               .replace( /\"/g, \"&quot;\" )\r\n               .replace( /'/g, \"&#39;\" );\r\n  }\r\n\r\n  function render_tree( jsonml ) {\r\n    // basic case\r\n    if ( typeof jsonml === \"string\" )\r\n      return escapeHTML( jsonml );\r\n\r\n    var tag = jsonml.shift(),\r\n        attributes = {},\r\n        content = [];\r\n\r\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) )\r\n      attributes = jsonml.shift();\r\n\r\n    while ( jsonml.length )\r\n      content.push( render_tree( jsonml.shift() ) );\r\n\r\n    var tag_attrs = \"\";\r\n    for ( var a in attributes )\r\n      tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\r\n\r\n    // be careful about adding whitespace here for inline elements\r\n    if ( tag === \"img\" || tag === \"br\" || tag === \"hr\" )\r\n      return \"<\"+ tag + tag_attrs + \"/>\";\r\n    else\r\n      return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\r\n  }\r\n\r\n  function convert_tree_to_html( tree, references, options ) {\r\n    var i;\r\n    options = options || {};\r\n\r\n    // shallow clone\r\n    var jsonml = tree.slice( 0 );\r\n\r\n    if ( typeof options.preprocessTreeNode === \"function\" )\r\n      jsonml = options.preprocessTreeNode(jsonml, references);\r\n\r\n    // Clone attributes if they exist\r\n    var attrs = extract_attr( jsonml );\r\n    if ( attrs ) {\r\n      jsonml[ 1 ] = {};\r\n      for ( i in attrs ) {\r\n        jsonml[ 1 ][ i ] = attrs[ i ];\r\n      }\r\n      attrs = jsonml[ 1 ];\r\n    }\r\n\r\n    // basic case\r\n    if ( typeof jsonml === \"string\" )\r\n      return jsonml;\r\n\r\n    // convert this node\r\n    switch ( jsonml[ 0 ] ) {\r\n    case \"header\":\r\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\r\n      delete jsonml[ 1 ].level;\r\n      break;\r\n    case \"bulletlist\":\r\n      jsonml[ 0 ] = \"ul\";\r\n      break;\r\n    case \"numberlist\":\r\n      jsonml[ 0 ] = \"ol\";\r\n      break;\r\n    case \"listitem\":\r\n      jsonml[ 0 ] = \"li\";\r\n      break;\r\n    case \"para\":\r\n      jsonml[ 0 ] = \"p\";\r\n      break;\r\n    case \"markdown\":\r\n      jsonml[ 0 ] = \"html\";\r\n      if ( attrs )\r\n        delete attrs.references;\r\n      break;\r\n    case \"code_block\":\r\n      jsonml[ 0 ] = \"pre\";\r\n      i = attrs ? 2 : 1;\r\n      var code = [ \"code\" ];\r\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\r\n      jsonml[ i ] = code;\r\n      break;\r\n    case \"inlinecode\":\r\n      jsonml[ 0 ] = \"code\";\r\n      break;\r\n    case \"img\":\r\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\r\n      delete jsonml[ 1 ].href;\r\n      break;\r\n    case \"linebreak\":\r\n      jsonml[ 0 ] = \"br\";\r\n      break;\r\n    case \"link\":\r\n      jsonml[ 0 ] = \"a\";\r\n      break;\r\n    case \"link_ref\":\r\n      jsonml[ 0 ] = \"a\";\r\n\r\n      // grab this ref and clean up the attribute node\r\n      var ref = references[ attrs.ref ];\r\n\r\n      // if the reference exists, make the link\r\n      if ( ref ) {\r\n        delete attrs.ref;\r\n\r\n        // add in the href and title, if present\r\n        attrs.href = ref.href;\r\n        if ( ref.title )\r\n          attrs.title = ref.title;\r\n\r\n        // get rid of the unneeded original text\r\n        delete attrs.original;\r\n      }\r\n      // the reference doesn't exist, so revert to plain text\r\n      else {\r\n        return attrs.original;\r\n      }\r\n      break;\r\n    case \"img_ref\":\r\n      jsonml[ 0 ] = \"img\";\r\n\r\n      // grab this ref and clean up the attribute node\r\n      var ref = references[ attrs.ref ];\r\n\r\n      // if the reference exists, make the link\r\n      if ( ref ) {\r\n        delete attrs.ref;\r\n\r\n        // add in the href and title, if present\r\n        attrs.src = ref.href;\r\n        if ( ref.title )\r\n          attrs.title = ref.title;\r\n\r\n        // get rid of the unneeded original text\r\n        delete attrs.original;\r\n      }\r\n      // the reference doesn't exist, so revert to plain text\r\n      else {\r\n        return attrs.original;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // convert all the children\r\n    i = 1;\r\n\r\n    // deal with the attribute node, if it exists\r\n    if ( attrs ) {\r\n      // if there are keys, skip over it\r\n      for ( var key in jsonml[ 1 ] ) {\r\n        i = 2;\r\n        break;\r\n      }\r\n      // if there aren't, remove it\r\n      if ( i === 1 )\r\n        jsonml.splice( i, 1 );\r\n    }\r\n\r\n    for ( ; i < jsonml.length; ++i ) {\r\n      jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\r\n    }\r\n\r\n    return jsonml;\r\n  }\r\n\r\n\r\n  // merges adjacent text nodes into a single node\r\n  function merge_text_nodes( jsonml ) {\r\n    // skip the tag name and attribute hash\r\n    var i = extract_attr( jsonml ) ? 2 : 1;\r\n\r\n    while ( i < jsonml.length ) {\r\n      // if it's a string check the next item too\r\n      if ( typeof jsonml[ i ] === \"string\" ) {\r\n        if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\r\n          // merge the second string into the first and remove it\r\n          jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\r\n        }\r\n        else {\r\n          ++i;\r\n        }\r\n      }\r\n      // if it's not a string recurse\r\n      else {\r\n        merge_text_nodes( jsonml[ i ] );\r\n        ++i;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  var DialectHelpers = {};\r\n  DialectHelpers.inline_until_char = function( text, want ) {\r\n    var consumed = 0,\r\n        nodes = [];\r\n\r\n    while ( true ) {\r\n      if ( text.charAt( consumed ) === want ) {\r\n        // Found the character we were looking for\r\n        consumed++;\r\n        return [ consumed, nodes ];\r\n      }\r\n\r\n      if ( consumed >= text.length ) {\r\n        // No closing char found. Abort.\r\n        return null;\r\n      }\r\n\r\n      var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\r\n      consumed += res[ 0 ];\r\n      // Add any returned nodes.\r\n      nodes.push.apply( nodes, res.slice( 1 ) );\r\n    }\r\n  };\r\n\r\n  // Helper function to make sub-classing a dialect easier\r\n  DialectHelpers.subclassDialect = function( d ) {\r\n    function Block() {}\r\n    Block.prototype = d.block;\r\n    function Inline() {}\r\n    Inline.prototype = d.inline;\r\n\r\n    return { block: new Block(), inline: new Inline() };\r\n  };\r\n\r\n\r\n\r\n\r\n  var forEach = MarkdownHelpers.forEach,\r\n      extract_attr = MarkdownHelpers.extract_attr,\r\n      mk_block = MarkdownHelpers.mk_block,\r\n      isEmpty = MarkdownHelpers.isEmpty,\r\n      inline_until_char = DialectHelpers.inline_until_char;\r\n\r\n  /**\r\n   * Gruber dialect\r\n   *\r\n   * The default dialect that follows the rules set out by John Gruber's\r\n   * markdown.pl as closely as possible. Well actually we follow the behaviour of\r\n   * that script which in some places is not exactly what the syntax web page\r\n   * says.\r\n   **/\r\n  var Gruber = {\r\n    block: {\r\n      atxHeader: function atxHeader( block, next ) {\r\n        var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\r\n\r\n        if ( !m )\r\n          return undefined;\r\n\r\n        var header = [ \"header\", { level: m[ 1 ].length } ];\r\n        Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\r\n\r\n        if ( m[0].length < block.length )\r\n          next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\r\n\r\n        return [ header ];\r\n      },\r\n\r\n      setextHeader: function setextHeader( block, next ) {\r\n        var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\r\n\r\n        if ( !m )\r\n          return undefined;\r\n\r\n        var level = ( m[ 2 ] === \"=\" ) ? 1 : 2,\r\n            header = [ \"header\", { level : level }, m[ 1 ] ];\r\n\r\n        if ( m[0].length < block.length )\r\n          next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\r\n\r\n        return [ header ];\r\n      },\r\n\r\n      code: function code( block, next ) {\r\n        // |    Foo\r\n        // |bar\r\n        // should be a code block followed by a paragraph. Fun\r\n        //\r\n        // There might also be adjacent code block to merge.\r\n\r\n        var ret = [],\r\n            re = /^(?: {0,3}\\t| {4})(.*)\\n?/;\r\n\r\n        // 4 spaces + content\r\n        if ( !block.match( re ) )\r\n          return undefined;\r\n\r\n        block_search:\r\n        do {\r\n          // Now pull out the rest of the lines\r\n          var b = this.loop_re_over_block(\r\n                    re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\r\n\r\n          if ( b.length ) {\r\n            // Case alluded to in first comment. push it back on as a new block\r\n            next.unshift( mk_block(b, block.trailing) );\r\n            break block_search;\r\n          }\r\n          else if ( next.length ) {\r\n            // Check the next block - it might be code too\r\n            if ( !next[0].match( re ) )\r\n              break block_search;\r\n\r\n            // Pull how how many blanks lines follow - minus two to account for .join\r\n            ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\r\n\r\n            block = next.shift();\r\n          }\r\n          else {\r\n            break block_search;\r\n          }\r\n        } while ( true );\r\n\r\n        return [ [ \"code_block\", ret.join(\"\\n\") ] ];\r\n      },\r\n\r\n      horizRule: function horizRule( block, next ) {\r\n        // this needs to find any hr in the block to handle abutting blocks\r\n        var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\r\n\r\n        if ( !m )\r\n          return undefined;\r\n\r\n        var jsonml = [ [ \"hr\" ] ];\r\n\r\n        // if there's a leading abutting block, process it\r\n        if ( m[ 1 ] ) {\r\n          var contained = mk_block( m[ 1 ], \"\", block.lineNumber );\r\n          jsonml.unshift.apply( jsonml, this.toTree( contained, [] ) );\r\n        }\r\n\r\n        // if there's a trailing abutting block, stick it into next\r\n        if ( m[ 3 ] )\r\n          next.unshift( mk_block( m[ 3 ], block.trailing, block.lineNumber + 1 ) );\r\n\r\n        return jsonml;\r\n      },\r\n\r\n      // There are two types of lists. Tight and loose. Tight lists have no whitespace\r\n      // between the items (and result in text just in the <li>) and loose lists,\r\n      // which have an empty line between list items, resulting in (one or more)\r\n      // paragraphs inside the <li>.\r\n      //\r\n      // There are all sorts weird edge cases about the original markdown.pl's\r\n      // handling of lists:\r\n      //\r\n      // * Nested lists are supposed to be indented by four chars per level. But\r\n      //   if they aren't, you can get a nested list by indenting by less than\r\n      //   four so long as the indent doesn't match an indent of an existing list\r\n      //   item in the 'nest stack'.\r\n      //\r\n      // * The type of the list (bullet or number) is controlled just by the\r\n      //    first item at the indent. Subsequent changes are ignored unless they\r\n      //    are for nested lists\r\n      //\r\n      lists: (function( ) {\r\n        // Use a closure to hide a few variables.\r\n        var any_list = \"[*+-]|\\\\d+\\\\.\",\r\n            bullet_list = /[*+-]/,\r\n            // Capture leading indent as it matters for determining nested lists.\r\n            is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\r\n            indent_re = \"(?: {0,3}\\\\t| {4})\";\r\n\r\n        // TODO: Cache this regexp for certain depths.\r\n        // Create a regexp suitable for matching an li for a given stack depth\r\n        function regex_for_depth( depth ) {\r\n\r\n          return new RegExp(\r\n            // m[1] = indent, m[2] = list_type\r\n            \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\r\n            // m[3] = cont\r\n            \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\r\n          );\r\n        }\r\n        function expand_tab( input ) {\r\n          return input.replace( / {0,3}\\t/g, \"    \" );\r\n        }\r\n\r\n        // Add inline content `inline` to `li`. inline comes from processInline\r\n        // so is an array of content\r\n        function add(li, loose, inline, nl) {\r\n          if ( loose ) {\r\n            li.push( [ \"para\" ].concat(inline) );\r\n            return;\r\n          }\r\n          // Hmmm, should this be any block level element or just paras?\r\n          var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] === \"para\"\r\n                     ? li[li.length -1]\r\n                     : li;\r\n\r\n          // If there is already some content in this list, add the new line in\r\n          if ( nl && li.length > 1 )\r\n            inline.unshift(nl);\r\n\r\n          for ( var i = 0; i < inline.length; i++ ) {\r\n            var what = inline[i],\r\n                is_str = typeof what === \"string\";\r\n            if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] === \"string\" )\r\n              add_to[ add_to.length-1 ] += what;\r\n            else\r\n              add_to.push( what );\r\n          }\r\n        }\r\n\r\n        // contained means have an indent greater than the current one. On\r\n        // *every* line in the block\r\n        function get_contained_blocks( depth, blocks ) {\r\n\r\n          var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\r\n              replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\r\n              ret = [];\r\n\r\n          while ( blocks.length > 0 ) {\r\n            if ( re.exec( blocks[0] ) ) {\r\n              var b = blocks.shift(),\r\n                  // Now remove that indent\r\n                  x = b.replace( replace, \"\");\r\n\r\n              ret.push( mk_block( x, b.trailing, b.lineNumber ) );\r\n            }\r\n            else\r\n              break;\r\n          }\r\n          return ret;\r\n        }\r\n\r\n        // passed to stack.forEach to turn list items up the stack into paras\r\n        function paragraphify(s, i, stack) {\r\n          var list = s.list;\r\n          var last_li = list[list.length-1];\r\n\r\n          if ( last_li[1] instanceof Array && last_li[1][0] === \"para\" )\r\n            return;\r\n          if ( i + 1 === stack.length ) {\r\n            // Last stack frame\r\n            // Keep the same array, but replace the contents\r\n            last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\r\n          }\r\n          else {\r\n            var sublist = last_li.pop();\r\n            last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\r\n          }\r\n        }\r\n\r\n        // The matcher function\r\n        return function( block, next ) {\r\n          var m = block.match( is_list_re );\r\n          if ( !m )\r\n            return undefined;\r\n\r\n          function make_list( m ) {\r\n            var list = bullet_list.exec( m[2] )\r\n                     ? [\"bulletlist\"]\r\n                     : [\"numberlist\"];\r\n\r\n            stack.push( { list: list, indent: m[1] } );\r\n            return list;\r\n          }\r\n\r\n\r\n          var stack = [], // Stack of lists for nesting.\r\n              list = make_list( m ),\r\n              last_li,\r\n              loose = false,\r\n              ret = [ stack[0].list ],\r\n              i;\r\n\r\n          // Loop to search over block looking for inner block elements and loose lists\r\n          loose_search:\r\n          while ( true ) {\r\n            // Split into lines preserving new lines at end of line\r\n            var lines = block.split( /(?=\\n)/ );\r\n\r\n            // We have to grab all lines for a li and call processInline on them\r\n            // once as there are some inline things that can span lines.\r\n            var li_accumulate = \"\", nl = \"\";\r\n\r\n            // Loop over the lines in this block looking for tight lists.\r\n            tight_search:\r\n            for ( var line_no = 0; line_no < lines.length; line_no++ ) {\r\n              nl = \"\";\r\n              var l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\r\n\r\n\r\n              // TODO: really should cache this\r\n              var line_re = regex_for_depth( stack.length );\r\n\r\n              m = l.match( line_re );\r\n              //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\r\n\r\n              // We have a list item\r\n              if ( m[1] !== undefined ) {\r\n                // Process the previous list item, if any\r\n                if ( li_accumulate.length ) {\r\n                  add( last_li, loose, this.processInline( li_accumulate ), nl );\r\n                  // Loose mode will have been dealt with. Reset it\r\n                  loose = false;\r\n                  li_accumulate = \"\";\r\n                }\r\n\r\n                m[1] = expand_tab( m[1] );\r\n                var wanted_depth = Math.floor(m[1].length/4)+1;\r\n                //print( \"want:\", wanted_depth, \"stack:\", stack.length);\r\n                if ( wanted_depth > stack.length ) {\r\n                  // Deep enough for a nested list outright\r\n                  //print ( \"new nested list\" );\r\n                  list = make_list( m );\r\n                  last_li.push( list );\r\n                  last_li = list[1] = [ \"listitem\" ];\r\n                }\r\n                else {\r\n                  // We aren't deep enough to be strictly a new level. This is\r\n                  // where Md.pl goes nuts. If the indent matches a level in the\r\n                  // stack, put it there, else put it one deeper then the\r\n                  // wanted_depth deserves.\r\n                  var found = false;\r\n                  for ( i = 0; i < stack.length; i++ ) {\r\n                    if ( stack[ i ].indent !== m[1] )\r\n                      continue;\r\n\r\n                    list = stack[ i ].list;\r\n                    stack.splice( i+1, stack.length - (i+1) );\r\n                    found = true;\r\n                    break;\r\n                  }\r\n\r\n                  if (!found) {\r\n                    //print(\"not found. l:\", uneval(l));\r\n                    wanted_depth++;\r\n                    if ( wanted_depth <= stack.length ) {\r\n                      stack.splice(wanted_depth, stack.length - wanted_depth);\r\n                      //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\r\n                      list = stack[wanted_depth-1].list;\r\n                      //print(\"list:\", uneval(list) );\r\n                    }\r\n                    else {\r\n                      //print (\"made new stack for messy indent\");\r\n                      list = make_list(m);\r\n                      last_li.push(list);\r\n                    }\r\n                  }\r\n\r\n                  //print( uneval(list), \"last\", list === stack[stack.length-1].list );\r\n                  last_li = [ \"listitem\" ];\r\n                  list.push(last_li);\r\n                } // end depth of shenegains\r\n                nl = \"\";\r\n              }\r\n\r\n              // Add content\r\n              if ( l.length > m[0].length )\r\n                li_accumulate += nl + l.substr( m[0].length );\r\n            } // tight_search\r\n\r\n            if ( li_accumulate.length ) {\r\n              add( last_li, loose, this.processInline( li_accumulate ), nl );\r\n              // Loose mode will have been dealt with. Reset it\r\n              loose = false;\r\n              li_accumulate = \"\";\r\n            }\r\n\r\n            // Look at the next block - we might have a loose list. Or an extra\r\n            // paragraph for the current li\r\n            var contained = get_contained_blocks( stack.length, next );\r\n\r\n            // Deal with code blocks or properly nested lists\r\n            if ( contained.length > 0 ) {\r\n              // Make sure all listitems up the stack are paragraphs\r\n              forEach( stack, paragraphify, this);\r\n\r\n              last_li.push.apply( last_li, this.toTree( contained, [] ) );\r\n            }\r\n\r\n            var next_block = next[0] && next[0].valueOf() || \"\";\r\n\r\n            if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\r\n              block = next.shift();\r\n\r\n              // Check for an HR following a list: features/lists/hr_abutting\r\n              var hr = this.dialect.block.horizRule( block, next );\r\n\r\n              if ( hr ) {\r\n                ret.push.apply(ret, hr);\r\n                break;\r\n              }\r\n\r\n              // Make sure all listitems up the stack are paragraphs\r\n              forEach( stack, paragraphify, this);\r\n\r\n              loose = true;\r\n              continue loose_search;\r\n            }\r\n            break;\r\n          } // loose_search\r\n\r\n          return ret;\r\n        };\r\n      })(),\r\n\r\n      blockquote: function blockquote( block, next ) {\r\n        if ( !block.match( /^>/m ) )\r\n          return undefined;\r\n\r\n        var jsonml = [];\r\n\r\n        // separate out the leading abutting block, if any. I.e. in this case:\r\n        //\r\n        //  a\r\n        //  > b\r\n        //\r\n        if ( block[ 0 ] !== \">\" ) {\r\n          var lines = block.split( /\\n/ ),\r\n              prev = [],\r\n              line_no = block.lineNumber;\r\n\r\n          // keep shifting lines until you find a crotchet\r\n          while ( lines.length && lines[ 0 ][ 0 ] !== \">\" ) {\r\n            prev.push( lines.shift() );\r\n            line_no++;\r\n          }\r\n\r\n          var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\r\n          jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\r\n          // reassemble new block of just block quotes!\r\n          block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\r\n        }\r\n\r\n\r\n        // if the next block is also a blockquote merge it in\r\n        while ( next.length && next[ 0 ][ 0 ] === \">\" ) {\r\n          var b = next.shift();\r\n          block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\r\n        }\r\n\r\n        // Strip off the leading \"> \" and re-process as a block.\r\n        var input = block.replace( /^> ?/gm, \"\" ),\r\n            old_tree = this.tree,\r\n            processedBlock = this.toTree( input, [ \"blockquote\" ] ),\r\n            attr = extract_attr( processedBlock );\r\n\r\n        // If any link references were found get rid of them\r\n        if ( attr && attr.references ) {\r\n          delete attr.references;\r\n          // And then remove the attribute object if it's empty\r\n          if ( isEmpty( attr ) )\r\n            processedBlock.splice( 1, 1 );\r\n        }\r\n\r\n        jsonml.push( processedBlock );\r\n        return jsonml;\r\n      },\r\n\r\n      referenceDefn: function referenceDefn( block, next) {\r\n        var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\r\n        // interesting matches are [ , ref_id, url, , title, title ]\r\n\r\n        if ( !block.match(re) )\r\n          return undefined;\r\n\r\n        // make an attribute node if it doesn't exist\r\n        if ( !extract_attr( this.tree ) )\r\n          this.tree.splice( 1, 0, {} );\r\n\r\n        var attrs = extract_attr( this.tree );\r\n\r\n        // make a references hash if it doesn't exist\r\n        if ( attrs.references === undefined )\r\n          attrs.references = {};\r\n\r\n        var b = this.loop_re_over_block(re, block, function( m ) {\r\n\r\n          if ( m[2] && m[2][0] === \"<\" && m[2][m[2].length-1] === \">\" )\r\n            m[2] = m[2].substring( 1, m[2].length - 1 );\r\n\r\n          var ref = attrs.references[ m[1].toLowerCase() ] = {\r\n            href: m[2]\r\n          };\r\n\r\n          if ( m[4] !== undefined )\r\n            ref.title = m[4];\r\n          else if ( m[5] !== undefined )\r\n            ref.title = m[5];\r\n\r\n        } );\r\n\r\n        if ( b.length )\r\n          next.unshift( mk_block( b, block.trailing ) );\r\n\r\n        return [];\r\n      },\r\n\r\n      para: function para( block ) {\r\n        // everything's a para!\r\n        return [ [\"para\"].concat( this.processInline( block ) ) ];\r\n      }\r\n    },\r\n\r\n    inline: {\r\n\r\n      __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\r\n        var m,\r\n            res;\r\n\r\n        patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\r\n        var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\r\n\r\n        m = re.exec( text );\r\n        if (!m) {\r\n          // Just boring text\r\n          return [ text.length, text ];\r\n        }\r\n        else if ( m[1] ) {\r\n          // Some un-interesting text matched. Return that first\r\n          return [ m[1].length, m[1] ];\r\n        }\r\n\r\n        var res;\r\n        if ( m[2] in this.dialect.inline ) {\r\n          res = this.dialect.inline[ m[2] ].call(\r\n                    this,\r\n                    text.substr( m.index ), m, previous_nodes || [] );\r\n        }\r\n        // Default for now to make dev easier. just slurp special and output it.\r\n        res = res || [ m[2].length, m[2] ];\r\n        return res;\r\n      },\r\n\r\n      __call__: function inline( text, patterns ) {\r\n\r\n        var out = [],\r\n            res;\r\n\r\n        function add(x) {\r\n          //D:self.debug(\"  adding output\", uneval(x));\r\n          if ( typeof x === \"string\" && typeof out[out.length-1] === \"string\" )\r\n            out[ out.length-1 ] += x;\r\n          else\r\n            out.push(x);\r\n        }\r\n\r\n        while ( text.length > 0 ) {\r\n          res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\r\n          text = text.substr( res.shift() );\r\n          forEach(res, add );\r\n        }\r\n\r\n        return out;\r\n      },\r\n\r\n      // These characters are intersting elsewhere, so have rules for them so that\r\n      // chunks of plain text blocks don't include them\r\n      \"]\": function () {},\r\n      \"}\": function () {},\r\n\r\n      __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\r\n\r\n      \"\\\\\": function escaped( text ) {\r\n        // [ length of input processed, node/children to add... ]\r\n        // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\r\n        if ( this.dialect.inline.__escape__.exec( text ) )\r\n          return [ 2, text.charAt( 1 ) ];\r\n        else\r\n          // Not an esacpe\r\n          return [ 1, \"\\\\\" ];\r\n      },\r\n\r\n      \"![\": function image( text ) {\r\n\r\n        // Unlike images, alt text is plain text only. no other elements are\r\n        // allowed in there\r\n\r\n        // ![Alt text](/path/to/img.jpg \"Optional title\")\r\n        //      1          2            3       4         <--- captures\r\n        var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\r\n\r\n        if ( m ) {\r\n          if ( m[2] && m[2][0] === \"<\" && m[2][m[2].length-1] === \">\" )\r\n            m[2] = m[2].substring( 1, m[2].length - 1 );\r\n\r\n          m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\r\n\r\n          var attrs = { alt: m[1], href: m[2] || \"\" };\r\n          if ( m[4] !== undefined)\r\n            attrs.title = m[4];\r\n\r\n          return [ m[0].length, [ \"img\", attrs ] ];\r\n        }\r\n\r\n        // ![Alt text][id]\r\n        m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\r\n\r\n        if ( m ) {\r\n          // We can't check if the reference is known here as it likely wont be\r\n          // found till after. Check it in md tree->hmtl tree conversion\r\n          return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\r\n        }\r\n\r\n        // Just consume the '!['\r\n        return [ 2, \"![\" ];\r\n      },\r\n\r\n      \"[\": function link( text ) {\r\n\r\n        var orig = String(text);\r\n        // Inline content is possible inside `link text`\r\n        var res = inline_until_char.call( this, text.substr(1), \"]\" );\r\n\r\n        // No closing ']' found. Just consume the [\r\n        if ( !res )\r\n          return [ 1, \"[\" ];\r\n\r\n        var consumed = 1 + res[ 0 ],\r\n            children = res[ 1 ],\r\n            link,\r\n            attrs;\r\n\r\n        // At this point the first [...] has been parsed. See what follows to find\r\n        // out which kind of link we are (reference or direct url)\r\n        text = text.substr( consumed );\r\n\r\n        // [link text](/path/to/img.jpg \"Optional title\")\r\n        //                 1            2       3         <--- captures\r\n        // This will capture up to the last paren in the block. We then pull\r\n        // back based on if there a matching ones in the url\r\n        //    ([here](/url/(test))\r\n        // The parens have to be balanced\r\n        var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\r\n        if ( m ) {\r\n          var url = m[1];\r\n          consumed += m[0].length;\r\n\r\n          if ( url && url[0] === \"<\" && url[url.length-1] === \">\" )\r\n            url = url.substring( 1, url.length - 1 );\r\n\r\n          // If there is a title we don't have to worry about parens in the url\r\n          if ( !m[3] ) {\r\n            var open_parens = 1; // One open that isn't in the capture\r\n            for ( var len = 0; len < url.length; len++ ) {\r\n              switch ( url[len] ) {\r\n              case \"(\":\r\n                open_parens++;\r\n                break;\r\n              case \")\":\r\n                if ( --open_parens === 0) {\r\n                  consumed -= url.length - len;\r\n                  url = url.substring(0, len);\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Process escapes only\r\n          url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\r\n\r\n          attrs = { href: url || \"\" };\r\n          if ( m[3] !== undefined)\r\n            attrs.title = m[3];\r\n\r\n          link = [ \"link\", attrs ].concat( children );\r\n          return [ consumed, link ];\r\n        }\r\n\r\n        // [Alt text][id]\r\n        // [Alt text] [id]\r\n        m = text.match( /^\\s*\\[(.*?)\\]/ );\r\n\r\n        if ( m ) {\r\n\r\n          consumed += m[ 0 ].length;\r\n\r\n          // [links][] uses links as its reference\r\n          attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\r\n\r\n          link = [ \"link_ref\", attrs ].concat( children );\r\n\r\n          // We can't check if the reference is known here as it likely wont be\r\n          // found till after. Check it in md tree->hmtl tree conversion.\r\n          // Store the original so that conversion can revert if the ref isn't found.\r\n          return [ consumed, link ];\r\n        }\r\n\r\n        // [id]\r\n        // Only if id is plain (no formatting.)\r\n        if ( children.length === 1 && typeof children[0] === \"string\" ) {\r\n\r\n          attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\r\n          link = [ \"link_ref\", attrs, children[0] ];\r\n          return [ consumed, link ];\r\n        }\r\n\r\n        // Just consume the \"[\"\r\n        return [ 1, \"[\" ];\r\n      },\r\n\r\n\r\n      \"<\": function autoLink( text ) {\r\n        var m;\r\n\r\n        if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) !== null ) {\r\n          if ( m[3] )\r\n            return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\r\n          else if ( m[2] === \"mailto\" )\r\n            return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\r\n          else\r\n            return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\r\n        }\r\n\r\n        return [ 1, \"<\" ];\r\n      },\r\n\r\n      \"`\": function inlineCode( text ) {\r\n        // Inline code block. as many backticks as you like to start it\r\n        // Always skip over the opening ticks.\r\n        var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\r\n\r\n        if ( m && m[2] )\r\n          return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\r\n        else {\r\n          // TODO: No matching end code found - warn!\r\n          return [ 1, \"`\" ];\r\n        }\r\n      },\r\n\r\n      \"  \\n\": function lineBreak() {\r\n        return [ 3, [ \"linebreak\" ] ];\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  // Meta Helper/generator method for em and strong handling\r\n  function strong_em( tag, md ) {\r\n\r\n    var state_slot = tag + \"_state\",\r\n        other_slot = tag === \"strong\" ? \"em_state\" : \"strong_state\";\r\n\r\n    function CloseTag(len) {\r\n      this.len_after = len;\r\n      this.name = \"close_\" + md;\r\n    }\r\n\r\n    return function ( text ) {\r\n\r\n      if ( this[state_slot][0] === md ) {\r\n        // Most recent em is of this type\r\n        //D:this.debug(\"closing\", md);\r\n        this[state_slot].shift();\r\n\r\n        // \"Consume\" everything to go back to the recrusion in the else-block below\r\n        return[ text.length, new CloseTag(text.length-md.length) ];\r\n      }\r\n      else {\r\n        // Store a clone of the em/strong states\r\n        var other = this[other_slot].slice(),\r\n            state = this[state_slot].slice();\r\n\r\n        this[state_slot].unshift(md);\r\n\r\n        //D:this.debug_indent += \"  \";\r\n\r\n        // Recurse\r\n        var res = this.processInline( text.substr( md.length ) );\r\n        //D:this.debug_indent = this.debug_indent.substr(2);\r\n\r\n        var last = res[res.length - 1];\r\n\r\n        //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\r\n\r\n        var check = this[state_slot].shift();\r\n        if ( last instanceof CloseTag ) {\r\n          res.pop();\r\n          // We matched! Huzzah.\r\n          var consumed = text.length - last.len_after;\r\n          return [ consumed, [ tag ].concat(res) ];\r\n        }\r\n        else {\r\n          // Restore the state of the other kind. We might have mistakenly closed it.\r\n          this[other_slot] = other;\r\n          this[state_slot] = state;\r\n\r\n          // We can't reuse the processed result as it could have wrong parsing contexts in it.\r\n          return [ md.length, md ];\r\n        }\r\n      }\r\n    }; // End returned function\r\n  }\r\n\r\n  Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\r\n  Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\r\n  Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\r\n  Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\r\n\r\n  Markdown.dialects.Gruber = Gruber;\r\n  Markdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\r\n  Markdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\r\n\r\n\r\n\r\n  var Maruku = DialectHelpers.subclassDialect( Gruber ),\r\n      extract_attr = MarkdownHelpers.extract_attr,\r\n      forEach = MarkdownHelpers.forEach;\r\n\r\n  Maruku.processMetaHash = function processMetaHash( meta_string ) {\r\n    var meta = split_meta_hash( meta_string ),\r\n        attr = {};\r\n\r\n    for ( var i = 0; i < meta.length; ++i ) {\r\n      // id: #foo\r\n      if ( /^#/.test( meta[ i ] ) )\r\n        attr.id = meta[ i ].substring( 1 );\r\n      // class: .foo\r\n      else if ( /^\\./.test( meta[ i ] ) ) {\r\n        // if class already exists, append the new one\r\n        if ( attr[\"class\"] )\r\n          attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\r\n        else\r\n          attr[\"class\"] = meta[ i ].substring( 1 );\r\n      }\r\n      // attribute: foo=bar\r\n      else if ( /\\=/.test( meta[ i ] ) ) {\r\n        var s = meta[ i ].split( /\\=/ );\r\n        attr[ s[ 0 ] ] = s[ 1 ];\r\n      }\r\n    }\r\n\r\n    return attr;\r\n  };\r\n\r\n  function split_meta_hash( meta_string ) {\r\n    var meta = meta_string.split( \"\" ),\r\n        parts = [ \"\" ],\r\n        in_quotes = false;\r\n\r\n    while ( meta.length ) {\r\n      var letter = meta.shift();\r\n      switch ( letter ) {\r\n      case \" \" :\r\n        // if we're in a quoted section, keep it\r\n        if ( in_quotes )\r\n          parts[ parts.length - 1 ] += letter;\r\n        // otherwise make a new part\r\n        else\r\n          parts.push( \"\" );\r\n        break;\r\n      case \"'\" :\r\n      case '\"' :\r\n        // reverse the quotes and move straight on\r\n        in_quotes = !in_quotes;\r\n        break;\r\n      case \"\\\\\" :\r\n        // shift off the next letter to be used straight away.\r\n        // it was escaped so we'll keep it whatever it is\r\n        letter = meta.shift();\r\n        /* falls through */\r\n      default :\r\n        parts[ parts.length - 1 ] += letter;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return parts;\r\n  }\r\n\r\n  Maruku.block.document_meta = function document_meta( block ) {\r\n    // we're only interested in the first block\r\n    if ( block.lineNumber > 1 )\r\n      return undefined;\r\n\r\n    // document_meta blocks consist of one or more lines of `Key: Value\\n`\r\n    if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) )\r\n      return undefined;\r\n\r\n    // make an attribute node if it doesn't exist\r\n    if ( !extract_attr( this.tree ) )\r\n      this.tree.splice( 1, 0, {} );\r\n\r\n    var pairs = block.split( /\\n/ );\r\n    for ( var p in pairs ) {\r\n      var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\r\n          key = m[ 1 ].toLowerCase(),\r\n          value = m[ 2 ];\r\n\r\n      this.tree[ 1 ][ key ] = value;\r\n    }\r\n\r\n    // document_meta produces no content!\r\n    return [];\r\n  };\r\n\r\n  Maruku.block.block_meta = function block_meta( block ) {\r\n    // check if the last line of the block is an meta hash\r\n    var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\r\n    if ( !m )\r\n      return undefined;\r\n\r\n    // process the meta hash\r\n    var attr = this.dialect.processMetaHash( m[ 2 ] ),\r\n        hash;\r\n\r\n    // if we matched ^ then we need to apply meta to the previous block\r\n    if ( m[ 1 ] === \"\" ) {\r\n      var node = this.tree[ this.tree.length - 1 ];\r\n      hash = extract_attr( node );\r\n\r\n      // if the node is a string (rather than JsonML), bail\r\n      if ( typeof node === \"string\" )\r\n        return undefined;\r\n\r\n      // create the attribute hash if it doesn't exist\r\n      if ( !hash ) {\r\n        hash = {};\r\n        node.splice( 1, 0, hash );\r\n      }\r\n\r\n      // add the attributes in\r\n      for ( var a in attr )\r\n        hash[ a ] = attr[ a ];\r\n\r\n      // return nothing so the meta hash is removed\r\n      return [];\r\n    }\r\n\r\n    // pull the meta hash off the block and process what's left\r\n    var b = block.replace( /\\n.*$/, \"\" ),\r\n        result = this.processBlock( b, [] );\r\n\r\n    // get or make the attributes hash\r\n    hash = extract_attr( result[ 0 ] );\r\n    if ( !hash ) {\r\n      hash = {};\r\n      result[ 0 ].splice( 1, 0, hash );\r\n    }\r\n\r\n    // attach the attributes to the block\r\n    for ( var a in attr )\r\n      hash[ a ] = attr[ a ];\r\n\r\n    return result;\r\n  };\r\n\r\n  Maruku.block.definition_list = function definition_list( block, next ) {\r\n    // one or more terms followed by one or more definitions, in a single block\r\n    var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\r\n        list = [ \"dl\" ],\r\n        i, m;\r\n\r\n    // see if we're dealing with a tight or loose block\r\n    if ( ( m = block.match( tight ) ) ) {\r\n      // pull subsequent tight DL blocks out of `next`\r\n      var blocks = [ block ];\r\n      while ( next.length && tight.exec( next[ 0 ] ) )\r\n        blocks.push( next.shift() );\r\n\r\n      for ( var b = 0; b < blocks.length; ++b ) {\r\n        var m = blocks[ b ].match( tight ),\r\n            terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\r\n            defns = m[ 2 ].split( /\\n:\\s+/ );\r\n\r\n        // print( uneval( m ) );\r\n\r\n        for ( i = 0; i < terms.length; ++i )\r\n          list.push( [ \"dt\", terms[ i ] ] );\r\n\r\n        for ( i = 0; i < defns.length; ++i ) {\r\n          // run inline processing over the definition\r\n          list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n\r\n    return [ list ];\r\n  };\r\n\r\n  // splits on unescaped instances of @ch. If @ch is not a character the result\r\n  // can be unpredictable\r\n\r\n  Maruku.block.table = function table ( block ) {\r\n\r\n    var _split_on_unescaped = function( s, ch ) {\r\n      ch = ch || '\\\\s';\r\n      if ( ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/) )\r\n        ch = '\\\\' + ch;\r\n      var res = [ ],\r\n          r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\r\n          m;\r\n      while ( ( m = s.match( r ) ) ) {\r\n        res.push( m[1] );\r\n        s = m[2];\r\n      }\r\n      res.push(s);\r\n      return res;\r\n    };\r\n\r\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\r\n        // find at least an unescaped pipe in each line\r\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\r\n        i,\r\n        m;\r\n    if ( ( m = block.match( leading_pipe ) ) ) {\r\n      // remove leading pipes in contents\r\n      // (header and horizontal rule already have the leading pipe left out)\r\n      m[3] = m[3].replace(/^\\s*\\|/gm, '');\r\n    } else if ( ! ( m = block.match( no_leading_pipe ) ) ) {\r\n      return undefined;\r\n    }\r\n\r\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\r\n\r\n    // remove trailing pipes, then split on pipes\r\n    // (no escaped pipes are allowed in horizontal rule)\r\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\r\n\r\n    // process alignment\r\n    var html_attrs = [ ];\r\n    forEach (m[2], function (s) {\r\n      if (s.match(/^\\s*-+:\\s*$/))\r\n        html_attrs.push({align: \"right\"});\r\n      else if (s.match(/^\\s*:-+\\s*$/))\r\n        html_attrs.push({align: \"left\"});\r\n      else if (s.match(/^\\s*:-+:\\s*$/))\r\n        html_attrs.push({align: \"center\"});\r\n      else\r\n        html_attrs.push({});\r\n    });\r\n\r\n    // now for the header, avoid escaped pipes\r\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\r\n    for (i = 0; i < m[1].length; i++) {\r\n      table[1][1].push(['th', html_attrs[i] || {}].concat(\r\n        this.processInline(m[1][i].trim())));\r\n    }\r\n\r\n    // now for body contents\r\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\r\n      var html_row = ['tr'];\r\n      row = _split_on_unescaped(row, '|');\r\n      for (i = 0; i < row.length; i++)\r\n        html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\r\n      table[2].push(html_row);\r\n    }, this);\r\n\r\n    return [table];\r\n  };\r\n\r\n  Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\r\n    if ( !out.length )\r\n      return [ 2, \"{:\" ];\r\n\r\n    // get the preceeding element\r\n    var before = out[ out.length - 1 ];\r\n\r\n    if ( typeof before === \"string\" )\r\n      return [ 2, \"{:\" ];\r\n\r\n    // match a meta hash\r\n    var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\r\n\r\n    // no match, false alarm\r\n    if ( !m )\r\n      return [ 2, \"{:\" ];\r\n\r\n    // attach the attributes to the preceeding element\r\n    var meta = this.dialect.processMetaHash( m[ 1 ] ),\r\n        attr = extract_attr( before );\r\n\r\n    if ( !attr ) {\r\n      attr = {};\r\n      before.splice( 1, 0, attr );\r\n    }\r\n\r\n    for ( var k in meta )\r\n      attr[ k ] = meta[ k ];\r\n\r\n    // cut out the string and replace it with nothing\r\n    return [ m[ 0 ].length, \"\" ];\r\n  };\r\n\r\n\r\n  Markdown.dialects.Maruku = Maruku;\r\n  Markdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\r\n  Markdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\r\n  Markdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\r\n\r\n  /*\r\n// Include all our depndencies and;\r\n  expose.Markdown = Markdown;\r\n  expose.parse = Markdown.parse;\r\n  expose.toHTML = Markdown.toHTML;\r\n  expose.toHTMLTree = Markdown.toHTMLTree;\r\n  expose.renderJsonML = Markdown.renderJsonML;\r\n\r\n\r\n})(function() {\r\n  window.markdown = {};\r\n  return window.markdown;\r\n}());\r\n\r\n*/\n\n//# sourceURL=webpack:///./app/markdown.js?");

/***/ }),

/***/ "./app/templates.ts":
/*!**************************!*\
  !*** ./app/templates.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Handlebars = __webpack_require__(/*! ../node_modules/handlebars/dist/handlebars.js */ \"./node_modules/handlebars/dist/handlebars.js\");\nHandlebars.registerHelper('fmtTime', function (moment) {\n    return moment.format('YYYY-MM-DD HH:mm:ss');\n});\nHandlebars.registerHelper('fmtDate', function (date) {\n    return date;\n    //return `${date.getFullYear()}__${date.getDate()}`;\n});\nexports.main = Handlebars.compile(\"\\n    <nav><ul>\\n        <li><a href=\\\"#app\\\">Applications</a></li>\\n        <li><a href=\\\"#travel\\\">Travel</a></li>\\n        <li><a href=\\\"#trk\\\">Trekking</a></li>\\n        <li><a href=\\\"#trk_plan\\\">Trakking Plan</a></li>\\n    </ul></nav>\\n\\n    <section id=\\\"app\\\"><a name=\\\"app\\\"></a>\\n    <h3>Personal Applications</h3><dl>\\n        <dt><a href=\\\"https://github.com/dayanuyim/GisEditor/blob/master/README.md\\\">GisEditor</a></dt>\\n        <dd>A map browsing adapter to WMTS, written in Python, running in Windows/Linux.</dd>\\n    </dl>\\n    </section>\\n\\n    <section id=\\\"travel\\\"><a name=\\\"travel\\\"></a>\\n    <h3>Travel</h3>\\n    <h4>2016</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2016_0416</time>\\n            <span class=\\\"title\\\"><i class=\\\"fa fa-map-o\\\"></i>\\u7F85\\u6771\\u50B3\\u85DD\\u4E2D\\u5FC3</span>\\n        </li>\\n    </ul>\\n    </section>\\n\\n    <section id=\\\"trk\\\"><a name=\\\"trk\\\"></a>\\n    <h3>Trekking</h3>\\n\\n\\n    <h4>2018</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2018_1006</time>\\n            <span class=\\\"trk-days\\\">5</span>\\n            <label class=\\\"trk-title\\\">\\u5357\\u6E56\\u5317\\u7A1C</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n            <span class=\\\"trk-keepon\\\"><a href=\\\"https://www.keepon.com.tw/thread-eb566224-0dd1-e811-80dc-901b0e54a4e6.html\\\"></a></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2018_0404</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u6241\\u67CF\\u795E\\u6BBF</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2018_0217</time>\\n            <span class=\\\"trk-days\\\">10</span>\\n            <label class=\\\"trk-title\\\">\\u5927\\u5C0F\\u9B3C\\u6E56</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n            <span class=\\\"trk-keepon\\\"><a href=\\\"https://www.keepon.com.tw/thread-178894b0-38db-e811-80dc-901b0e54a4e6.html\\\"></a></span>\\n        </li>\\n    </ul>\\n\\n    <h4>2017</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2017_0529</time>\\n            <label class=\\\"trk-title\\\">\\u5927\\u5C6F\\u6EAA\\u53E4\\u9053\\u3001\\u5C0F\\u89C0\\u97F3\\u5C71\\u897F\\u5CF0</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2017_0304</time>\\n            <label class=\\\"trk-title\\\">\\u516B\\u9023\\u6EAA\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2017_0212</time>\\n            <label class=\\\"trk-title\\\">\\u6DE1\\u6C34\\u7121\\u6975\\u5929\\u5143\\u5BAE\\u3001\\u5411\\u5929\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2017_0130</time>\\n            <span class=\\\"trk-days\\\">5</span>\\n            <label class=\\\"trk-title\\\">\\u5D50\\u5C71\\u5DE5\\u4F5C\\u7AD9</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2017_0101</time>\\n            <label class=\\\"trk-title\\\">\\u4E2D\\u6B63\\u5C71\\u3001\\u5927\\u5C6F\\u897F\\u5CF0</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n    </ul>\\n\\n    <h4>2016</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2016_1204</time>\\n            <label class=\\\"trk-title\\\">\\u5927\\u5C6F\\u6EAA\\u53E4\\u9053\\u3001\\u7AFF\\u5C3E\\u5D19</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_1112</time>\\n            <label class=\\\"trk-title\\\">\\u7063\\u6F6D\\u53E4\\u9053\\u3001\\u5317\\u52E2\\u6EAA\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_1104</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u591A\\u671B\\u6EAA-\\u52A0\\u7F85\\u795E\\u793E</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0924</time>\\n            <label class=\\\"trk-title\\\">\\u897F\\u52E2\\u5751\\u53E4\\u9053\\u3001\\u6696\\u6771\\u5CFD\\u8C37</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0813</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u6728\\u70AD\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0730</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u7F85\\u99AC\\u7E31\\u8D70</label>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0717</time>\\n            <label class=\\\"trk-title\\\">\\u4E09\\u8C82\\u5DBA\\u7011\\u5E03\\u7FA4\\u3001\\u4E94\\u5206\\u5BEE\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0703</time>\\n            <label class=\\\"trk-title\\\">\\u59C6\\u6307\\u5C71\\u3001\\u528D\\u982D\\u5C71\\u3001\\u7CF6\\u7C73\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0626</time>\\n            <label class=\\\"trk-title\\\">\\u897F\\u52E2\\u6C34\\u5EAB\\u3001\\u6696\\u6771\\u5CFD\\u8C37</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0619</time>\\n            <label class=\\\"trk-title\\\">\\u70AE\\u5B50\\u5D19\\u7011\\u5E03\\u3001\\u8336\\u5C71\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0612-2</time>\\n            <label class=\\\"trk-title\\\">\\u5357\\u90A6\\u5BEE\\u53E4\\u9053\\u3001\\u5C3E\\u5BEE\\u53E4\\u9053\\u5357\\u6BB5</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0612-1</time>\\n            <label class=\\\"trk-title\\\">\\u571F\\u5EAB\\u5CB3</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0610</time>\\n            <label class=\\\"trk-title\\\">\\u5357\\u6E2F\\u5F8C\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0605</time>\\n            <label class=\\\"trk-title\\\">\\u5167\\u96D9\\u6EAA\\u53E4\\u9053\\u3001\\u746A\\u7901\\u53E4\\u9053</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0529</time>\\n            <label class=\\\"trk-title\\\">\\u9EBB\\u7AF9\\u5BEE\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0515</time>\\n            <label class=\\\"trk-title\\\">\\u65B0\\u5C71\\u5922\\u6E56</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0430</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u9999\\u83C7\\u6A4B\\u4E0A\\u5E73\\u5CA9\\u5C71\\u7E31\\u8D70\\u591A\\u52A0\\u5C6F\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0402</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u4F50\\u5F97\\u5BD2\\u3001\\u5854\\u96C5\\u5E9C\\u3001\\u6843\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n            <span class=\\\"trk-keepon\\\"><a href=\\\"http://www.keepon.com.tw/thread-bb758562-a1ff-e511-80c1-901b0e54a4e6.html\\\"></a></span>\\n       </li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0327</time>\\n            <label class=\\\"trk-title\\\">\\u9F8D\\u8239\\u5CA9\\u3001\\u767D\\u77F3\\u6E56\\u5C71\\u3001\\u5927\\u5D19\\u5C3E\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0320</time>\\n            <label class=\\\"trk-title\\\">\\u9BC9\\u9B5A\\u5C71\\u3001\\u9F8D\\u8239\\u5CA9</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0313</time>\\n            <label class=\\\"trk-title\\\">\\u8C61\\u5C71\\u3001\\u5357\\u6E2F\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2016_0228</time>\\n            <label class=\\\"trk-title\\\">\\u9CF6\\u5C71\\u7E31\\u8D70</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n    </ul>\\n\\n    <h4>2015</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2015_1101</time>\\n            <span class=\\\"trk-days\\\">7</span>\\n            <label class=\\\"trk-title\\\">\\u96EA\\u5C71\\u897F\\u7A1C</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2015_0905</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u5C0F\\u8173\\u311A\\u6703\\u5E2B-\\u5408\\u6B61\\u4E3B\\u5317\\u7DDA</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2015_0704</time>\\n            <label class=\\\"trk-title\\\">\\u798F\\u5C71\\u6EAF\\u672D\\u5B54\\u6EAA2K</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2015_0501</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u795E\\u9B54\\u7E31\\u8D70\\u5357\\u6E56\\u5317\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2015_0403</time>\\n            <span class=\\\"trk-days\\\">4</span>\\n            <label class=\\\"trk-title\\\">\\u96EA\\u767D\\u5C71\\u7E31\\u8D70\\u5510\\u7A57\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2015_0101</time>\\n            <span class=\\\"trk-days\\\">4</span>\\n            <label class=\\\"trk-title\\\">\\u93AE\\u91D1\\u908A</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n    </ul>\\n\\n    <h4>2014</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2014_1005</time>\\n            <span class=\\\"trk-days\\\">6</span>\\n            <label class=\\\"trk-title\\\">\\u80FD\\u9AD8\\u5B89\\u6771\\u8ECD</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0906</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u795E\\u9B54\\u585A(\\u672A\\u76E1)</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span>\\n            <span class=\\\"trk-keepon\\\"><a href=\\\"https://www.keepon.com.tw/thread-fd71d6d2-1ad8-e411-93ec-000e04b74954.html\\\"></a></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0829</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u6A21\\u62F3\\u677E</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-facebook\\\"><a href=\\\"https://www.facebook.com/events/1432360940363327/\\\"></a></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0802</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u6771\\u6A21\\u62F3\\u677E</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0712</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u8543\\u793E\\u8DE1\\u5C71(\\u5B89\\u5168\\u4E0B\\u6EAA\\u8DEF)</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-keepon\\\"><a href=\\\"https://www.keepon.com.tw/thread-44390ba3-1ad8-e411-93ec-000e04b74954.html\\\"></a></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0501</time>\\n            <span class=\\\"trk-days\\\">4</span>\\n            <label class=\\\"trk-title\\\">\\u6212\\u8302\\u65AF\\u4E0A\\u5609\\u660E\\u59B9\\u6C60</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0315</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u53F8\\u99AC\\u5EAB\\u65AF\\u53E4\\u9053\\u4E0A\\u96EA\\u767D\\u51FA\\u5510\\u7A57</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0228</time>\\n            <span class=\\\"trk-days\\\">3</span>\\n            <label class=\\\"trk-title\\\">\\u96EA\\u767D\\u3001\\u9D1B\\u9D26\\u6E56\\u3001\\u5510\\u7A57</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0215</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u820A\\u6B66\\u5854\\u570B\\u5C0F</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0125</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u5411\\u5929\\u6E56\\u7E31\\u8D70\\u52A0\\u91CC\\u5C71\\u3001\\u51FA\\u7D05\\u6BDB\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n        </li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0118</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u52A0\\u91CC\\u5C71\\u4E0B\\u98A8\\u7F8E\\u6EAA</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">2014_0104</time>\\n            <label class=\\\"trk-title\\\">\\u5DEB\\u5C71\\u6771\\u9E93</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n    </ul>\\n\\n    <h4>2013</h4><ul>\\n        <li><time class=\\\"trk-date\\\">2013_0126</time>\\n            <span class=\\\"trk-days\\\">2</span>\\n            <label class=\\\"trk-title\\\">\\u62C9\\u6A38\\u5C71\\u3001\\u6CE2\\u9732\\u5C71\\u3001\\u963F\\u7389\\u5C71</label>\\n            <span class=\\\"trk-gpx\\\"></span></li>\\n\\n    </ul>\\n    </section>\\n\\n    <section id=\\\"trk_plan\\\"><a name=\\\"trk_plan\\\"></a>\\n    <h3>Trekking Plan</h3><ul>\\n        <li><time class=\\\"trk-date\\\">plan1</time>\\n            <label class=\\\"trk-title\\\">\\u5927\\u5C0F\\u9B3C\\u6E56</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span></li>\\n\\n        <li><time class=\\\"trk-date\\\">plan3</time>\\n            <label class=\\\"trk-title\\\">\\u4E2D\\u592E\\u5C71\\u8108\\u4E2D\\u6BB5\\uFF1A\\u5BA4\\u5442\\u6728\\u3001\\u5E72\\u5353\\u842C\\u3001\\u4E03\\u5F69\\u6E56</label>\\n            <span class=\\\"trk-gpx\\\"></span>\\n            <span class=\\\"trk-rec\\\"></span></li>\\n    </ul>\\n    </section>\\n\\n    <hr>\\n    <footer>\\n        <p>&copy; 2019</p>\\n    </footer>\\n\");\nexports.trekItem = Handlebars.compile(\"\\n    <time class=\\\"trk-date\\\">{{fmtDate date}}</time>\\n    <span class=\\\"trk-days trk-days-{{days}}\\\">{{days}}</span>\\n    <label class=\\\"trk-title\\\"><a href=\\\"#trek/{{id}}\\\">{{title}}</a></label>\\n    <span class=\\\"trk-gpx\\\"><a href=\\\"data/treks/{{id}}.gpx\\\"><i class=\\\"fa fa-map-marker\\\"></i></a></span>\\n    <span class=\\\"trk-rec\\\"><a href=\\\"data/treks/{{id}}.md\\\"><i class='fa fa-pencil-square-o'></i></a></span>\\n    {{#if keepon}}\\n        <span class=\\\"trk-keepon\\\"><a href=\\\"{{keepon}}\\\"><i class='fa fa-map-signs'></i></a></span>\\n    {{/if}}\\n    {{#if facebook}}\\n        <span class=\\\"trk-facebook\\\"><a href=\\\"{{facebook}}\\\"><i class=\\\"fa fa-facebook-square\\\"></i></a></span>\\n    {{/if}}\\n\");\nexports.trek = Handlebars.compile(\"\\n    <div id=\\\"download\\\">\\n    \\u4E0B\\u8F09:\\n    <a id=\\\"download_trk\\\"><i class=\\\"fa fa-map-marker\\\"></i>\\u822A\\u8DE1</a>&nbsp; \\n    <a id=\\\"download_rec\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i>\\u8A18\\u9304</a>\\n    </div>\\n\\n    <section id=\\\"container\\\">\\n    <section id=\\\"rec\\\">\\n        <div class=\\\"rec-content\\\">[Record loading...]</div>\\n    </section>\\n        \\n    <section id=\\\"map\\\">\\n        <div id=\\\"gmap\\\">[The Map to display]</div>\\n    </section>\\n    </section>\\n\");\n\n\n//# sourceURL=webpack:///./app/templates.ts?");

/***/ }),

/***/ "./app/trk.js":
/*!********************!*\
  !*** ./app/trk.js ***!
  \********************/
/*! exports provided: loadRec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadRec\", function() { return loadRec; });\n/* harmony import */ var _css_trk_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/trk.css */ \"./app/css/trk.css\");\n/* harmony import */ var _css_trk_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_trk_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _markdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markdown */ \"./app/markdown.js\");\n/* harmony import */ var _loadgpx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadgpx */ \"./app/loadgpx.js\");\n/* harmony import */ var google_maps_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! google-maps-api */ \"./node_modules/google-maps-api/index.js\");\n/* harmony import */ var google_maps_api__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(google_maps_api__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\n\nlet Gmap;\nlet Gpxparser;\n\nasync function drawMap(gpx_data){\n    const container = document.querySelector('#map');\n    container.hidden = true;\n\n    const googleMapsApi = google_maps_api__WEBPACK_IMPORTED_MODULE_3__({\n        key: 'AIzaSyDoRAou_pmXgeqexPAUlX3Xkg0eKJ_FMhg',\n        language: 'zh-TW',\n    });\n    const googlemaps = await googleMapsApi();\n\n    const gmap = new googlemaps.Map(document.getElementById('gmap'), {\n        center: {lat: 24.279609, lng: 121.025882},\n        mapTypeId: googlemaps.MapTypeId.TERRAIN,\n        zoom: 15\n    });\n\n    const parser = new _loadgpx__WEBPACK_IMPORTED_MODULE_2__[\"GPXParser\"](gpx_data, gmap, googlemaps);\n    parser.setTrackColour(\"#ff0000\");      // Set the track line colour\n    parser.setTrackWidth(5);               // Set the track line width\n    parser.setMinTrackPointDelta(0.0001);   // Set the minimum distance between track points\n    parser.centerAndZoom();\n    parser.addTrackpointsToMap();          // Add the trackpoints\n    parser.addWaypointsToMap();            // Add the waypoints\n\n    container.hidden = false;\n\n    //set global\n    Gmap = gmap;\n    Gpxparser = parser;\n}\n\n\nasync function loadMap(url)\n{\n    const gmap = document.getElementById('gmap');\n    document.getElementById('download_trk').href = url;\n\n    try{\n        const resp = await fetch(url, { method: 'get', dataType: 'xml' });\n        const text = await resp.text();\n        const xml = (new window.DOMParser()).parseFromString(text, 'text/xml');\n        await drawMap(xml);\n    }\n    catch(err){\n        document.getElementById('download_trk').hidden = true;\n        console.log(err);\n        gmap.innerHTML = \"Google map is not initialized due to loading GPX error\";\n    }\n}\n\n/*********** Records ***********************/\nDate.prototype.addDays = function(days) {\n    var result = new Date(this);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\nfunction padZero(txt, n)\n{\n    for(var i = 0; i < (n - txt.length); ++i){\n        txt = \"0\" + txt;\n    }\n    return txt;\n}\n\nfunction toDateTimeString(date, hh, mm)\n{\n    var txt = \"\";\n\n    //date\n    if(date){\n       var yyyy = date.getFullYear().toString();\n       var mon = (date.getMonth()+1).toString(); // getMonth() is zero-based\n       var dd  = date.getDate().toString();\n       //var hh = date.getHours().toString();\n       //var mm = date.getMinutes().toString();\n       txt = yyyy + '-' + padZero(mon, 2) + '-' + padZero(dd, 2) + 'T';\n    }\n\n    //time\n    txt += padZero(hh, 2) + \":\" + padZero(mm, 2) + \":00+08:00\";\n\n    return txt\n}\n\nfunction genTimeTag(date, hh, mm)\n{\n    if(date || hh || mm){\n        var dt_str = toDateTimeString(date, hh, mm);\n        return '<time datetime=\"' + dt_str + '\">';\n    }\n\n    return '<time>';\n}\n\nfunction addTimeTag(line, date)\n{\n    var regex = /^(\\d\\d):?(\\d\\d)([~-]\\d\\d)?:?(\\d\\d)?(\\D)/;\n    line = line.replace(regex, function(match, hh, mm, hh2, mm2, de2, offset, s){\n        //end time\n        if(hh2){\n            var de = hh2[0];\n            hh2 = hh2.substr(1);\n            if(!mm2){\n                mm2 = hh2;\n                hh2 = hh;\n            }\n        }\n\n        //add time tag\n        var res = genTimeTag(date, hh, mm) + hh + mm + '</time>';\n        if(hh2)\n            res += de + genTimeTag(date, hh2, mm2) + hh2 + mm2 + '</time>';\n        res += de2;\n        return res;\n    });\n\n    return line;\n}\n\nfunction addRecTimeClass(line)\n{\n    var orig_line = line;\n    var trim_line = line.trim();\n\n    if(!trim_line)\n        return \"\";\n    \n    if(orig_line.startsWith(' '))\n        return '<div class=\"rec-timethru\">' + trim_line + '</div>';\n    else\n        return '<div class=\"rec-timestamp\">' + trim_line + '</div>';\n}\n\nfunction formatRecTag(txt, date)\n{\n    var lines = txt.split(/[\\r\\n]+/);\n\n    var res = \"\";\n    for(var i = 0; i < lines.length; ++i){\n        var line = lines[i];\n        line = addTimeTag(line, date);\n        line = addRecTimeClass(line);\n        res += line;\n    }\n    return res;\n}\n\n//gen <div class=\"rec-content\">, from content and title elemnt\nfunction genRecContentElem(content, title, base_date)\n{\n    //parse date from title_elem\n    var day = getDay(title.innerHTML);\n    if(day != null){\n        //retag content_elem and as title_elem's child\n        var date = (base_date)? base_date.addDays(day): null;\n        var content_txt = formatRecTag(content.innerHTML, date);\n\n        var elem = document.createElement(\"DIV\");\n        elem.className += \"rec-content \";\n        elem.innerHTML = content_txt;\n        return elem;\n    }\n\n    return null;\n}\n\nfunction getStartDate(txt)\n{\n    var re = /\\d\\d\\d\\d[\\/.-]\\d{1,2}[\\/.-]\\d{1,2}/m;\n    var arr =  txt.match(re);\n    if(arr && arr.length >= 1){\n        var date = arr[0].replace(/\\//g, '-');\n        return new Date(date);\n    }\n\n    return null;\n}\n\nfunction getDay(txt)\n{\n    var re = /D(\\d+)\\s/\n    var arr = txt.match(re);\n    if(arr && arr.length >= 2){\n        return parseInt(arr[1]);\n    }\n\n    return null;\n}\n\nfunction addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\nfunction setRecContent(elem, html)\n{\n    elem.innerHTML = html.replace(/<pre><code>/g, \"<article>\").replace(/<\\/code><\\/pre>/g, \"</article>\");\n\n    //get start day\n    var start_date = (elem.firstChild)? getStartDate(elem.firstChild.innerHTML): null;\n    var base_date = start_date? start_date.addDays(-1): null;\n    console.log(\"base_date: \" + base_date);\n\n    for(let i = 0; i < elem.children.length; ++i){\n        const curr = elem.children[i];\n        const last = (i == 0)? null: elem.children[i-1];\n\n        if(curr.tagName == \"ARTICLE\"){\n            //the rec per day, replace 'article' by 'content' elemnt\n            if (last && last.tagName == \"H2\"){\n                var content_elem = genRecContentElem(curr, last, base_date);\n                if(content_elem != null)\n                    elem.replaceChild(content_elem, curr);\n            }\n            //normal\n            else{\n                curr.innerHTML = curr.innerHTML.replace(/[\\r\\n]+/g, '<BR>');\n            }\n        }\n    }\n}\n\nfunction loadText(elem, fname)\n{\n    fetch(fname, {contentType: \"text/plain;charset=UTF-8;\"})\n        .then(function(res){\n            res = formatRecTag(res);\n            elem.innerHTML = \"<pre>\" + res + \"</pre>\";\n        })\n        .catch(function(err){\n            elem.innerHTML = \"Record not found\";\n        });\n}\n\nasync function loadMarkdown(rec_file)\n{\n    const recElem = document.getElementById(\"rec\");\n\n    try{\n        const resp = await fetch(rec_file, {contentType: \"text/markdown;charset=UTF-8;\"});\n        const text = await resp.text();\n        setRecContent(recElem, _markdown__WEBPACK_IMPORTED_MODULE_1__[\"Markdown\"].toHTML(text));\n        document.getElementById('download_rec').href = rec_file;\n        setRecTimestampFocus();\n    }\n    catch(err){\n        console.log(err);\n        document.getElementById('download_rec').hidden = true;\n        recElem.innerHTML = \"[Record not found]\";\n        document.getElementById(\"container\").style.display = \"flex\";\n        document.getElementById(\"container\").style[\"flex-flow\"] = \"column\";\n        document.getElementById(\"rec\").style.flex = \"none\";\n\n        const map_elem = document.getElementById(\"map\");\n        if(map_elem){\n            map_elem.style.position = \"static\";\n            map_elem.style.flex = \"auto\";\n            map_elem.style.width = \"100%\";\n\n            const gmap = document.getElementById('gmap');\n            const rec = document.getElementById('rec');\n            const adjust_height = gmap.height() - rec.height() - 40;\n            gmap.height(adjust_height);\n        }\n    }\n}\n\n// TODO @id -> @mdUrl\nfunction loadRec(id)\n{\n    if(!id){\n        rec.innerHTML = \"No such record.\";\n        return;\n    }\n\n    loadMarkdown(`data/treks/${id}.md`);\n    loadMap(`data/treks/${id}.gpx`)\n\n    //const rec_txt = \"data/treks/\" + id + \".txt\";\n    //loadText(rec, rec_txt);\n}\n\nfunction setRecTimestampFocus()\n{\n    document.querySelectorAll(\".rec-timestamp\").forEach(elem => {\n        const time = elem.getElementsByTagName('time');\n        if(time && time.length > 0){\n            const dt_str = time[0].getAttribute('datetime');\n            if (dt_str)\n                elem.addEventListener('click', () => focusLocation(dt_str));\n        }\n    });\n}\n\nfunction focusLocation(dt_str)\n{\n    var dt = new Date(dt_str);\n    var loc = Gpxparser.lookupLocation(dt);\n    Gmap.setCenter(loc);\n}\n\nfunction getId()\n{\n    var id = location.hash;\n    if(id.startsWith('#'))\n        id = id.substr(1)\n    return id;\n}\n\n//# sourceURL=webpack:///./app/trk.js?");

/***/ }),

/***/ "./node_modules/asap/asap.js":
/*!***********************************!*\
  !*** ./node_modules/asap/asap.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate) {\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\n\n// linked list of tasks (single, with head node)\nvar head = {task: void 0, next: null};\nvar tail = head;\nvar flushing = false;\nvar requestFlush = void 0;\nvar isNodeJS = false;\n\nfunction flush() {\n    /* jshint loopfunc: true */\n\n    while (head.next) {\n        head = head.next;\n        var task = head.task;\n        head.task = void 0;\n        var domain = head.domain;\n\n        if (domain) {\n            head.domain = void 0;\n            domain.enter();\n        }\n\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function() {\n                   throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    flushing = false;\n}\n\nif (typeof process !== \"undefined\" && process.nextTick) {\n    // Node.js before 0.9. Note that some fake-Node environments, like the\n    // Mocha test runner, introduce a `process` global without a `nextTick`.\n    isNodeJS = true;\n\n    requestFlush = function () {\n        process.nextTick(flush);\n    };\n\n} else if (typeof setImmediate === \"function\") {\n    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n    if (typeof window !== \"undefined\") {\n        requestFlush = setImmediate.bind(window, flush);\n    } else {\n        requestFlush = function () {\n            setImmediate(flush);\n        };\n    }\n\n} else if (typeof MessageChannel !== \"undefined\") {\n    // modern browsers\n    // http://www.nonblocking.io/2011/06/windownexttick.html\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    requestFlush = function () {\n        channel.port2.postMessage(0);\n    };\n\n} else {\n    // old browsers\n    requestFlush = function () {\n        setTimeout(flush, 0);\n    };\n}\n\nfunction asap(task) {\n    tail = tail.next = {\n        task: task,\n        domain: isNodeJS && process.domain,\n        next: null\n    };\n\n    if (!flushing) {\n        flushing = true;\n        requestFlush();\n    }\n};\n\nmodule.exports = asap;\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/asap/asap.js?");

/***/ }),

/***/ "./node_modules/google-maps-api/index.js":
/*!***********************************************!*\
  !*** ./node_modules/google-maps-api/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/** @module google-maps-api */\n\nvar script = __webpack_require__( /*! scriptjs */ \"./node_modules/scriptjs/dist/script.js\" ),\n  promise = __webpack_require__( /*! promise */ \"./node_modules/promise/index.js\" );\n\nvar maps = null,\n  callBacks = [],\n  key;\n\nwindow.$$mapsCB = function() {\n\n  maps = google.maps;\n\n  for( var i = 0, len = callBacks.length; i < len; i++ ) {\n\n    resolve.apply( undefined, callBacks[ i ] );\n  }\n};\n\nfunction resolve( onOk, onErr, onComplete, err ) {\n\n  if( !err ) {\n\n    onOk( maps );\n\n    if( onComplete )\n      onComplete( undefined, maps );\n  } else {\n\n    onErr( err );\n\n    if( onComplete )\n      onComplete( err );\n  }\n}\n\n\n/**\n * Load a Google Maps API Object asynchronously. This module will return a Promise.\n * Which will on resolved will return the \"google.maps\" object.\n *\n * Or if you prefer you can simply use the callback instead.\n *\n * @param  {String} apikey Your Google Maps API Key\n * @param  {Function} [onComplete] A callback which will return the google.maps object\n * @return {Promise} When this promise resolves it will return the google.maps object\n *\n * @example using via promise\n *\n * ```javascript\n * var mapsapi = require( 'google-maps-api' )( 'your api key' );\n *\n * mapsapi().then( function( maps ) {\n *\n *  //use the google.maps object as you please\n * });\n * ```\n *\n * @example using via callback\n * ```javascript\n * require( 'google-maps-api' )( 'your api key', function( maps ) {\n *\n *  //use the google.maps object as you please\n * })\n * ```\n */\nmodule.exports = function( apikey, libraries, onComplete ) {\n\n  key = apikey || key;\n  if (typeof libraries == 'function') {\n    onComplete = libraries;\n    libraries = [];\n  }\n\n  return function() {\n\n    return new promise( function( onOk, onErr ) {\n\n      if( !key ) {\n\n        resolve( onOk, onErr, onComplete, new Error( 'No API key passed to require(\\'google-maps-api\\')' ) );\n      } else {\n\n        if( maps ) {\n\n          resolve( onOk, onErr, onComplete );\n        } else {\n\n          callBacks.push( [ onOk, onErr, onComplete ] );\n\n          if (callBacks.length == 1) {\n            var auth = '';\n            if (typeof key == 'string') {\n\n              auth = '&key=' + key;\n            } else if (typeof key == 'object') {\n\n              auth = '&' + Object.keys(key).map(function (k) {\n                return k + '=' + encodeURIComponent(key[k]);\n              }).join('&');\n            }\n\n            var url = 'https://maps.googleapis.com/maps/api/js?v=3&callback=$$mapsCB' + auth;\n            if (Array.isArray(libraries) && libraries.length > 0) {\n              url+='&libraries='+libraries.join(',');\n            }\n            script( url );\n          }\n        }\n      }\n    });\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/google-maps-api/index.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/handlebars.js":
/*!****************************************************!*\
  !*** ./node_modules/handlebars/dist/handlebars.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**!\n\n @license\n handlebars v4.1.0\n\nCopyright (C) 2011-2017 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsRuntime = __webpack_require__(2);\n\n\tvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n\t// Compiler imports\n\n\tvar _handlebarsCompilerAst = __webpack_require__(35);\n\n\tvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\n\tvar _handlebarsCompilerBase = __webpack_require__(36);\n\n\tvar _handlebarsCompilerCompiler = __webpack_require__(41);\n\n\tvar _handlebarsCompilerJavascriptCompiler = __webpack_require__(42);\n\n\tvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\n\tvar _handlebarsCompilerVisitor = __webpack_require__(39);\n\n\tvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\n\tvar _handlebarsNoConflict = __webpack_require__(34);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\tvar _create = _handlebarsRuntime2['default'].create;\n\tfunction create() {\n\t  var hb = _create();\n\n\t  hb.compile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.compile(input, options, hb);\n\t  };\n\t  hb.precompile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n\t  };\n\n\t  hb.AST = _handlebarsCompilerAst2['default'];\n\t  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n\t  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n\t  hb.Parser = _handlebarsCompilerBase.parser;\n\t  hb.parse = _handlebarsCompilerBase.parse;\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst.Visitor = _handlebarsCompilerVisitor2['default'];\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  return obj && obj.__esModule ? obj : {\n\t    \"default\": obj\n\t  };\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsBase = __webpack_require__(4);\n\n\tvar base = _interopRequireWildcard(_handlebarsBase);\n\n\t// Each of these augment the Handlebars object. No need to setup here.\n\t// (This is done to easily share code between commonjs and browse envs)\n\n\tvar _handlebarsSafeString = __webpack_require__(21);\n\n\tvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\n\tvar _handlebarsException = __webpack_require__(6);\n\n\tvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\n\tvar _handlebarsUtils = __webpack_require__(5);\n\n\tvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\n\tvar _handlebarsRuntime = __webpack_require__(22);\n\n\tvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\n\tvar _handlebarsNoConflict = __webpack_require__(34);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\t// For compatibility and usage outside of module systems, make the Handlebars object a namespace\n\tfunction create() {\n\t  var hb = new base.HandlebarsEnvironment();\n\n\t  Utils.extend(hb, base);\n\t  hb.SafeString = _handlebarsSafeString2['default'];\n\t  hb.Exception = _handlebarsException2['default'];\n\t  hb.Utils = Utils;\n\t  hb.escapeExpression = Utils.escapeExpression;\n\n\t  hb.VM = runtime;\n\t  hb.template = function (spec) {\n\t    return runtime.template(spec, hb);\n\t  };\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  if (obj && obj.__esModule) {\n\t    return obj;\n\t  } else {\n\t    var newObj = {};\n\n\t    if (obj != null) {\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n\t      }\n\t    }\n\n\t    newObj[\"default\"] = obj;\n\t    return newObj;\n\t  }\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.HandlebarsEnvironment = HandlebarsEnvironment;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _helpers = __webpack_require__(10);\n\n\tvar _decorators = __webpack_require__(18);\n\n\tvar _logger = __webpack_require__(20);\n\n\tvar _logger2 = _interopRequireDefault(_logger);\n\n\tvar VERSION = '4.1.0';\n\texports.VERSION = VERSION;\n\tvar COMPILER_REVISION = 7;\n\n\texports.COMPILER_REVISION = COMPILER_REVISION;\n\tvar REVISION_CHANGES = {\n\t  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n\t  2: '== 1.0.0-rc.3',\n\t  3: '== 1.0.0-rc.4',\n\t  4: '== 1.x.x',\n\t  5: '== 2.0.0-alpha.x',\n\t  6: '>= 2.0.0-beta.1',\n\t  7: '>= 4.0.0'\n\t};\n\n\texports.REVISION_CHANGES = REVISION_CHANGES;\n\tvar objectType = '[object Object]';\n\n\tfunction HandlebarsEnvironment(helpers, partials, decorators) {\n\t  this.helpers = helpers || {};\n\t  this.partials = partials || {};\n\t  this.decorators = decorators || {};\n\n\t  _helpers.registerDefaultHelpers(this);\n\t  _decorators.registerDefaultDecorators(this);\n\t}\n\n\tHandlebarsEnvironment.prototype = {\n\t  constructor: HandlebarsEnvironment,\n\n\t  logger: _logger2['default'],\n\t  log: _logger2['default'].log,\n\n\t  registerHelper: function registerHelper(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple helpers');\n\t      }\n\t      _utils.extend(this.helpers, name);\n\t    } else {\n\t      this.helpers[name] = fn;\n\t    }\n\t  },\n\t  unregisterHelper: function unregisterHelper(name) {\n\t    delete this.helpers[name];\n\t  },\n\n\t  registerPartial: function registerPartial(name, partial) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      _utils.extend(this.partials, name);\n\t    } else {\n\t      if (typeof partial === 'undefined') {\n\t        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n\t      }\n\t      this.partials[name] = partial;\n\t    }\n\t  },\n\t  unregisterPartial: function unregisterPartial(name) {\n\t    delete this.partials[name];\n\t  },\n\n\t  registerDecorator: function registerDecorator(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple decorators');\n\t      }\n\t      _utils.extend(this.decorators, name);\n\t    } else {\n\t      this.decorators[name] = fn;\n\t    }\n\t  },\n\t  unregisterDecorator: function unregisterDecorator(name) {\n\t    delete this.decorators[name];\n\t  }\n\t};\n\n\tvar log = _logger2['default'].log;\n\n\texports.log = log;\n\texports.createFrame = _utils.createFrame;\n\texports.logger = _logger2['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.extend = extend;\n\texports.indexOf = indexOf;\n\texports.escapeExpression = escapeExpression;\n\texports.isEmpty = isEmpty;\n\texports.createFrame = createFrame;\n\texports.blockParams = blockParams;\n\texports.appendContextPath = appendContextPath;\n\tvar escape = {\n\t  '&': '&amp;',\n\t  '<': '&lt;',\n\t  '>': '&gt;',\n\t  '\"': '&quot;',\n\t  \"'\": '&#x27;',\n\t  '`': '&#x60;',\n\t  '=': '&#x3D;'\n\t};\n\n\tvar badChars = /[&<>\"'`=]/g,\n\t    possible = /[&<>\"'`=]/;\n\n\tfunction escapeChar(chr) {\n\t  return escape[chr];\n\t}\n\n\tfunction extend(obj /* , ...source */) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    for (var key in arguments[i]) {\n\t      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n\t        obj[key] = arguments[i][key];\n\t      }\n\t    }\n\t  }\n\n\t  return obj;\n\t}\n\n\tvar toString = Object.prototype.toString;\n\n\texports.toString = toString;\n\t// Sourced from lodash\n\t// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n\t/* eslint-disable func-style */\n\tvar isFunction = function isFunction(value) {\n\t  return typeof value === 'function';\n\t};\n\t// fallback for older versions of Chrome and Safari\n\t/* istanbul ignore next */\n\tif (isFunction(/x/)) {\n\t  exports.isFunction = isFunction = function (value) {\n\t    return typeof value === 'function' && toString.call(value) === '[object Function]';\n\t  };\n\t}\n\texports.isFunction = isFunction;\n\n\t/* eslint-enable func-style */\n\n\t/* istanbul ignore next */\n\tvar isArray = Array.isArray || function (value) {\n\t  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n\t};\n\n\texports.isArray = isArray;\n\t// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\n\tfunction indexOf(array, value) {\n\t  for (var i = 0, len = array.length; i < len; i++) {\n\t    if (array[i] === value) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\n\tfunction escapeExpression(string) {\n\t  if (typeof string !== 'string') {\n\t    // don't escape SafeStrings, since they're already safe\n\t    if (string && string.toHTML) {\n\t      return string.toHTML();\n\t    } else if (string == null) {\n\t      return '';\n\t    } else if (!string) {\n\t      return string + '';\n\t    }\n\n\t    // Force a string conversion as this will be done by the append regardless and\n\t    // the regex test will do this transparently behind the scenes, causing issues if\n\t    // an object's to string has escaped characters in it.\n\t    string = '' + string;\n\t  }\n\n\t  if (!possible.test(string)) {\n\t    return string;\n\t  }\n\t  return string.replace(badChars, escapeChar);\n\t}\n\n\tfunction isEmpty(value) {\n\t  if (!value && value !== 0) {\n\t    return true;\n\t  } else if (isArray(value) && value.length === 0) {\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\n\tfunction createFrame(object) {\n\t  var frame = extend({}, object);\n\t  frame._parent = object;\n\t  return frame;\n\t}\n\n\tfunction blockParams(params, ids) {\n\t  params.path = ids;\n\t  return params;\n\t}\n\n\tfunction appendContextPath(contextPath, id) {\n\t  return (contextPath ? contextPath + '.' : '') + id;\n\t}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _Object$defineProperty = __webpack_require__(7)['default'];\n\n\texports.__esModule = true;\n\n\tvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\n\tfunction Exception(message, node) {\n\t  var loc = node && node.loc,\n\t      line = undefined,\n\t      column = undefined;\n\t  if (loc) {\n\t    line = loc.start.line;\n\t    column = loc.start.column;\n\n\t    message += ' - ' + line + ':' + column;\n\t  }\n\n\t  var tmp = Error.prototype.constructor.call(this, message);\n\n\t  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n\t  for (var idx = 0; idx < errorProps.length; idx++) {\n\t    this[errorProps[idx]] = tmp[errorProps[idx]];\n\t  }\n\n\t  /* istanbul ignore else */\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, Exception);\n\t  }\n\n\t  try {\n\t    if (loc) {\n\t      this.lineNumber = line;\n\n\t      // Work around issue under safari where we can't directly set the column value\n\t      /* istanbul ignore next */\n\t      if (_Object$defineProperty) {\n\t        Object.defineProperty(this, 'column', {\n\t          value: column,\n\t          enumerable: true\n\t        });\n\t      } else {\n\t        this.column = column;\n\t      }\n\t    }\n\t  } catch (nop) {\n\t    /* Ignore if the browser is very particular */\n\t  }\n\t}\n\n\tException.prototype = new Error();\n\n\texports['default'] = Exception;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(8), __esModule: true };\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(9);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultHelpers = registerDefaultHelpers;\n\n\tvar _helpersBlockHelperMissing = __webpack_require__(11);\n\n\tvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\n\tvar _helpersEach = __webpack_require__(12);\n\n\tvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\n\tvar _helpersHelperMissing = __webpack_require__(13);\n\n\tvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\n\tvar _helpersIf = __webpack_require__(14);\n\n\tvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\n\tvar _helpersLog = __webpack_require__(15);\n\n\tvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\n\tvar _helpersLookup = __webpack_require__(16);\n\n\tvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\n\tvar _helpersWith = __webpack_require__(17);\n\n\tvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\n\tfunction registerDefaultHelpers(instance) {\n\t  _helpersBlockHelperMissing2['default'](instance);\n\t  _helpersEach2['default'](instance);\n\t  _helpersHelperMissing2['default'](instance);\n\t  _helpersIf2['default'](instance);\n\t  _helpersLog2['default'](instance);\n\t  _helpersLookup2['default'](instance);\n\t  _helpersWith2['default'](instance);\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('blockHelperMissing', function (context, options) {\n\t    var inverse = options.inverse,\n\t        fn = options.fn;\n\n\t    if (context === true) {\n\t      return fn(this);\n\t    } else if (context === false || context == null) {\n\t      return inverse(this);\n\t    } else if (_utils.isArray(context)) {\n\t      if (context.length > 0) {\n\t        if (options.ids) {\n\t          options.ids = [options.name];\n\t        }\n\n\t        return instance.helpers.each(context, options);\n\t      } else {\n\t        return inverse(this);\n\t      }\n\t    } else {\n\t      if (options.data && options.ids) {\n\t        var data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n\t        options = { data: data };\n\t      }\n\n\t      return fn(context, options);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('each', function (context, options) {\n\t    if (!options) {\n\t      throw new _exception2['default']('Must pass iterator to #each');\n\t    }\n\n\t    var fn = options.fn,\n\t        inverse = options.inverse,\n\t        i = 0,\n\t        ret = '',\n\t        data = undefined,\n\t        contextPath = undefined;\n\n\t    if (options.data && options.ids) {\n\t      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n\t    }\n\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    if (options.data) {\n\t      data = _utils.createFrame(options.data);\n\t    }\n\n\t    function execIteration(field, index, last) {\n\t      if (data) {\n\t        data.key = field;\n\t        data.index = index;\n\t        data.first = index === 0;\n\t        data.last = !!last;\n\n\t        if (contextPath) {\n\t          data.contextPath = contextPath + field;\n\t        }\n\t      }\n\n\t      ret = ret + fn(context[field], {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n\t      });\n\t    }\n\n\t    if (context && typeof context === 'object') {\n\t      if (_utils.isArray(context)) {\n\t        for (var j = context.length; i < j; i++) {\n\t          if (i in context) {\n\t            execIteration(i, i, i === context.length - 1);\n\t          }\n\t        }\n\t      } else {\n\t        var priorKey = undefined;\n\n\t        for (var key in context) {\n\t          if (context.hasOwnProperty(key)) {\n\t            // We're running the iterations one step out of sync so we can detect\n\t            // the last iteration without have to scan the object twice and create\n\t            // an itermediate keys array.\n\t            if (priorKey !== undefined) {\n\t              execIteration(priorKey, i - 1);\n\t            }\n\t            priorKey = key;\n\t            i++;\n\t          }\n\t        }\n\t        if (priorKey !== undefined) {\n\t          execIteration(priorKey, i - 1, true);\n\t        }\n\t      }\n\t    }\n\n\t    if (i === 0) {\n\t      ret = inverse(this);\n\t    }\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n\t    if (arguments.length === 1) {\n\t      // A missing field in a {{foo}} construct.\n\t      return undefined;\n\t    } else {\n\t      // Someone is actually trying to call something, blow up.\n\t      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('if', function (conditional, options) {\n\t    if (_utils.isFunction(conditional)) {\n\t      conditional = conditional.call(this);\n\t    }\n\n\t    // Default behavior is to render the positive path if the value is truthy and not empty.\n\t    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n\t    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n\t    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n\t      return options.inverse(this);\n\t    } else {\n\t      return options.fn(this);\n\t    }\n\t  });\n\n\t  instance.registerHelper('unless', function (conditional, options) {\n\t    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('log', function () /* message, options */{\n\t    var args = [undefined],\n\t        options = arguments[arguments.length - 1];\n\t    for (var i = 0; i < arguments.length - 1; i++) {\n\t      args.push(arguments[i]);\n\t    }\n\n\t    var level = 1;\n\t    if (options.hash.level != null) {\n\t      level = options.hash.level;\n\t    } else if (options.data && options.data.level != null) {\n\t      level = options.data.level;\n\t    }\n\t    args[0] = level;\n\n\t    instance.log.apply(instance, args);\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('lookup', function (obj, field) {\n\t    return obj && obj[field];\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('with', function (context, options) {\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    var fn = options.fn;\n\n\t    if (!_utils.isEmpty(context)) {\n\t      var data = options.data;\n\t      if (options.data && options.ids) {\n\t        data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n\t      }\n\n\t      return fn(context, {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context], [data && data.contextPath])\n\t      });\n\t    } else {\n\t      return options.inverse(this);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultDecorators = registerDefaultDecorators;\n\n\tvar _decoratorsInline = __webpack_require__(19);\n\n\tvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\n\tfunction registerDefaultDecorators(instance) {\n\t  _decoratorsInline2['default'](instance);\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerDecorator('inline', function (fn, props, container, options) {\n\t    var ret = fn;\n\t    if (!props.partials) {\n\t      props.partials = {};\n\t      ret = function (context, options) {\n\t        // Create a new partials stack frame prior to exec.\n\t        var original = container.partials;\n\t        container.partials = _utils.extend({}, original, props.partials);\n\t        var ret = fn(context, options);\n\t        container.partials = original;\n\t        return ret;\n\t      };\n\t    }\n\n\t    props.partials[options.args[0]] = options.fn;\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar logger = {\n\t  methodMap: ['debug', 'info', 'warn', 'error'],\n\t  level: 'info',\n\n\t  // Maps a given level value to the `methodMap` indexes above.\n\t  lookupLevel: function lookupLevel(level) {\n\t    if (typeof level === 'string') {\n\t      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n\t      if (levelMap >= 0) {\n\t        level = levelMap;\n\t      } else {\n\t        level = parseInt(level, 10);\n\t      }\n\t    }\n\n\t    return level;\n\t  },\n\n\t  // Can be overridden in the host environment\n\t  log: function log(level) {\n\t    level = logger.lookupLevel(level);\n\n\t    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n\t      var method = logger.methodMap[level];\n\t      if (!console[method]) {\n\t        // eslint-disable-line no-console\n\t        method = 'log';\n\t      }\n\n\t      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        message[_key - 1] = arguments[_key];\n\t      }\n\n\t      console[method].apply(console, message); // eslint-disable-line no-console\n\t    }\n\t  }\n\t};\n\n\texports['default'] = logger;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t// Build out our basic SafeString type\n\t'use strict';\n\n\texports.__esModule = true;\n\tfunction SafeString(string) {\n\t  this.string = string;\n\t}\n\n\tSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n\t  return '' + this.string;\n\t};\n\n\texports['default'] = SafeString;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _Object$seal = __webpack_require__(23)['default'];\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.checkRevision = checkRevision;\n\texports.template = template;\n\texports.wrapProgram = wrapProgram;\n\texports.resolvePartial = resolvePartial;\n\texports.invokePartial = invokePartial;\n\texports.noop = noop;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar Utils = _interopRequireWildcard(_utils);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _base = __webpack_require__(4);\n\n\tfunction checkRevision(compilerInfo) {\n\t  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n\t      currentRevision = _base.COMPILER_REVISION;\n\n\t  if (compilerRevision !== currentRevision) {\n\t    if (compilerRevision < currentRevision) {\n\t      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n\t          compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n\t      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n\t    } else {\n\t      // Use the embedded version info since the runtime doesn't know about this revision yet\n\t      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n\t    }\n\t  }\n\t}\n\n\tfunction template(templateSpec, env) {\n\t  /* istanbul ignore next */\n\t  if (!env) {\n\t    throw new _exception2['default']('No environment passed to template');\n\t  }\n\t  if (!templateSpec || !templateSpec.main) {\n\t    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n\t  }\n\n\t  templateSpec.main.decorator = templateSpec.main_d;\n\n\t  // Note: Using env.VM references rather than local var references throughout this section to allow\n\t  // for external users to override these as psuedo-supported APIs.\n\t  env.VM.checkRevision(templateSpec.compiler);\n\n\t  function invokePartialWrapper(partial, context, options) {\n\t    if (options.hash) {\n\t      context = Utils.extend({}, context, options.hash);\n\t      if (options.ids) {\n\t        options.ids[0] = true;\n\t      }\n\t    }\n\n\t    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\t    var result = env.VM.invokePartial.call(this, partial, context, options);\n\n\t    if (result == null && env.compile) {\n\t      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n\t      result = options.partials[options.name](context, options);\n\t    }\n\t    if (result != null) {\n\t      if (options.indent) {\n\t        var lines = result.split('\\n');\n\t        for (var i = 0, l = lines.length; i < l; i++) {\n\t          if (!lines[i] && i + 1 === l) {\n\t            break;\n\t          }\n\n\t          lines[i] = options.indent + lines[i];\n\t        }\n\t        result = lines.join('\\n');\n\t      }\n\t      return result;\n\t    } else {\n\t      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n\t    }\n\t  }\n\n\t  // Just add water\n\t  var container = {\n\t    strict: function strict(obj, name) {\n\t      if (!(name in obj)) {\n\t        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj);\n\t      }\n\t      return obj[name];\n\t    },\n\t    lookup: function lookup(depths, name) {\n\t      var len = depths.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (depths[i] && depths[i][name] != null) {\n\t          return depths[i][name];\n\t        }\n\t      }\n\t    },\n\t    lambda: function lambda(current, context) {\n\t      return typeof current === 'function' ? current.call(context) : current;\n\t    },\n\n\t    escapeExpression: Utils.escapeExpression,\n\t    invokePartial: invokePartialWrapper,\n\n\t    fn: function fn(i) {\n\t      var ret = templateSpec[i];\n\t      ret.decorator = templateSpec[i + '_d'];\n\t      return ret;\n\t    },\n\n\t    programs: [],\n\t    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n\t      var programWrapper = this.programs[i],\n\t          fn = this.fn(i);\n\t      if (data || depths || blockParams || declaredBlockParams) {\n\t        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n\t      } else if (!programWrapper) {\n\t        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n\t      }\n\t      return programWrapper;\n\t    },\n\n\t    data: function data(value, depth) {\n\t      while (value && depth--) {\n\t        value = value._parent;\n\t      }\n\t      return value;\n\t    },\n\t    merge: function merge(param, common) {\n\t      var obj = param || common;\n\n\t      if (param && common && param !== common) {\n\t        obj = Utils.extend({}, common, param);\n\t      }\n\n\t      return obj;\n\t    },\n\t    // An empty object to use as replacement for null-contexts\n\t    nullContext: _Object$seal({}),\n\n\t    noop: env.VM.noop,\n\t    compilerInfo: templateSpec.compiler\n\t  };\n\n\t  function ret(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var data = options.data;\n\n\t    ret._setup(options);\n\t    if (!options.partial && templateSpec.useData) {\n\t      data = initData(context, data);\n\t    }\n\t    var depths = undefined,\n\t        blockParams = templateSpec.useBlockParams ? [] : undefined;\n\t    if (templateSpec.useDepths) {\n\t      if (options.depths) {\n\t        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n\t      } else {\n\t        depths = [context];\n\t      }\n\t    }\n\n\t    function main(context /*, options*/) {\n\t      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n\t    }\n\t    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n\t    return main(context, options);\n\t  }\n\t  ret.isTop = true;\n\n\t  ret._setup = function (options) {\n\t    if (!options.partial) {\n\t      container.helpers = container.merge(options.helpers, env.helpers);\n\n\t      if (templateSpec.usePartial) {\n\t        container.partials = container.merge(options.partials, env.partials);\n\t      }\n\t      if (templateSpec.usePartial || templateSpec.useDecorators) {\n\t        container.decorators = container.merge(options.decorators, env.decorators);\n\t      }\n\t    } else {\n\t      container.helpers = options.helpers;\n\t      container.partials = options.partials;\n\t      container.decorators = options.decorators;\n\t    }\n\t  };\n\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (templateSpec.useBlockParams && !blockParams) {\n\t      throw new _exception2['default']('must pass block params');\n\t    }\n\t    if (templateSpec.useDepths && !depths) {\n\t      throw new _exception2['default']('must pass parent depths');\n\t    }\n\n\t    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n\t  function prog(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var currentDepths = depths;\n\t    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n\t      currentDepths = [context].concat(depths);\n\t    }\n\n\t    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n\t  }\n\n\t  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n\t  prog.program = i;\n\t  prog.depth = depths ? depths.length : 0;\n\t  prog.blockParams = declaredBlockParams || 0;\n\t  return prog;\n\t}\n\n\tfunction resolvePartial(partial, context, options) {\n\t  if (!partial) {\n\t    if (options.name === '@partial-block') {\n\t      partial = options.data['partial-block'];\n\t    } else {\n\t      partial = options.partials[options.name];\n\t    }\n\t  } else if (!partial.call && !options.name) {\n\t    // This is a dynamic partial that returned a string\n\t    options.name = partial;\n\t    partial = options.partials[partial];\n\t  }\n\t  return partial;\n\t}\n\n\tfunction invokePartial(partial, context, options) {\n\t  // Use the current closure context to save the partial-block if this partial\n\t  var currentPartialBlock = options.data && options.data['partial-block'];\n\t  options.partial = true;\n\t  if (options.ids) {\n\t    options.data.contextPath = options.ids[0] || options.data.contextPath;\n\t  }\n\n\t  var partialBlock = undefined;\n\t  if (options.fn && options.fn !== noop) {\n\t    (function () {\n\t      options.data = _base.createFrame(options.data);\n\t      // Wrapper function to get access to currentPartialBlock from the closure\n\t      var fn = options.fn;\n\t      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t        // Restore the partial-block from the closure for the execution of the block\n\t        // i.e. the part inside the block of the partial call.\n\t        options.data = _base.createFrame(options.data);\n\t        options.data['partial-block'] = currentPartialBlock;\n\t        return fn(context, options);\n\t      };\n\t      if (fn.partials) {\n\t        options.partials = Utils.extend({}, options.partials, fn.partials);\n\t      }\n\t    })();\n\t  }\n\n\t  if (partial === undefined && partialBlock) {\n\t    partial = partialBlock;\n\t  }\n\n\t  if (partial === undefined) {\n\t    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n\t  } else if (partial instanceof Function) {\n\t    return partial(context, options);\n\t  }\n\t}\n\n\tfunction noop() {\n\t  return '';\n\t}\n\n\tfunction initData(context, data) {\n\t  if (!data || !('root' in data)) {\n\t    data = data ? _base.createFrame(data) : {};\n\t    data.root = context;\n\t  }\n\t  return data;\n\t}\n\n\tfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n\t  if (fn.decorator) {\n\t    var props = {};\n\t    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n\t    Utils.extend(prog, props);\n\t  }\n\t  return prog;\n\t}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(24), __esModule: true };\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(25);\n\tmodule.exports = __webpack_require__(30).Object.seal;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.17 Object.seal(O)\n\tvar isObject = __webpack_require__(26);\n\n\t__webpack_require__(27)('seal', function($seal){\n\t  return function seal(it){\n\t    return $seal && isObject(it) ? $seal(it) : it;\n\t  };\n\t});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(28)\n\t  , core    = __webpack_require__(30)\n\t  , fails   = __webpack_require__(33);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(29)\n\t  , core      = __webpack_require__(30)\n\t  , ctx       = __webpack_require__(31)\n\t  , PROTOTYPE = 'prototype';\n\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(32);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/* global window */\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (Handlebars) {\n\t  /* istanbul ignore next */\n\t  var root = typeof global !== 'undefined' ? global : window,\n\t      $Handlebars = root.Handlebars;\n\t  /* istanbul ignore next */\n\t  Handlebars.noConflict = function () {\n\t    if (root.Handlebars === Handlebars) {\n\t      root.Handlebars = $Handlebars;\n\t    }\n\t    return Handlebars;\n\t  };\n\t};\n\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\tvar AST = {\n\t  // Public API used to evaluate derived attributes regarding AST nodes\n\t  helpers: {\n\t    // a mustache is definitely a helper if:\n\t    // * it is an eligible helper, and\n\t    // * it has at least one parameter or hash segment\n\t    helperExpression: function helperExpression(node) {\n\t      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n\t    },\n\n\t    scopedId: function scopedId(path) {\n\t      return (/^\\.|this\\b/.test(path.original)\n\t      );\n\t    },\n\n\t    // an ID is simple if it only has one part, and that part is not\n\t    // `..` or `this`.\n\t    simpleId: function simpleId(path) {\n\t      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n\t    }\n\t  }\n\t};\n\n\t// Must be exported as an object rather than the root of the module as the jison lexer\n\t// must modify the object to operate properly.\n\texports['default'] = AST;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\tvar _interopRequireWildcard = __webpack_require__(3)['default'];\n\n\texports.__esModule = true;\n\texports.parse = parse;\n\n\tvar _parser = __webpack_require__(37);\n\n\tvar _parser2 = _interopRequireDefault(_parser);\n\n\tvar _whitespaceControl = __webpack_require__(38);\n\n\tvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\n\tvar _helpers = __webpack_require__(40);\n\n\tvar Helpers = _interopRequireWildcard(_helpers);\n\n\tvar _utils = __webpack_require__(5);\n\n\texports.parser = _parser2['default'];\n\n\tvar yy = {};\n\t_utils.extend(yy, Helpers);\n\n\tfunction parse(input, options) {\n\t  // Just return if an already-compiled AST was passed in.\n\t  if (input.type === 'Program') {\n\t    return input;\n\t  }\n\n\t  _parser2['default'].yy = yy;\n\n\t  // Altering the shared object here, but this is ok as parser is a sync operation\n\t  yy.locInfo = function (locInfo) {\n\t    return new yy.SourceLocation(options && options.srcName, locInfo);\n\t  };\n\n\t  var strip = new _whitespaceControl2['default'](options);\n\t  return strip.accept(_parser2['default'].parse(input));\n\t}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t// File ignored in coverage tests via setting in .istanbul.yml\n\t/* Jison generated parser */\n\t\"use strict\";\n\n\texports.__esModule = true;\n\tvar handlebars = (function () {\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition_plus0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n\t        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    return $$[$0 - 1];\n\t                    break;\n\t                case 2:\n\t                    this.$ = yy.prepareProgram($$[$0]);\n\t                    break;\n\t                case 3:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 4:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 5:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 6:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 7:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 8:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 9:\n\t                    this.$ = {\n\t                        type: 'CommentStatement',\n\t                        value: yy.stripComment($$[$0]),\n\t                        strip: yy.stripFlags($$[$0], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 10:\n\t                    this.$ = {\n\t                        type: 'ContentStatement',\n\t                        original: $$[$0],\n\t                        value: $$[$0],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 11:\n\t                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 12:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n\t                    break;\n\t                case 13:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n\t                    break;\n\t                case 14:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n\t                    break;\n\t                case 15:\n\t                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 16:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 17:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 18:\n\t                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n\t                    break;\n\t                case 19:\n\t                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n\t                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n\t                    program.chained = true;\n\n\t                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n\t                    break;\n\t                case 20:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 21:\n\t                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n\t                    break;\n\t                case 22:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 23:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 24:\n\t                    this.$ = {\n\t                        type: 'PartialStatement',\n\t                        name: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        indent: '',\n\t                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 25:\n\t                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 26:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n\t                    break;\n\t                case 27:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 28:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 29:\n\t                    this.$ = {\n\t                        type: 'SubExpression',\n\t                        path: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 30:\n\t                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 31:\n\t                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 32:\n\t                    this.$ = yy.id($$[$0 - 1]);\n\t                    break;\n\t                case 33:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 34:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 35:\n\t                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 36:\n\t                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 37:\n\t                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 38:\n\t                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 39:\n\t                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 40:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 41:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 42:\n\t                    this.$ = yy.preparePath(true, $$[$0], this._$);\n\t                    break;\n\t                case 43:\n\t                    this.$ = yy.preparePath(false, $$[$0], this._$);\n\t                    break;\n\t                case 44:\n\t                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n\t                    break;\n\t                case 45:\n\t                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n\t                    break;\n\t                case 46:\n\t                    this.$ = [];\n\t                    break;\n\t                case 47:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 48:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 49:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 50:\n\t                    this.$ = [];\n\t                    break;\n\t                case 51:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 58:\n\t                    this.$ = [];\n\t                    break;\n\t                case 59:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 64:\n\t                    this.$ = [];\n\t                    break;\n\t                case 65:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 70:\n\t                    this.$ = [];\n\t                    break;\n\t                case 71:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 78:\n\t                    this.$ = [];\n\t                    break;\n\t                case 79:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 82:\n\t                    this.$ = [];\n\t                    break;\n\t                case 83:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 86:\n\t                    this.$ = [];\n\t                    break;\n\t                case 87:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 90:\n\t                    this.$ = [];\n\t                    break;\n\t                case 91:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 94:\n\t                    this.$ = [];\n\t                    break;\n\t                case 95:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 98:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 99:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 100:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 101:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n\t        defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },\n\t        parseError: function parseError(str, hash) {\n\t            throw new Error(str);\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = \"\",\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            this.lexer.setInput(input);\n\t            this.lexer.yy = this.yy;\n\t            this.yy.lexer = this.lexer;\n\t            this.yy.parser = this;\n\t            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n\t            var yyloc = this.lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = this.lexer.options && this.lexer.options.ranges;\n\t            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            function lex() {\n\t                var token;\n\t                token = self.lexer.lex() || 1;\n\t                if (typeof token !== \"number\") {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            }\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == \"undefined\") {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n\t                    var errStr = \"\";\n\t                    if (!recovering) {\n\t                        expected = [];\n\t                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n\t                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n\t                        }\n\t                        if (this.lexer.showPosition) {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n\t                        } else {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n\t                        }\n\t                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n\t                    }\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(this.lexer.yytext);\n\t                        lstack.push(this.lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = this.lexer.yyleng;\n\t                            yytext = this.lexer.yytext;\n\t                            yylineno = this.lexer.yylineno;\n\t                            yyloc = this.lexer.yylloc;\n\t                            if (recovering > 0) recovering--;\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\t                        if (typeof r !== \"undefined\") {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t    };\n\t    /* Jison generated lexer */\n\t    var lexer = (function () {\n\t        var lexer = { EOF: 1,\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t            setInput: function setInput(input) {\n\t                this._input = input;\n\t                this._more = this._less = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n\t                if (this.options.ranges) this.yylloc.range = [0, 0];\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) this.yylloc.range[1]++;\n\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n\t                if (lines.length - 1) this.yylineno -= lines.length - 1;\n\t                var r = this.yylloc.range;\n\n\t                this.yylloc = { first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                return this;\n\t            },\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) this.done = true;\n\n\t                var token, match, tempMatch, index, col, lines;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (!this.options.flex) break;\n\t                    }\n\t                }\n\t                if (match) {\n\t                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                    if (lines) this.yylineno += lines.length;\n\t                    this.yylloc = { first_line: this.yylloc.last_line,\n\t                        last_line: this.yylineno + 1,\n\t                        first_column: this.yylloc.last_column,\n\t                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n\t                    this.yytext += match[0];\n\t                    this.match += match[0];\n\t                    this.matches = match;\n\t                    this.yyleng = this.yytext.length;\n\t                    if (this.options.ranges) {\n\t                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                    }\n\t                    this._more = false;\n\t                    this._input = this._input.slice(match[0].length);\n\t                    this.matched += match[0];\n\t                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n\t                    if (this.done && this._input) this.done = false;\n\t                    if (token) return token;else return;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n\t                }\n\t            },\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (typeof r !== 'undefined') {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t            popState: function popState() {\n\t                return this.conditionStack.pop();\n\t            },\n\t            _currentRules: function _currentRules() {\n\t                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t            },\n\t            topState: function topState() {\n\t                return this.conditionStack[this.conditionStack.length - 2];\n\t            },\n\t            pushState: function begin(condition) {\n\t                this.begin(condition);\n\t            } };\n\t        lexer.options = {};\n\t        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\n\t            function strip(start, end) {\n\t                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);\n\t            }\n\n\t            var YYSTATE = YY_START;\n\t            switch ($avoiding_name_collisions) {\n\t                case 0:\n\t                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"mu\");\n\t                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"emu\");\n\t                    } else {\n\t                        this.begin(\"mu\");\n\t                    }\n\t                    if (yy_.yytext) return 15;\n\n\t                    break;\n\t                case 1:\n\t                    return 15;\n\t                    break;\n\t                case 2:\n\t                    this.popState();\n\t                    return 15;\n\n\t                    break;\n\t                case 3:\n\t                    this.begin('raw');return 15;\n\t                    break;\n\t                case 4:\n\t                    this.popState();\n\t                    // Should be using `this.topState()` below, but it currently\n\t                    // returns the second top instead of the first top. Opened an\n\t                    // issue about it at https://github.com/zaach/jison/issues/291\n\t                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n\t                        return 15;\n\t                    } else {\n\t                        yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);\n\t                        return 'END_RAW_BLOCK';\n\t                    }\n\n\t                    break;\n\t                case 5:\n\t                    return 15;\n\t                    break;\n\t                case 6:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 7:\n\t                    return 65;\n\t                    break;\n\t                case 8:\n\t                    return 68;\n\t                    break;\n\t                case 9:\n\t                    return 19;\n\t                    break;\n\t                case 10:\n\t                    this.popState();\n\t                    this.begin('raw');\n\t                    return 23;\n\n\t                    break;\n\t                case 11:\n\t                    return 55;\n\t                    break;\n\t                case 12:\n\t                    return 60;\n\t                    break;\n\t                case 13:\n\t                    return 29;\n\t                    break;\n\t                case 14:\n\t                    return 47;\n\t                    break;\n\t                case 15:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 16:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 17:\n\t                    return 34;\n\t                    break;\n\t                case 18:\n\t                    return 39;\n\t                    break;\n\t                case 19:\n\t                    return 51;\n\t                    break;\n\t                case 20:\n\t                    return 48;\n\t                    break;\n\t                case 21:\n\t                    this.unput(yy_.yytext);\n\t                    this.popState();\n\t                    this.begin('com');\n\n\t                    break;\n\t                case 22:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 23:\n\t                    return 48;\n\t                    break;\n\t                case 24:\n\t                    return 73;\n\t                    break;\n\t                case 25:\n\t                    return 72;\n\t                    break;\n\t                case 26:\n\t                    return 72;\n\t                    break;\n\t                case 27:\n\t                    return 87;\n\t                    break;\n\t                case 28:\n\t                    // ignore whitespace\n\t                    break;\n\t                case 29:\n\t                    this.popState();return 54;\n\t                    break;\n\t                case 30:\n\t                    this.popState();return 33;\n\t                    break;\n\t                case 31:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n\t                    break;\n\t                case 32:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n\t                    break;\n\t                case 33:\n\t                    return 85;\n\t                    break;\n\t                case 34:\n\t                    return 82;\n\t                    break;\n\t                case 35:\n\t                    return 82;\n\t                    break;\n\t                case 36:\n\t                    return 83;\n\t                    break;\n\t                case 37:\n\t                    return 84;\n\t                    break;\n\t                case 38:\n\t                    return 81;\n\t                    break;\n\t                case 39:\n\t                    return 75;\n\t                    break;\n\t                case 40:\n\t                    return 77;\n\t                    break;\n\t                case 41:\n\t                    return 72;\n\t                    break;\n\t                case 42:\n\t                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n\t                    break;\n\t                case 43:\n\t                    return 'INVALID';\n\t                    break;\n\t                case 44:\n\t                    return 5;\n\t                    break;\n\t            }\n\t        };\n\t        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^\\/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]*?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n\t        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();exports[\"default\"] = handlebars;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _visitor = __webpack_require__(39);\n\n\tvar _visitor2 = _interopRequireDefault(_visitor);\n\n\tfunction WhitespaceControl() {\n\t  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n\t  this.options = options;\n\t}\n\tWhitespaceControl.prototype = new _visitor2['default']();\n\n\tWhitespaceControl.prototype.Program = function (program) {\n\t  var doStandalone = !this.options.ignoreStandalone;\n\n\t  var isRoot = !this.isRootSeen;\n\t  this.isRootSeen = true;\n\n\t  var body = program.body;\n\t  for (var i = 0, l = body.length; i < l; i++) {\n\t    var current = body[i],\n\t        strip = this.accept(current);\n\n\t    if (!strip) {\n\t      continue;\n\t    }\n\n\t    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n\t        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\t        openStandalone = strip.openStandalone && _isPrevWhitespace,\n\t        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n\t        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n\t    if (strip.close) {\n\t      omitRight(body, i, true);\n\t    }\n\t    if (strip.open) {\n\t      omitLeft(body, i, true);\n\t    }\n\n\t    if (doStandalone && inlineStandalone) {\n\t      omitRight(body, i);\n\n\t      if (omitLeft(body, i)) {\n\t        // If we are on a standalone node, save the indent info for partials\n\t        if (current.type === 'PartialStatement') {\n\t          // Pull out the whitespace from the final line\n\t          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n\t        }\n\t      }\n\t    }\n\t    if (doStandalone && openStandalone) {\n\t      omitRight((current.program || current.inverse).body);\n\n\t      // Strip out the previous content node if it's whitespace only\n\t      omitLeft(body, i);\n\t    }\n\t    if (doStandalone && closeStandalone) {\n\t      // Always strip the next node\n\t      omitRight(body, i);\n\n\t      omitLeft((current.inverse || current.program).body);\n\t    }\n\t  }\n\n\t  return program;\n\t};\n\n\tWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n\t  this.accept(block.program);\n\t  this.accept(block.inverse);\n\n\t  // Find the inverse program that is involed with whitespace stripping.\n\t  var program = block.program || block.inverse,\n\t      inverse = block.program && block.inverse,\n\t      firstInverse = inverse,\n\t      lastInverse = inverse;\n\n\t  if (inverse && inverse.chained) {\n\t    firstInverse = inverse.body[0].program;\n\n\t    // Walk the inverse chain to find the last inverse that is actually in the chain.\n\t    while (lastInverse.chained) {\n\t      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n\t    }\n\t  }\n\n\t  var strip = {\n\t    open: block.openStrip.open,\n\t    close: block.closeStrip.close,\n\n\t    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n\t    // so our parent can determine if we actually are standalone\n\t    openStandalone: isNextWhitespace(program.body),\n\t    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n\t  };\n\n\t  if (block.openStrip.close) {\n\t    omitRight(program.body, null, true);\n\t  }\n\n\t  if (inverse) {\n\t    var inverseStrip = block.inverseStrip;\n\n\t    if (inverseStrip.open) {\n\t      omitLeft(program.body, null, true);\n\t    }\n\n\t    if (inverseStrip.close) {\n\t      omitRight(firstInverse.body, null, true);\n\t    }\n\t    if (block.closeStrip.open) {\n\t      omitLeft(lastInverse.body, null, true);\n\t    }\n\n\t    // Find standalone else statments\n\t    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n\t      omitLeft(program.body);\n\t      omitRight(firstInverse.body);\n\t    }\n\t  } else if (block.closeStrip.open) {\n\t    omitLeft(program.body, null, true);\n\t  }\n\n\t  return strip;\n\t};\n\n\tWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n\t  return mustache.strip;\n\t};\n\n\tWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n\t  /* istanbul ignore next */\n\t  var strip = node.strip || {};\n\t  return {\n\t    inlineStandalone: true,\n\t    open: strip.open,\n\t    close: strip.close\n\t  };\n\t};\n\n\tfunction isPrevWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = body.length;\n\t  }\n\n\t  // Nodes that end with newlines are considered whitespace (but are special\n\t  // cased for strip operations)\n\t  var prev = body[i - 1],\n\t      sibling = body[i - 2];\n\t  if (!prev) {\n\t    return isRoot;\n\t  }\n\n\t  if (prev.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n\t  }\n\t}\n\tfunction isNextWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = -1;\n\t  }\n\n\t  var next = body[i + 1],\n\t      sibling = body[i + 2];\n\t  if (!next) {\n\t    return isRoot;\n\t  }\n\n\t  if (next.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n\t  }\n\t}\n\n\t// Marks the node to the right of the position as omitted.\n\t// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined, then the first child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitRight(body, i, multiple) {\n\t  var current = body[i == null ? 0 : i + 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n\t    return;\n\t  }\n\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n\t  current.rightStripped = current.value !== original;\n\t}\n\n\t// Marks the node to the left of the position as omitted.\n\t// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined then the last child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitLeft(body, i, multiple) {\n\t  var current = body[i == null ? body.length - 1 : i - 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n\t    return;\n\t  }\n\n\t  // We omit the last node if it's whitespace only and not preceeded by a non-content node.\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n\t  current.leftStripped = current.value !== original;\n\t  return current.leftStripped;\n\t}\n\n\texports['default'] = WhitespaceControl;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction Visitor() {\n\t  this.parents = [];\n\t}\n\n\tVisitor.prototype = {\n\t  constructor: Visitor,\n\t  mutating: false,\n\n\t  // Visits a given value. If mutating, will replace the value if necessary.\n\t  acceptKey: function acceptKey(node, name) {\n\t    var value = this.accept(node[name]);\n\t    if (this.mutating) {\n\t      // Hacky sanity check: This may have a few false positives for type for the helper\n\t      // methods but will generally do the right thing without a lot of overhead.\n\t      if (value && !Visitor.prototype[value.type]) {\n\t        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n\t      }\n\t      node[name] = value;\n\t    }\n\t  },\n\n\t  // Performs an accept operation with added sanity check to ensure\n\t  // required keys are not removed.\n\t  acceptRequired: function acceptRequired(node, name) {\n\t    this.acceptKey(node, name);\n\n\t    if (!node[name]) {\n\t      throw new _exception2['default'](node.type + ' requires ' + name);\n\t    }\n\t  },\n\n\t  // Traverses a given array. If mutating, empty respnses will be removed\n\t  // for child elements.\n\t  acceptArray: function acceptArray(array) {\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t      this.acceptKey(array, i);\n\n\t      if (!array[i]) {\n\t        array.splice(i, 1);\n\t        i--;\n\t        l--;\n\t      }\n\t    }\n\t  },\n\n\t  accept: function accept(object) {\n\t    if (!object) {\n\t      return;\n\t    }\n\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[object.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + object.type, object);\n\t    }\n\n\t    if (this.current) {\n\t      this.parents.unshift(this.current);\n\t    }\n\t    this.current = object;\n\n\t    var ret = this[object.type](object);\n\n\t    this.current = this.parents.shift();\n\n\t    if (!this.mutating || ret) {\n\t      return ret;\n\t    } else if (ret !== false) {\n\t      return object;\n\t    }\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.acceptArray(program.body);\n\t  },\n\n\t  MustacheStatement: visitSubExpression,\n\t  Decorator: visitSubExpression,\n\n\t  BlockStatement: visitBlock,\n\t  DecoratorBlock: visitBlock,\n\n\t  PartialStatement: visitPartial,\n\t  PartialBlockStatement: function PartialBlockStatement(partial) {\n\t    visitPartial.call(this, partial);\n\n\t    this.acceptKey(partial, 'program');\n\t  },\n\n\t  ContentStatement: function ContentStatement() /* content */{},\n\t  CommentStatement: function CommentStatement() /* comment */{},\n\n\t  SubExpression: visitSubExpression,\n\n\t  PathExpression: function PathExpression() /* path */{},\n\n\t  StringLiteral: function StringLiteral() /* string */{},\n\t  NumberLiteral: function NumberLiteral() /* number */{},\n\t  BooleanLiteral: function BooleanLiteral() /* bool */{},\n\t  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n\t  NullLiteral: function NullLiteral() /* literal */{},\n\n\t  Hash: function Hash(hash) {\n\t    this.acceptArray(hash.pairs);\n\t  },\n\t  HashPair: function HashPair(pair) {\n\t    this.acceptRequired(pair, 'value');\n\t  }\n\t};\n\n\tfunction visitSubExpression(mustache) {\n\t  this.acceptRequired(mustache, 'path');\n\t  this.acceptArray(mustache.params);\n\t  this.acceptKey(mustache, 'hash');\n\t}\n\tfunction visitBlock(block) {\n\t  visitSubExpression.call(this, block);\n\n\t  this.acceptKey(block, 'program');\n\t  this.acceptKey(block, 'inverse');\n\t}\n\tfunction visitPartial(partial) {\n\t  this.acceptRequired(partial, 'name');\n\t  this.acceptArray(partial.params);\n\t  this.acceptKey(partial, 'hash');\n\t}\n\n\texports['default'] = Visitor;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.SourceLocation = SourceLocation;\n\texports.id = id;\n\texports.stripFlags = stripFlags;\n\texports.stripComment = stripComment;\n\texports.preparePath = preparePath;\n\texports.prepareMustache = prepareMustache;\n\texports.prepareRawBlock = prepareRawBlock;\n\texports.prepareBlock = prepareBlock;\n\texports.prepareProgram = prepareProgram;\n\texports.preparePartialBlock = preparePartialBlock;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction validateClose(open, close) {\n\t  close = close.path ? close.path.original : close;\n\n\t  if (open.path.original !== close) {\n\t    var errorNode = { loc: open.path.loc };\n\n\t    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n\t  }\n\t}\n\n\tfunction SourceLocation(source, locInfo) {\n\t  this.source = source;\n\t  this.start = {\n\t    line: locInfo.first_line,\n\t    column: locInfo.first_column\n\t  };\n\t  this.end = {\n\t    line: locInfo.last_line,\n\t    column: locInfo.last_column\n\t  };\n\t}\n\n\tfunction id(token) {\n\t  if (/^\\[.*\\]$/.test(token)) {\n\t    return token.substr(1, token.length - 2);\n\t  } else {\n\t    return token;\n\t  }\n\t}\n\n\tfunction stripFlags(open, close) {\n\t  return {\n\t    open: open.charAt(2) === '~',\n\t    close: close.charAt(close.length - 3) === '~'\n\t  };\n\t}\n\n\tfunction stripComment(comment) {\n\t  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n\t}\n\n\tfunction preparePath(data, parts, loc) {\n\t  loc = this.locInfo(loc);\n\n\t  var original = data ? '@' : '',\n\t      dig = [],\n\t      depth = 0;\n\n\t  for (var i = 0, l = parts.length; i < l; i++) {\n\t    var part = parts[i].part,\n\n\t    // If we have [] syntax then we do not treat path references as operators,\n\t    // i.e. foo.[this] resolves to approximately context.foo['this']\n\t    isLiteral = parts[i].original !== part;\n\t    original += (parts[i].separator || '') + part;\n\n\t    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n\t      if (dig.length > 0) {\n\t        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n\t      } else if (part === '..') {\n\t        depth++;\n\t      }\n\t    } else {\n\t      dig.push(part);\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'PathExpression',\n\t    data: data,\n\t    depth: depth,\n\t    parts: dig,\n\t    original: original,\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n\t  // Must use charAt to support IE pre-10\n\t  var escapeFlag = open.charAt(3) || open.charAt(2),\n\t      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n\t  var decorator = /\\*/.test(open);\n\t  return {\n\t    type: decorator ? 'Decorator' : 'MustacheStatement',\n\t    path: path,\n\t    params: params,\n\t    hash: hash,\n\t    escaped: escaped,\n\t    strip: strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n\t  validateClose(openRawBlock, close);\n\n\t  locInfo = this.locInfo(locInfo);\n\t  var program = {\n\t    type: 'Program',\n\t    body: contents,\n\t    strip: {},\n\t    loc: locInfo\n\t  };\n\n\t  return {\n\t    type: 'BlockStatement',\n\t    path: openRawBlock.path,\n\t    params: openRawBlock.params,\n\t    hash: openRawBlock.hash,\n\t    program: program,\n\t    openStrip: {},\n\t    inverseStrip: {},\n\t    closeStrip: {},\n\t    loc: locInfo\n\t  };\n\t}\n\n\tfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n\t  if (close && close.path) {\n\t    validateClose(openBlock, close);\n\t  }\n\n\t  var decorator = /\\*/.test(openBlock.open);\n\n\t  program.blockParams = openBlock.blockParams;\n\n\t  var inverse = undefined,\n\t      inverseStrip = undefined;\n\n\t  if (inverseAndProgram) {\n\t    if (decorator) {\n\t      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n\t    }\n\n\t    if (inverseAndProgram.chain) {\n\t      inverseAndProgram.program.body[0].closeStrip = close.strip;\n\t    }\n\n\t    inverseStrip = inverseAndProgram.strip;\n\t    inverse = inverseAndProgram.program;\n\t  }\n\n\t  if (inverted) {\n\t    inverted = inverse;\n\t    inverse = program;\n\t    program = inverted;\n\t  }\n\n\t  return {\n\t    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n\t    path: openBlock.path,\n\t    params: openBlock.params,\n\t    hash: openBlock.hash,\n\t    program: program,\n\t    inverse: inverse,\n\t    openStrip: openBlock.strip,\n\t    inverseStrip: inverseStrip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareProgram(statements, loc) {\n\t  if (!loc && statements.length) {\n\t    var firstLoc = statements[0].loc,\n\t        lastLoc = statements[statements.length - 1].loc;\n\n\t    /* istanbul ignore else */\n\t    if (firstLoc && lastLoc) {\n\t      loc = {\n\t        source: firstLoc.source,\n\t        start: {\n\t          line: firstLoc.start.line,\n\t          column: firstLoc.start.column\n\t        },\n\t        end: {\n\t          line: lastLoc.end.line,\n\t          column: lastLoc.end.column\n\t        }\n\t      };\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'Program',\n\t    body: statements,\n\t    strip: {},\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction preparePartialBlock(open, program, close, locInfo) {\n\t  validateClose(open, close);\n\n\t  return {\n\t    type: 'PartialBlockStatement',\n\t    name: open.path,\n\t    params: open.params,\n\t    hash: open.hash,\n\t    program: program,\n\t    openStrip: open.strip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* eslint-disable new-cap */\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\texports.Compiler = Compiler;\n\texports.precompile = precompile;\n\texports.compile = compile;\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _ast = __webpack_require__(35);\n\n\tvar _ast2 = _interopRequireDefault(_ast);\n\n\tvar slice = [].slice;\n\n\tfunction Compiler() {}\n\n\t// the foundHelper register will disambiguate helper lookup from finding a\n\t// function in a context. This is necessary for mustache compatibility, which\n\t// requires that context functions in blocks are evaluated by blockHelperMissing,\n\t// and then proceed as if the resulting value was provided to blockHelperMissing.\n\n\tCompiler.prototype = {\n\t  compiler: Compiler,\n\n\t  equals: function equals(other) {\n\t    var len = this.opcodes.length;\n\t    if (other.opcodes.length !== len) {\n\t      return false;\n\t    }\n\n\t    for (var i = 0; i < len; i++) {\n\t      var opcode = this.opcodes[i],\n\t          otherOpcode = other.opcodes[i];\n\t      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n\t        return false;\n\t      }\n\t    }\n\n\t    // We know that length is the same between the two arrays because they are directly tied\n\t    // to the opcode behavior above.\n\t    len = this.children.length;\n\t    for (var i = 0; i < len; i++) {\n\t      if (!this.children[i].equals(other.children[i])) {\n\t        return false;\n\t      }\n\t    }\n\n\t    return true;\n\t  },\n\n\t  guid: 0,\n\n\t  compile: function compile(program, options) {\n\t    this.sourceNode = [];\n\t    this.opcodes = [];\n\t    this.children = [];\n\t    this.options = options;\n\t    this.stringParams = options.stringParams;\n\t    this.trackIds = options.trackIds;\n\n\t    options.blockParams = options.blockParams || [];\n\n\t    // These changes will propagate to the other compiler components\n\t    var knownHelpers = options.knownHelpers;\n\t    options.knownHelpers = {\n\t      'helperMissing': true,\n\t      'blockHelperMissing': true,\n\t      'each': true,\n\t      'if': true,\n\t      'unless': true,\n\t      'with': true,\n\t      'log': true,\n\t      'lookup': true\n\t    };\n\t    if (knownHelpers) {\n\t      // the next line should use \"Object.keys\", but the code has been like this a long time and changing it, might\n\t      // cause backwards-compatibility issues... It's an old library...\n\t      // eslint-disable-next-line guard-for-in\n\t      for (var _name in knownHelpers) {\n\t        this.options.knownHelpers[_name] = knownHelpers[_name];\n\t      }\n\t    }\n\n\t    return this.accept(program);\n\t  },\n\n\t  compileProgram: function compileProgram(program) {\n\t    var childCompiler = new this.compiler(),\n\t        // eslint-disable-line new-cap\n\t    result = childCompiler.compile(program, this.options),\n\t        guid = this.guid++;\n\n\t    this.usePartial = this.usePartial || result.usePartial;\n\n\t    this.children[guid] = result;\n\t    this.useDepths = this.useDepths || result.useDepths;\n\n\t    return guid;\n\t  },\n\n\t  accept: function accept(node) {\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[node.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + node.type, node);\n\t    }\n\n\t    this.sourceNode.unshift(node);\n\t    var ret = this[node.type](node);\n\t    this.sourceNode.shift();\n\t    return ret;\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.options.blockParams.unshift(program.blockParams);\n\n\t    var body = program.body,\n\t        bodyLength = body.length;\n\t    for (var i = 0; i < bodyLength; i++) {\n\t      this.accept(body[i]);\n\t    }\n\n\t    this.options.blockParams.shift();\n\n\t    this.isSimple = bodyLength === 1;\n\t    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n\t    return this;\n\t  },\n\n\t  BlockStatement: function BlockStatement(block) {\n\t    transformLiteralToPath(block);\n\n\t    var program = block.program,\n\t        inverse = block.inverse;\n\n\t    program = program && this.compileProgram(program);\n\t    inverse = inverse && this.compileProgram(inverse);\n\n\t    var type = this.classifySexpr(block);\n\n\t    if (type === 'helper') {\n\t      this.helperSexpr(block, program, inverse);\n\t    } else if (type === 'simple') {\n\t      this.simpleSexpr(block);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('blockValue', block.path.original);\n\t    } else {\n\t      this.ambiguousSexpr(block, program, inverse);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('ambiguousBlockValue');\n\t    }\n\n\t    this.opcode('append');\n\t  },\n\n\t  DecoratorBlock: function DecoratorBlock(decorator) {\n\t    var program = decorator.program && this.compileProgram(decorator.program);\n\t    var params = this.setupFullMustacheParams(decorator, program, undefined),\n\t        path = decorator.path;\n\n\t    this.useDecorators = true;\n\t    this.opcode('registerDecorator', params.length, path.original);\n\t  },\n\n\t  PartialStatement: function PartialStatement(partial) {\n\t    this.usePartial = true;\n\n\t    var program = partial.program;\n\t    if (program) {\n\t      program = this.compileProgram(partial.program);\n\t    }\n\n\t    var params = partial.params;\n\t    if (params.length > 1) {\n\t      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n\t    } else if (!params.length) {\n\t      if (this.options.explicitPartialContext) {\n\t        this.opcode('pushLiteral', 'undefined');\n\t      } else {\n\t        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n\t      }\n\t    }\n\n\t    var partialName = partial.name.original,\n\t        isDynamic = partial.name.type === 'SubExpression';\n\t    if (isDynamic) {\n\t      this.accept(partial.name);\n\t    }\n\n\t    this.setupFullMustacheParams(partial, program, undefined, true);\n\n\t    var indent = partial.indent || '';\n\t    if (this.options.preventIndent && indent) {\n\t      this.opcode('appendContent', indent);\n\t      indent = '';\n\t    }\n\n\t    this.opcode('invokePartial', isDynamic, partialName, indent);\n\t    this.opcode('append');\n\t  },\n\t  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n\t    this.PartialStatement(partialBlock);\n\t  },\n\n\t  MustacheStatement: function MustacheStatement(mustache) {\n\t    this.SubExpression(mustache);\n\n\t    if (mustache.escaped && !this.options.noEscape) {\n\t      this.opcode('appendEscaped');\n\t    } else {\n\t      this.opcode('append');\n\t    }\n\t  },\n\t  Decorator: function Decorator(decorator) {\n\t    this.DecoratorBlock(decorator);\n\t  },\n\n\t  ContentStatement: function ContentStatement(content) {\n\t    if (content.value) {\n\t      this.opcode('appendContent', content.value);\n\t    }\n\t  },\n\n\t  CommentStatement: function CommentStatement() {},\n\n\t  SubExpression: function SubExpression(sexpr) {\n\t    transformLiteralToPath(sexpr);\n\t    var type = this.classifySexpr(sexpr);\n\n\t    if (type === 'simple') {\n\t      this.simpleSexpr(sexpr);\n\t    } else if (type === 'helper') {\n\t      this.helperSexpr(sexpr);\n\t    } else {\n\t      this.ambiguousSexpr(sexpr);\n\t    }\n\t  },\n\t  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n\t    var path = sexpr.path,\n\t        name = path.parts[0],\n\t        isBlock = program != null || inverse != null;\n\n\t    this.opcode('getContext', path.depth);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    path.strict = true;\n\t    this.accept(path);\n\n\t    this.opcode('invokeAmbiguous', name, isBlock);\n\t  },\n\n\t  simpleSexpr: function simpleSexpr(sexpr) {\n\t    var path = sexpr.path;\n\t    path.strict = true;\n\t    this.accept(path);\n\t    this.opcode('resolvePossibleLambda');\n\t  },\n\n\t  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n\t    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n\t        path = sexpr.path,\n\t        name = path.parts[0];\n\n\t    if (this.options.knownHelpers[name]) {\n\t      this.opcode('invokeKnownHelper', params.length, name);\n\t    } else if (this.options.knownHelpersOnly) {\n\t      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n\t    } else {\n\t      path.strict = true;\n\t      path.falsy = true;\n\n\t      this.accept(path);\n\t      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n\t    }\n\t  },\n\n\t  PathExpression: function PathExpression(path) {\n\t    this.addDepth(path.depth);\n\t    this.opcode('getContext', path.depth);\n\n\t    var name = path.parts[0],\n\t        scoped = _ast2['default'].helpers.scopedId(path),\n\t        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n\t    if (blockParamId) {\n\t      this.opcode('lookupBlockParam', blockParamId, path.parts);\n\t    } else if (!name) {\n\t      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n\t      this.opcode('pushContext');\n\t    } else if (path.data) {\n\t      this.options.data = true;\n\t      this.opcode('lookupData', path.depth, path.parts, path.strict);\n\t    } else {\n\t      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n\t    }\n\t  },\n\n\t  StringLiteral: function StringLiteral(string) {\n\t    this.opcode('pushString', string.value);\n\t  },\n\n\t  NumberLiteral: function NumberLiteral(number) {\n\t    this.opcode('pushLiteral', number.value);\n\t  },\n\n\t  BooleanLiteral: function BooleanLiteral(bool) {\n\t    this.opcode('pushLiteral', bool.value);\n\t  },\n\n\t  UndefinedLiteral: function UndefinedLiteral() {\n\t    this.opcode('pushLiteral', 'undefined');\n\t  },\n\n\t  NullLiteral: function NullLiteral() {\n\t    this.opcode('pushLiteral', 'null');\n\t  },\n\n\t  Hash: function Hash(hash) {\n\t    var pairs = hash.pairs,\n\t        i = 0,\n\t        l = pairs.length;\n\n\t    this.opcode('pushHash');\n\n\t    for (; i < l; i++) {\n\t      this.pushParam(pairs[i].value);\n\t    }\n\t    while (i--) {\n\t      this.opcode('assignToHash', pairs[i].key);\n\t    }\n\t    this.opcode('popHash');\n\t  },\n\n\t  // HELPERS\n\t  opcode: function opcode(name) {\n\t    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });\n\t  },\n\n\t  addDepth: function addDepth(depth) {\n\t    if (!depth) {\n\t      return;\n\t    }\n\n\t    this.useDepths = true;\n\t  },\n\n\t  classifySexpr: function classifySexpr(sexpr) {\n\t    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n\t    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n\t    // a mustache is an eligible helper if:\n\t    // * its id is simple (a single part, not `this` or `..`)\n\t    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n\t    // if a mustache is an eligible helper but not a definite\n\t    // helper, it is ambiguous, and will be resolved in a later\n\t    // pass or at runtime.\n\t    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n\t    // if ambiguous, we can possibly resolve the ambiguity now\n\t    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n\t    if (isEligible && !isHelper) {\n\t      var _name2 = sexpr.path.parts[0],\n\t          options = this.options;\n\n\t      if (options.knownHelpers[_name2]) {\n\t        isHelper = true;\n\t      } else if (options.knownHelpersOnly) {\n\t        isEligible = false;\n\t      }\n\t    }\n\n\t    if (isHelper) {\n\t      return 'helper';\n\t    } else if (isEligible) {\n\t      return 'ambiguous';\n\t    } else {\n\t      return 'simple';\n\t    }\n\t  },\n\n\t  pushParams: function pushParams(params) {\n\t    for (var i = 0, l = params.length; i < l; i++) {\n\t      this.pushParam(params[i]);\n\t    }\n\t  },\n\n\t  pushParam: function pushParam(val) {\n\t    var value = val.value != null ? val.value : val.original || '';\n\n\t    if (this.stringParams) {\n\t      if (value.replace) {\n\t        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n\t      }\n\n\t      if (val.depth) {\n\t        this.addDepth(val.depth);\n\t      }\n\t      this.opcode('getContext', val.depth || 0);\n\t      this.opcode('pushStringParam', value, val.type);\n\n\t      if (val.type === 'SubExpression') {\n\t        // SubExpressions get evaluated and passed in\n\t        // in string params mode.\n\t        this.accept(val);\n\t      }\n\t    } else {\n\t      if (this.trackIds) {\n\t        var blockParamIndex = undefined;\n\t        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n\t          blockParamIndex = this.blockParamIndex(val.parts[0]);\n\t        }\n\t        if (blockParamIndex) {\n\t          var blockParamChild = val.parts.slice(1).join('.');\n\t          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n\t        } else {\n\t          value = val.original || value;\n\t          if (value.replace) {\n\t            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n\t          }\n\n\t          this.opcode('pushId', val.type, value);\n\t        }\n\t      }\n\t      this.accept(val);\n\t    }\n\t  },\n\n\t  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n\t    var params = sexpr.params;\n\t    this.pushParams(params);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    if (sexpr.hash) {\n\t      this.accept(sexpr.hash);\n\t    } else {\n\t      this.opcode('emptyHash', omitEmpty);\n\t    }\n\n\t    return params;\n\t  },\n\n\t  blockParamIndex: function blockParamIndex(name) {\n\t    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n\t      var blockParams = this.options.blockParams[depth],\n\t          param = blockParams && _utils.indexOf(blockParams, name);\n\t      if (blockParams && param >= 0) {\n\t        return [depth, param];\n\t      }\n\t    }\n\t  }\n\t};\n\n\tfunction precompile(input, options, env) {\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n\t  }\n\n\t  options = options || {};\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var ast = env.parse(input, options),\n\t      environment = new env.Compiler().compile(ast, options);\n\t  return new env.JavaScriptCompiler().compile(environment, options);\n\t}\n\n\tfunction compile(input, options, env) {\n\t  if (options === undefined) options = {};\n\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n\t  }\n\n\t  options = _utils.extend({}, options);\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var compiled = undefined;\n\n\t  function compileInput() {\n\t    var ast = env.parse(input, options),\n\t        environment = new env.Compiler().compile(ast, options),\n\t        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n\t    return env.template(templateSpec);\n\t  }\n\n\t  // Template is only compiled on first use and cached after that point.\n\t  function ret(context, execOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled.call(this, context, execOptions);\n\t  }\n\t  ret._setup = function (setupOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._setup(setupOptions);\n\t  };\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._child(i, data, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction argEquals(a, b) {\n\t  if (a === b) {\n\t    return true;\n\t  }\n\n\t  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n\t    for (var i = 0; i < a.length; i++) {\n\t      if (!argEquals(a[i], b[i])) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t}\n\n\tfunction transformLiteralToPath(sexpr) {\n\t  if (!sexpr.path.parts) {\n\t    var literal = sexpr.path;\n\t    // Casting to string here to make false and 0 literal values play nicely with the rest\n\t    // of the system.\n\t    sexpr.path = {\n\t      type: 'PathExpression',\n\t      data: false,\n\t      depth: 0,\n\t      parts: [literal.original + ''],\n\t      original: literal.original + '',\n\t      loc: literal.loc\n\t    };\n\t  }\n\t}\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _base = __webpack_require__(4);\n\n\tvar _exception = __webpack_require__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar _codeGen = __webpack_require__(43);\n\n\tvar _codeGen2 = _interopRequireDefault(_codeGen);\n\n\tfunction Literal(value) {\n\t  this.value = value;\n\t}\n\n\tfunction JavaScriptCompiler() {}\n\n\tJavaScriptCompiler.prototype = {\n\t  // PUBLIC API: You can override these methods in a subclass to provide\n\t  // alternative compiled forms for name lookup and buffering semantics\n\t  nameLookup: function nameLookup(parent, name /* , type*/) {\n\t    if (name === 'constructor') {\n\t      return ['(', parent, '.propertyIsEnumerable(\\'constructor\\') ? ', parent, '.constructor : undefined', ')'];\n\t    }\n\t    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {\n\t      return [parent, '.', name];\n\t    } else {\n\t      return [parent, '[', JSON.stringify(name), ']'];\n\t    }\n\t  },\n\t  depthedLookup: function depthedLookup(name) {\n\t    return [this.aliasable('container.lookup'), '(depths, \"', name, '\")'];\n\t  },\n\n\t  compilerInfo: function compilerInfo() {\n\t    var revision = _base.COMPILER_REVISION,\n\t        versions = _base.REVISION_CHANGES[revision];\n\t    return [revision, versions];\n\t  },\n\n\t  appendToBuffer: function appendToBuffer(source, location, explicit) {\n\t    // Force a source as this simplifies the merge logic.\n\t    if (!_utils.isArray(source)) {\n\t      source = [source];\n\t    }\n\t    source = this.source.wrap(source, location);\n\n\t    if (this.environment.isSimple) {\n\t      return ['return ', source, ';'];\n\t    } else if (explicit) {\n\t      // This is a case where the buffer operation occurs as a child of another\n\t      // construct, generally braces. We have to explicitly output these buffer\n\t      // operations to ensure that the emitted code goes in the correct location.\n\t      return ['buffer += ', source, ';'];\n\t    } else {\n\t      source.appendToBuffer = true;\n\t      return source;\n\t    }\n\t  },\n\n\t  initializeBuffer: function initializeBuffer() {\n\t    return this.quotedString('');\n\t  },\n\t  // END PUBLIC API\n\n\t  compile: function compile(environment, options, context, asObject) {\n\t    this.environment = environment;\n\t    this.options = options;\n\t    this.stringParams = this.options.stringParams;\n\t    this.trackIds = this.options.trackIds;\n\t    this.precompile = !asObject;\n\n\t    this.name = this.environment.name;\n\t    this.isChild = !!context;\n\t    this.context = context || {\n\t      decorators: [],\n\t      programs: [],\n\t      environments: []\n\t    };\n\n\t    this.preamble();\n\n\t    this.stackSlot = 0;\n\t    this.stackVars = [];\n\t    this.aliases = {};\n\t    this.registers = { list: [] };\n\t    this.hashes = [];\n\t    this.compileStack = [];\n\t    this.inlineStack = [];\n\t    this.blockParams = [];\n\n\t    this.compileChildren(environment, options);\n\n\t    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n\t    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n\t    var opcodes = environment.opcodes,\n\t        opcode = undefined,\n\t        firstLoc = undefined,\n\t        i = undefined,\n\t        l = undefined;\n\n\t    for (i = 0, l = opcodes.length; i < l; i++) {\n\t      opcode = opcodes[i];\n\n\t      this.source.currentLocation = opcode.loc;\n\t      firstLoc = firstLoc || opcode.loc;\n\t      this[opcode.opcode].apply(this, opcode.args);\n\t    }\n\n\t    // Flush any trailing content that might be pending.\n\t    this.source.currentLocation = firstLoc;\n\t    this.pushSource('');\n\n\t    /* istanbul ignore next */\n\t    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n\t      throw new _exception2['default']('Compile completed with content left on stack');\n\t    }\n\n\t    if (!this.decorators.isEmpty()) {\n\t      this.useDecorators = true;\n\n\t      this.decorators.prepend('var decorators = container.decorators;\\n');\n\t      this.decorators.push('return fn;');\n\n\t      if (asObject) {\n\t        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n\t      } else {\n\t        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n\t        this.decorators.push('}\\n');\n\t        this.decorators = this.decorators.merge();\n\t      }\n\t    } else {\n\t      this.decorators = undefined;\n\t    }\n\n\t    var fn = this.createFunctionContext(asObject);\n\t    if (!this.isChild) {\n\t      var ret = {\n\t        compiler: this.compilerInfo(),\n\t        main: fn\n\t      };\n\n\t      if (this.decorators) {\n\t        ret.main_d = this.decorators; // eslint-disable-line camelcase\n\t        ret.useDecorators = true;\n\t      }\n\n\t      var _context = this.context;\n\t      var programs = _context.programs;\n\t      var decorators = _context.decorators;\n\n\t      for (i = 0, l = programs.length; i < l; i++) {\n\t        if (programs[i]) {\n\t          ret[i] = programs[i];\n\t          if (decorators[i]) {\n\t            ret[i + '_d'] = decorators[i];\n\t            ret.useDecorators = true;\n\t          }\n\t        }\n\t      }\n\n\t      if (this.environment.usePartial) {\n\t        ret.usePartial = true;\n\t      }\n\t      if (this.options.data) {\n\t        ret.useData = true;\n\t      }\n\t      if (this.useDepths) {\n\t        ret.useDepths = true;\n\t      }\n\t      if (this.useBlockParams) {\n\t        ret.useBlockParams = true;\n\t      }\n\t      if (this.options.compat) {\n\t        ret.compat = true;\n\t      }\n\n\t      if (!asObject) {\n\t        ret.compiler = JSON.stringify(ret.compiler);\n\n\t        this.source.currentLocation = { start: { line: 1, column: 0 } };\n\t        ret = this.objectLiteral(ret);\n\n\t        if (options.srcName) {\n\t          ret = ret.toStringWithSourceMap({ file: options.destName });\n\t          ret.map = ret.map && ret.map.toString();\n\t        } else {\n\t          ret = ret.toString();\n\t        }\n\t      } else {\n\t        ret.compilerOptions = this.options;\n\t      }\n\n\t      return ret;\n\t    } else {\n\t      return fn;\n\t    }\n\t  },\n\n\t  preamble: function preamble() {\n\t    // track the last context pushed into place to allow skipping the\n\t    // getContext opcode when it would be a noop\n\t    this.lastContext = 0;\n\t    this.source = new _codeGen2['default'](this.options.srcName);\n\t    this.decorators = new _codeGen2['default'](this.options.srcName);\n\t  },\n\n\t  createFunctionContext: function createFunctionContext(asObject) {\n\t    var varDeclarations = '';\n\n\t    var locals = this.stackVars.concat(this.registers.list);\n\t    if (locals.length > 0) {\n\t      varDeclarations += ', ' + locals.join(', ');\n\t    }\n\n\t    // Generate minimizer alias mappings\n\t    //\n\t    // When using true SourceNodes, this will update all references to the given alias\n\t    // as the source nodes are reused in situ. For the non-source node compilation mode,\n\t    // aliases will not be used, but this case is already being run on the client and\n\t    // we aren't concern about minimizing the template size.\n\t    var aliasCount = 0;\n\t    for (var alias in this.aliases) {\n\t      // eslint-disable-line guard-for-in\n\t      var node = this.aliases[alias];\n\n\t      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {\n\t        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n\t        node.children[0] = 'alias' + aliasCount;\n\t      }\n\t    }\n\n\t    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      params.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      params.push('depths');\n\t    }\n\n\t    // Perform a second pass over the output to merge content when possible\n\t    var source = this.mergeSource(varDeclarations);\n\n\t    if (asObject) {\n\t      params.push(source);\n\n\t      return Function.apply(this, params);\n\t    } else {\n\t      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n\t    }\n\t  },\n\t  mergeSource: function mergeSource(varDeclarations) {\n\t    var isSimple = this.environment.isSimple,\n\t        appendOnly = !this.forceBuffer,\n\t        appendFirst = undefined,\n\t        sourceSeen = undefined,\n\t        bufferStart = undefined,\n\t        bufferEnd = undefined;\n\t    this.source.each(function (line) {\n\t      if (line.appendToBuffer) {\n\t        if (bufferStart) {\n\t          line.prepend('  + ');\n\t        } else {\n\t          bufferStart = line;\n\t        }\n\t        bufferEnd = line;\n\t      } else {\n\t        if (bufferStart) {\n\t          if (!sourceSeen) {\n\t            appendFirst = true;\n\t          } else {\n\t            bufferStart.prepend('buffer += ');\n\t          }\n\t          bufferEnd.add(';');\n\t          bufferStart = bufferEnd = undefined;\n\t        }\n\n\t        sourceSeen = true;\n\t        if (!isSimple) {\n\t          appendOnly = false;\n\t        }\n\t      }\n\t    });\n\n\t    if (appendOnly) {\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return ');\n\t        bufferEnd.add(';');\n\t      } else if (!sourceSeen) {\n\t        this.source.push('return \"\";');\n\t      }\n\t    } else {\n\t      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return buffer + ');\n\t        bufferEnd.add(';');\n\t      } else {\n\t        this.source.push('return buffer;');\n\t      }\n\t    }\n\n\t    if (varDeclarations) {\n\t      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n\t    }\n\n\t    return this.source.merge();\n\t  },\n\n\t  // [blockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // On stack, after: return value of blockHelperMissing\n\t  //\n\t  // The purpose of this opcode is to take a block of the form\n\t  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n\t  // replace it on the stack with the result of properly\n\t  // invoking blockHelperMissing.\n\t  blockValue: function blockValue(name) {\n\t    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs(name, 0, params);\n\n\t    var blockName = this.popStack();\n\t    params.splice(1, 0, blockName);\n\n\t    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n\t  },\n\n\t  // [ambiguousBlockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // Compiler value, before: lastHelper=value of last found helper, if any\n\t  // On stack, after, if no lastHelper: same as [blockValue]\n\t  // On stack, after, if lastHelper: value\n\t  ambiguousBlockValue: function ambiguousBlockValue() {\n\t    // We're being a bit cheeky and reusing the options value from the prior exec\n\t    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs('', 0, params, true);\n\n\t    this.flushInline();\n\n\t    var current = this.topStack();\n\t    params.splice(1, 0, current);\n\n\t    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n\t  },\n\n\t  // [appendContent]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  //\n\t  // Appends the string value of `content` to the current buffer\n\t  appendContent: function appendContent(content) {\n\t    if (this.pendingContent) {\n\t      content = this.pendingContent + content;\n\t    } else {\n\t      this.pendingLocation = this.source.currentLocation;\n\t    }\n\n\t    this.pendingContent = content;\n\t  },\n\n\t  // [append]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Coerces `value` to a String and appends it to the current buffer.\n\t  //\n\t  // If `value` is truthy, or 0, it is coerced into a string and appended\n\t  // Otherwise, the empty string is appended\n\t  append: function append() {\n\t    if (this.isInline()) {\n\t      this.replaceStack(function (current) {\n\t        return [' != null ? ', current, ' : \"\"'];\n\t      });\n\n\t      this.pushSource(this.appendToBuffer(this.popStack()));\n\t    } else {\n\t      var local = this.popStack();\n\t      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n\t      if (this.environment.isSimple) {\n\t        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n\t      }\n\t    }\n\t  },\n\n\t  // [appendEscaped]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Escape `value` and append it to the buffer\n\t  appendEscaped: function appendEscaped() {\n\t    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n\t  },\n\n\t  // [getContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  // Compiler value, after: lastContext=depth\n\t  //\n\t  // Set the value of the `lastContext` compiler value to the depth\n\t  getContext: function getContext(depth) {\n\t    this.lastContext = depth;\n\t  },\n\n\t  // [pushContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext, ...\n\t  //\n\t  // Pushes the value of the current context onto the stack.\n\t  pushContext: function pushContext() {\n\t    this.pushStackLiteral(this.contextName(this.lastContext));\n\t  },\n\n\t  // [lookupOnContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext[name], ...\n\t  //\n\t  // Looks up the value of `name` on the current context and pushes\n\t  // it onto the stack.\n\t  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n\t    var i = 0;\n\n\t    if (!scoped && this.options.compat && !this.lastContext) {\n\t      // The depthed query is expected to handle the undefined logic for the root level that\n\t      // is implemented below, so we evaluate that directly in compat mode\n\t      this.push(this.depthedLookup(parts[i++]));\n\t    } else {\n\t      this.pushContext();\n\t    }\n\n\t    this.resolvePath('context', parts, i, falsy, strict);\n\t  },\n\n\t  // [lookupBlockParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: blockParam[name], ...\n\t  //\n\t  // Looks up the value of `parts` on the given block param and pushes\n\t  // it onto the stack.\n\t  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n\t    this.useBlockParams = true;\n\n\t    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n\t    this.resolvePath('context', parts, 1);\n\t  },\n\n\t  // [lookupData]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: data, ...\n\t  //\n\t  // Push the data lookup operator\n\t  lookupData: function lookupData(depth, parts, strict) {\n\t    if (!depth) {\n\t      this.pushStackLiteral('data');\n\t    } else {\n\t      this.pushStackLiteral('container.data(data, ' + depth + ')');\n\t    }\n\n\t    this.resolvePath('data', parts, 0, true, strict);\n\t  },\n\n\t  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n\t    // istanbul ignore next\n\n\t    var _this = this;\n\n\t    if (this.options.strict || this.options.assumeObjects) {\n\t      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n\t      return;\n\t    }\n\n\t    var len = parts.length;\n\t    for (; i < len; i++) {\n\t      /* eslint-disable no-loop-func */\n\t      this.replaceStack(function (current) {\n\t        var lookup = _this.nameLookup(current, parts[i], type);\n\t        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n\t        // needs to have the special handling for these values.\n\t        if (!falsy) {\n\t          return [' != null ? ', lookup, ' : ', current];\n\t        } else {\n\t          // Otherwise we can use generic falsy handling\n\t          return [' && ', lookup];\n\t        }\n\t      });\n\t      /* eslint-enable no-loop-func */\n\t    }\n\t  },\n\n\t  // [resolvePossibleLambda]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: resolved value, ...\n\t  //\n\t  // If the `value` is a lambda, replace it on the stack by\n\t  // the return value of the lambda\n\t  resolvePossibleLambda: function resolvePossibleLambda() {\n\t    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n\t  },\n\n\t  // [pushStringParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: string, currentContext, ...\n\t  //\n\t  // This opcode is designed for use in string mode, which\n\t  // provides the string value of a parameter along with its\n\t  // depth rather than resolving it immediately.\n\t  pushStringParam: function pushStringParam(string, type) {\n\t    this.pushContext();\n\t    this.pushString(type);\n\n\t    // If it's a subexpression, the string result\n\t    // will be pushed after this opcode.\n\t    if (type !== 'SubExpression') {\n\t      if (typeof string === 'string') {\n\t        this.pushString(string);\n\t      } else {\n\t        this.pushStackLiteral(string);\n\t      }\n\t    }\n\t  },\n\n\t  emptyHash: function emptyHash(omitEmpty) {\n\t    if (this.trackIds) {\n\t      this.push('{}'); // hashIds\n\t    }\n\t    if (this.stringParams) {\n\t      this.push('{}'); // hashContexts\n\t      this.push('{}'); // hashTypes\n\t    }\n\t    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n\t  },\n\t  pushHash: function pushHash() {\n\t    if (this.hash) {\n\t      this.hashes.push(this.hash);\n\t    }\n\t    this.hash = { values: [], types: [], contexts: [], ids: [] };\n\t  },\n\t  popHash: function popHash() {\n\t    var hash = this.hash;\n\t    this.hash = this.hashes.pop();\n\n\t    if (this.trackIds) {\n\t      this.push(this.objectLiteral(hash.ids));\n\t    }\n\t    if (this.stringParams) {\n\t      this.push(this.objectLiteral(hash.contexts));\n\t      this.push(this.objectLiteral(hash.types));\n\t    }\n\n\t    this.push(this.objectLiteral(hash.values));\n\t  },\n\n\t  // [pushString]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: quotedString(string), ...\n\t  //\n\t  // Push a quoted version of `string` onto the stack\n\t  pushString: function pushString(string) {\n\t    this.pushStackLiteral(this.quotedString(string));\n\t  },\n\n\t  // [pushLiteral]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: value, ...\n\t  //\n\t  // Pushes a value onto the stack. This operation prevents\n\t  // the compiler from creating a temporary variable to hold\n\t  // it.\n\t  pushLiteral: function pushLiteral(value) {\n\t    this.pushStackLiteral(value);\n\t  },\n\n\t  // [pushProgram]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: program(guid), ...\n\t  //\n\t  // Push a program expression onto the stack. This takes\n\t  // a compile-time guid and converts it into a runtime-accessible\n\t  // expression.\n\t  pushProgram: function pushProgram(guid) {\n\t    if (guid != null) {\n\t      this.pushStackLiteral(this.programExpression(guid));\n\t    } else {\n\t      this.pushStackLiteral(null);\n\t    }\n\t  },\n\n\t  // [registerDecorator]\n\t  //\n\t  // On stack, before: hash, program, params..., ...\n\t  // On stack, after: ...\n\t  //\n\t  // Pops off the decorator's parameters, invokes the decorator,\n\t  // and inserts the decorator into the decorators list.\n\t  registerDecorator: function registerDecorator(paramSize, name) {\n\t    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n\t        options = this.setupHelperArgs(name, paramSize);\n\n\t    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n\t  },\n\n\t  // [invokeHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // Pops off the helper's parameters, invokes the helper,\n\t  // and pushes the helper's return value onto the stack.\n\t  //\n\t  // If the helper is not found, `helperMissing` is called.\n\t  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n\t    var nonHelper = this.popStack(),\n\t        helper = this.setupHelper(paramSize, name),\n\t        simple = isSimple ? [helper.name, ' || '] : '';\n\n\t    var lookup = ['('].concat(simple, nonHelper);\n\t    if (!this.options.strict) {\n\t      lookup.push(' || ', this.aliasable('helpers.helperMissing'));\n\t    }\n\t    lookup.push(')');\n\n\t    this.push(this.source.functionCall(lookup, 'call', helper.callParams));\n\t  },\n\n\t  // [invokeKnownHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // This operation is used when the helper is known to exist,\n\t  // so a `helperMissing` fallback is not required.\n\t  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n\t    var helper = this.setupHelper(paramSize, name);\n\t    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n\t  },\n\n\t  // [invokeAmbiguous]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of disambiguation\n\t  //\n\t  // This operation is used when an expression like `{{foo}}`\n\t  // is provided, but we don't know at compile-time whether it\n\t  // is a helper or a path.\n\t  //\n\t  // This operation emits more code than the other options,\n\t  // and can be avoided by passing the `knownHelpers` and\n\t  // `knownHelpersOnly` flags at compile-time.\n\t  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n\t    this.useRegister('helper');\n\n\t    var nonHelper = this.popStack();\n\n\t    this.emptyHash();\n\t    var helper = this.setupHelper(0, name, helperCall);\n\n\t    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n\t    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n\t    if (!this.options.strict) {\n\t      lookup[0] = '(helper = ';\n\t      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));\n\t    }\n\n\t    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n\t  },\n\n\t  // [invokePartial]\n\t  //\n\t  // On stack, before: context, ...\n\t  // On stack after: result of partial invocation\n\t  //\n\t  // This operation pops off a context, invokes a partial with that context,\n\t  // and pushes the result of the invocation back.\n\t  invokePartial: function invokePartial(isDynamic, name, indent) {\n\t    var params = [],\n\t        options = this.setupParams(name, 1, params);\n\n\t    if (isDynamic) {\n\t      name = this.popStack();\n\t      delete options.name;\n\t    }\n\n\t    if (indent) {\n\t      options.indent = JSON.stringify(indent);\n\t    }\n\t    options.helpers = 'helpers';\n\t    options.partials = 'partials';\n\t    options.decorators = 'container.decorators';\n\n\t    if (!isDynamic) {\n\t      params.unshift(this.nameLookup('partials', name, 'partial'));\n\t    } else {\n\t      params.unshift(name);\n\t    }\n\n\t    if (this.options.compat) {\n\t      options.depths = 'depths';\n\t    }\n\t    options = this.objectLiteral(options);\n\t    params.push(options);\n\n\t    this.push(this.source.functionCall('container.invokePartial', '', params));\n\t  },\n\n\t  // [assignToHash]\n\t  //\n\t  // On stack, before: value, ..., hash, ...\n\t  // On stack, after: ..., hash, ...\n\t  //\n\t  // Pops a value off the stack and assigns it to the current hash\n\t  assignToHash: function assignToHash(key) {\n\t    var value = this.popStack(),\n\t        context = undefined,\n\t        type = undefined,\n\t        id = undefined;\n\n\t    if (this.trackIds) {\n\t      id = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      type = this.popStack();\n\t      context = this.popStack();\n\t    }\n\n\t    var hash = this.hash;\n\t    if (context) {\n\t      hash.contexts[key] = context;\n\t    }\n\t    if (type) {\n\t      hash.types[key] = type;\n\t    }\n\t    if (id) {\n\t      hash.ids[key] = id;\n\t    }\n\t    hash.values[key] = value;\n\t  },\n\n\t  pushId: function pushId(type, name, child) {\n\t    if (type === 'BlockParam') {\n\t      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n\t    } else if (type === 'PathExpression') {\n\t      this.pushString(name);\n\t    } else if (type === 'SubExpression') {\n\t      this.pushStackLiteral('true');\n\t    } else {\n\t      this.pushStackLiteral('null');\n\t    }\n\t  },\n\n\t  // HELPERS\n\n\t  compiler: JavaScriptCompiler,\n\n\t  compileChildren: function compileChildren(environment, options) {\n\t    var children = environment.children,\n\t        child = undefined,\n\t        compiler = undefined;\n\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      child = children[i];\n\t      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n\t      var existing = this.matchExistingProgram(child);\n\n\t      if (existing == null) {\n\t        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n\t        var index = this.context.programs.length;\n\t        child.index = index;\n\t        child.name = 'program' + index;\n\t        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n\t        this.context.decorators[index] = compiler.decorators;\n\t        this.context.environments[index] = child;\n\n\t        this.useDepths = this.useDepths || compiler.useDepths;\n\t        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n\t        child.useDepths = this.useDepths;\n\t        child.useBlockParams = this.useBlockParams;\n\t      } else {\n\t        child.index = existing.index;\n\t        child.name = 'program' + existing.index;\n\n\t        this.useDepths = this.useDepths || existing.useDepths;\n\t        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n\t      }\n\t    }\n\t  },\n\t  matchExistingProgram: function matchExistingProgram(child) {\n\t    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n\t      var environment = this.context.environments[i];\n\t      if (environment && environment.equals(child)) {\n\t        return environment;\n\t      }\n\t    }\n\t  },\n\n\t  programExpression: function programExpression(guid) {\n\t    var child = this.environment.children[guid],\n\t        programParams = [child.index, 'data', child.blockParams];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      programParams.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      programParams.push('depths');\n\t    }\n\n\t    return 'container.program(' + programParams.join(', ') + ')';\n\t  },\n\n\t  useRegister: function useRegister(name) {\n\t    if (!this.registers[name]) {\n\t      this.registers[name] = true;\n\t      this.registers.list.push(name);\n\t    }\n\t  },\n\n\t  push: function push(expr) {\n\t    if (!(expr instanceof Literal)) {\n\t      expr = this.source.wrap(expr);\n\t    }\n\n\t    this.inlineStack.push(expr);\n\t    return expr;\n\t  },\n\n\t  pushStackLiteral: function pushStackLiteral(item) {\n\t    this.push(new Literal(item));\n\t  },\n\n\t  pushSource: function pushSource(source) {\n\t    if (this.pendingContent) {\n\t      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n\t      this.pendingContent = undefined;\n\t    }\n\n\t    if (source) {\n\t      this.source.push(source);\n\t    }\n\t  },\n\n\t  replaceStack: function replaceStack(callback) {\n\t    var prefix = ['('],\n\t        stack = undefined,\n\t        createdStack = undefined,\n\t        usedLiteral = undefined;\n\n\t    /* istanbul ignore next */\n\t    if (!this.isInline()) {\n\t      throw new _exception2['default']('replaceStack on non-inline');\n\t    }\n\n\t    // We want to merge the inline statement into the replacement statement via ','\n\t    var top = this.popStack(true);\n\n\t    if (top instanceof Literal) {\n\t      // Literals do not need to be inlined\n\t      stack = [top.value];\n\t      prefix = ['(', stack];\n\t      usedLiteral = true;\n\t    } else {\n\t      // Get or create the current stack name for use by the inline\n\t      createdStack = true;\n\t      var _name = this.incrStack();\n\n\t      prefix = ['((', this.push(_name), ' = ', top, ')'];\n\t      stack = this.topStack();\n\t    }\n\n\t    var item = callback.call(this, stack);\n\n\t    if (!usedLiteral) {\n\t      this.popStack();\n\t    }\n\t    if (createdStack) {\n\t      this.stackSlot--;\n\t    }\n\t    this.push(prefix.concat(item, ')'));\n\t  },\n\n\t  incrStack: function incrStack() {\n\t    this.stackSlot++;\n\t    if (this.stackSlot > this.stackVars.length) {\n\t      this.stackVars.push('stack' + this.stackSlot);\n\t    }\n\t    return this.topStackName();\n\t  },\n\t  topStackName: function topStackName() {\n\t    return 'stack' + this.stackSlot;\n\t  },\n\t  flushInline: function flushInline() {\n\t    var inlineStack = this.inlineStack;\n\t    this.inlineStack = [];\n\t    for (var i = 0, len = inlineStack.length; i < len; i++) {\n\t      var entry = inlineStack[i];\n\t      /* istanbul ignore if */\n\t      if (entry instanceof Literal) {\n\t        this.compileStack.push(entry);\n\t      } else {\n\t        var stack = this.incrStack();\n\t        this.pushSource([stack, ' = ', entry, ';']);\n\t        this.compileStack.push(stack);\n\t      }\n\t    }\n\t  },\n\t  isInline: function isInline() {\n\t    return this.inlineStack.length;\n\t  },\n\n\t  popStack: function popStack(wrapped) {\n\t    var inline = this.isInline(),\n\t        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n\t    if (!wrapped && item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      if (!inline) {\n\t        /* istanbul ignore next */\n\t        if (!this.stackSlot) {\n\t          throw new _exception2['default']('Invalid stack pop');\n\t        }\n\t        this.stackSlot--;\n\t      }\n\t      return item;\n\t    }\n\t  },\n\n\t  topStack: function topStack() {\n\t    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n\t        item = stack[stack.length - 1];\n\n\t    /* istanbul ignore if */\n\t    if (item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      return item;\n\t    }\n\t  },\n\n\t  contextName: function contextName(context) {\n\t    if (this.useDepths && context) {\n\t      return 'depths[' + context + ']';\n\t    } else {\n\t      return 'depth' + context;\n\t    }\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return this.source.quotedString(str);\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    return this.source.objectLiteral(obj);\n\t  },\n\n\t  aliasable: function aliasable(name) {\n\t    var ret = this.aliases[name];\n\t    if (ret) {\n\t      ret.referenceCount++;\n\t      return ret;\n\t    }\n\n\t    ret = this.aliases[name] = this.source.wrap(name);\n\t    ret.aliasable = true;\n\t    ret.referenceCount = 1;\n\n\t    return ret;\n\t  },\n\n\t  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n\t    var params = [],\n\t        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n\t    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n\t        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n\t    return {\n\t      params: params,\n\t      paramsInit: paramsInit,\n\t      name: foundHelper,\n\t      callParams: [callContext].concat(params)\n\t    };\n\t  },\n\n\t  setupParams: function setupParams(helper, paramSize, params) {\n\t    var options = {},\n\t        contexts = [],\n\t        types = [],\n\t        ids = [],\n\t        objectArgs = !params,\n\t        param = undefined;\n\n\t    if (objectArgs) {\n\t      params = [];\n\t    }\n\n\t    options.name = this.quotedString(helper);\n\t    options.hash = this.popStack();\n\n\t    if (this.trackIds) {\n\t      options.hashIds = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      options.hashTypes = this.popStack();\n\t      options.hashContexts = this.popStack();\n\t    }\n\n\t    var inverse = this.popStack(),\n\t        program = this.popStack();\n\n\t    // Avoid setting fn and inverse if neither are set. This allows\n\t    // helpers to do a check for `if (options.fn)`\n\t    if (program || inverse) {\n\t      options.fn = program || 'container.noop';\n\t      options.inverse = inverse || 'container.noop';\n\t    }\n\n\t    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n\t    // so we need to pop them off the stack in reverse order\n\t    var i = paramSize;\n\t    while (i--) {\n\t      param = this.popStack();\n\t      params[i] = param;\n\n\t      if (this.trackIds) {\n\t        ids[i] = this.popStack();\n\t      }\n\t      if (this.stringParams) {\n\t        types[i] = this.popStack();\n\t        contexts[i] = this.popStack();\n\t      }\n\t    }\n\n\t    if (objectArgs) {\n\t      options.args = this.source.generateArray(params);\n\t    }\n\n\t    if (this.trackIds) {\n\t      options.ids = this.source.generateArray(ids);\n\t    }\n\t    if (this.stringParams) {\n\t      options.types = this.source.generateArray(types);\n\t      options.contexts = this.source.generateArray(contexts);\n\t    }\n\n\t    if (this.options.data) {\n\t      options.data = 'data';\n\t    }\n\t    if (this.useBlockParams) {\n\t      options.blockParams = 'blockParams';\n\t    }\n\t    return options;\n\t  },\n\n\t  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n\t    var options = this.setupParams(helper, paramSize, params);\n\t    options = this.objectLiteral(options);\n\t    if (useRegister) {\n\t      this.useRegister('options');\n\t      params.push('options');\n\t      return ['options=', options];\n\t    } else if (params) {\n\t      params.push(options);\n\t      return '';\n\t    } else {\n\t      return options;\n\t    }\n\t  }\n\t};\n\n\t(function () {\n\t  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n\t  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n\t  for (var i = 0, l = reservedWords.length; i < l; i++) {\n\t    compilerWords[reservedWords[i]] = true;\n\t  }\n\t})();\n\n\tJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n\t  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n\t};\n\n\tfunction strictLookup(requireTerminal, compiler, parts, type) {\n\t  var stack = compiler.popStack(),\n\t      i = 0,\n\t      len = parts.length;\n\t  if (requireTerminal) {\n\t    len--;\n\t  }\n\n\t  for (; i < len; i++) {\n\t    stack = compiler.nameLookup(stack, parts[i], type);\n\t  }\n\n\t  if (requireTerminal) {\n\t    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];\n\t  } else {\n\t    return stack;\n\t  }\n\t}\n\n\texports['default'] = JavaScriptCompiler;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global define */\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __webpack_require__(5);\n\n\tvar SourceNode = undefined;\n\n\ttry {\n\t  /* istanbul ignore next */\n\t  if (false) { var SourceMap; }\n\t} catch (err) {}\n\t/* NOP */\n\n\t/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\n\tif (!SourceNode) {\n\t  SourceNode = function (line, column, srcFile, chunks) {\n\t    this.src = '';\n\t    if (chunks) {\n\t      this.add(chunks);\n\t    }\n\t  };\n\t  /* istanbul ignore next */\n\t  SourceNode.prototype = {\n\t    add: function add(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src += chunks;\n\t    },\n\t    prepend: function prepend(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src = chunks + this.src;\n\t    },\n\t    toStringWithSourceMap: function toStringWithSourceMap() {\n\t      return { code: this.toString() };\n\t    },\n\t    toString: function toString() {\n\t      return this.src;\n\t    }\n\t  };\n\t}\n\n\tfunction castChunk(chunk, codeGen, loc) {\n\t  if (_utils.isArray(chunk)) {\n\t    var ret = [];\n\n\t    for (var i = 0, len = chunk.length; i < len; i++) {\n\t      ret.push(codeGen.wrap(chunk[i], loc));\n\t    }\n\t    return ret;\n\t  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n\t    // Handle primitives that the SourceNode will throw up on\n\t    return chunk + '';\n\t  }\n\t  return chunk;\n\t}\n\n\tfunction CodeGen(srcFile) {\n\t  this.srcFile = srcFile;\n\t  this.source = [];\n\t}\n\n\tCodeGen.prototype = {\n\t  isEmpty: function isEmpty() {\n\t    return !this.source.length;\n\t  },\n\t  prepend: function prepend(source, loc) {\n\t    this.source.unshift(this.wrap(source, loc));\n\t  },\n\t  push: function push(source, loc) {\n\t    this.source.push(this.wrap(source, loc));\n\t  },\n\n\t  merge: function merge() {\n\t    var source = this.empty();\n\t    this.each(function (line) {\n\t      source.add(['  ', line, '\\n']);\n\t    });\n\t    return source;\n\t  },\n\n\t  each: function each(iter) {\n\t    for (var i = 0, len = this.source.length; i < len; i++) {\n\t      iter(this.source[i]);\n\t    }\n\t  },\n\n\t  empty: function empty() {\n\t    var loc = this.currentLocation || { start: {} };\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n\t  },\n\t  wrap: function wrap(chunk) {\n\t    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n\t    if (chunk instanceof SourceNode) {\n\t      return chunk;\n\t    }\n\n\t    chunk = castChunk(chunk, this, loc);\n\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n\t  },\n\n\t  functionCall: function functionCall(fn, type, params) {\n\t    params = this.generateList(params);\n\t    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n\t    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    var pairs = [];\n\n\t    for (var key in obj) {\n\t      if (obj.hasOwnProperty(key)) {\n\t        var value = castChunk(obj[key], this);\n\t        if (value !== 'undefined') {\n\t          pairs.push([this.quotedString(key), ':', value]);\n\t        }\n\t      }\n\t    }\n\n\t    var ret = this.generateList(pairs);\n\t    ret.prepend('{');\n\t    ret.add('}');\n\t    return ret;\n\t  },\n\n\t  generateList: function generateList(entries) {\n\t    var ret = this.empty();\n\n\t    for (var i = 0, len = entries.length; i < len; i++) {\n\t      if (i) {\n\t        ret.add(',');\n\t      }\n\n\t      ret.add(castChunk(entries[i], this));\n\t    }\n\n\t    return ret;\n\t  },\n\n\t  generateArray: function generateArray(entries) {\n\t    var ret = this.generateList(entries);\n\t    ret.prepend('[');\n\t    ret.add(']');\n\n\t    return ret;\n\t  }\n\t};\n\n\texports['default'] = CodeGen;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;\n\n//# sourceURL=webpack:///./node_modules/handlebars/dist/handlebars.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/promise/index.js":
/*!***************************************!*\
  !*** ./node_modules/promise/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./lib/core.js */ \"./node_modules/promise/lib/core.js\")\n__webpack_require__(/*! ./lib/done.js */ \"./node_modules/promise/lib/done.js\")\n__webpack_require__(/*! ./lib/es6-extensions.js */ \"./node_modules/promise/lib/es6-extensions.js\")\n__webpack_require__(/*! ./lib/node-extensions.js */ \"./node_modules/promise/lib/node-extensions.js\")\n\n//# sourceURL=webpack:///./node_modules/promise/index.js?");

/***/ }),

/***/ "./node_modules/promise/lib/core.js":
/*!******************************************!*\
  !*** ./node_modules/promise/lib/core.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar asap = __webpack_require__(/*! asap */ \"./node_modules/asap/asap.js\")\n\nmodule.exports = Promise;\nfunction Promise(fn) {\n  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new')\n  if (typeof fn !== 'function') throw new TypeError('not a function')\n  var state = null\n  var value = null\n  var deferreds = []\n  var self = this\n\n  this.then = function(onFulfilled, onRejected) {\n    return new self.constructor(function(resolve, reject) {\n      handle(new Handler(onFulfilled, onRejected, resolve, reject))\n    })\n  }\n\n  function handle(deferred) {\n    if (state === null) {\n      deferreds.push(deferred)\n      return\n    }\n    asap(function() {\n      var cb = state ? deferred.onFulfilled : deferred.onRejected\n      if (cb === null) {\n        (state ? deferred.resolve : deferred.reject)(value)\n        return\n      }\n      var ret\n      try {\n        ret = cb(value)\n      }\n      catch (e) {\n        deferred.reject(e)\n        return\n      }\n      deferred.resolve(ret)\n    })\n  }\n\n  function resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then\n        if (typeof then === 'function') {\n          doResolve(then.bind(newValue), resolve, reject)\n          return\n        }\n      }\n      state = true\n      value = newValue\n      finale()\n    } catch (e) { reject(e) }\n  }\n\n  function reject(newValue) {\n    state = false\n    value = newValue\n    finale()\n  }\n\n  function finale() {\n    for (var i = 0, len = deferreds.length; i < len; i++)\n      handle(deferreds[i])\n    deferreds = null\n  }\n\n  doResolve(fn, resolve, reject)\n}\n\n\nfunction Handler(onFulfilled, onRejected, resolve, reject){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null\n  this.resolve = resolve\n  this.reject = reject\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n  var done = false;\n  try {\n    fn(function (value) {\n      if (done) return\n      done = true\n      onFulfilled(value)\n    }, function (reason) {\n      if (done) return\n      done = true\n      onRejected(reason)\n    })\n  } catch (ex) {\n    if (done) return\n    done = true\n    onRejected(ex)\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/promise/lib/core.js?");

/***/ }),

/***/ "./node_modules/promise/lib/done.js":
/*!******************************************!*\
  !*** ./node_modules/promise/lib/done.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Promise = __webpack_require__(/*! ./core.js */ \"./node_modules/promise/lib/core.js\")\nvar asap = __webpack_require__(/*! asap */ \"./node_modules/asap/asap.js\")\n\nmodule.exports = Promise\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this\n  self.then(null, function (err) {\n    asap(function () {\n      throw err\n    })\n  })\n}\n\n//# sourceURL=webpack:///./node_modules/promise/lib/done.js?");

/***/ }),

/***/ "./node_modules/promise/lib/es6-extensions.js":
/*!****************************************************!*\
  !*** ./node_modules/promise/lib/es6-extensions.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(/*! ./core.js */ \"./node_modules/promise/lib/core.js\")\nvar asap = __webpack_require__(/*! asap */ \"./node_modules/asap/asap.js\")\n\nmodule.exports = Promise\n\n/* Static Functions */\n\nfunction ValuePromise(value) {\n  this.then = function (onFulfilled) {\n    if (typeof onFulfilled !== 'function') return this\n    return new Promise(function (resolve, reject) {\n      asap(function () {\n        try {\n          resolve(onFulfilled(value))\n        } catch (ex) {\n          reject(ex);\n        }\n      })\n    })\n  }\n}\nValuePromise.prototype = Promise.prototype\n\nvar TRUE = new ValuePromise(true)\nvar FALSE = new ValuePromise(false)\nvar NULL = new ValuePromise(null)\nvar UNDEFINED = new ValuePromise(undefined)\nvar ZERO = new ValuePromise(0)\nvar EMPTYSTRING = new ValuePromise('')\n\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value\n\n  if (value === null) return NULL\n  if (value === undefined) return UNDEFINED\n  if (value === true) return TRUE\n  if (value === false) return FALSE\n  if (value === 0) return ZERO\n  if (value === '') return EMPTYSTRING\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value))\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex)\n      })\n    }\n  }\n\n  return new ValuePromise(value)\n}\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr)\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([])\n    var remaining = args.length\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then\n          if (typeof then === 'function') {\n            then.call(val, function (val) { res(i, val) }, reject)\n            return\n          }\n        }\n        args[i] = val\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex)\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i])\n    }\n  })\n}\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) { \n    reject(value);\n  });\n}\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) { \n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    })\n  });\n}\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n}\n\n\n//# sourceURL=webpack:///./node_modules/promise/lib/es6-extensions.js?");

/***/ }),

/***/ "./node_modules/promise/lib/node-extensions.js":
/*!*****************************************************!*\
  !*** ./node_modules/promise/lib/node-extensions.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//This file contains then/promise specific extensions that are only useful for node.js interop\n\nvar Promise = __webpack_require__(/*! ./core.js */ \"./node_modules/promise/lib/core.js\")\nvar asap = __webpack_require__(/*! asap */ \"./node_modules/asap/asap.js\")\n\nmodule.exports = Promise\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  argumentCount = argumentCount || Infinity\n  return function () {\n    var self = this\n    var args = Array.prototype.slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      while (args.length && args.length > argumentCount) {\n        args.pop()\n      }\n      args.push(function (err, res) {\n        if (err) reject(err)\n        else resolve(res)\n      })\n      var res = fn.apply(self, args)\n      if (res && (typeof res === 'object' || typeof res === 'function') && typeof res.then === 'function') {\n        resolve(res)\n      }\n    })\n  }\n}\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments)\n    var callback = typeof args[args.length - 1] === 'function' ? args.pop() : null\n    var ctx = this\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx)\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) { reject(ex) })\n      } else {\n        asap(function () {\n          callback.call(ctx, ex)\n        })\n      }\n    }\n  }\n}\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value)\n    })\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err)\n    })\n  })\n}\n\n\n//# sourceURL=webpack:///./node_modules/promise/lib/node-extensions.js?");

/***/ }),

/***/ "./node_modules/scriptjs/dist/script.js":
/*!**********************************************!*\
  !*** ./node_modules/scriptjs/dist/script.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if ( true && module.exports) module.exports = definition()\n  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else {}\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n\n\n//# sourceURL=webpack:///./node_modules/scriptjs/dist/script.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });